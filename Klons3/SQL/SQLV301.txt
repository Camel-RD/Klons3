SET TERM ^ ;

ALTER PROCEDURE SP_A_FP_PAYLISTS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_FP_PAYLISTS.ID */ INTEGER,
  SNR /* TYPE OF COLUMN A_FP_PAYLISTS.SNR */ INTEGER,
  YR /* TYPE OF COLUMN A_FP_PAYLISTS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_FP_PAYLISTS.MT */ INTEGER,
  PAYDATE /* TYPE OF COLUMN A_FP_PAYLISTS.PAYDATE */ DATE,
  DESCR /* TYPE OF COLUMN A_FP_PAYLISTS.DESCR */ VARCHAR(50))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_FP_PAYLISTS_PER_R_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_FP_PAYLISTS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_FP_PAYLISTS_R.IDS */ INTEGER,
  IDP /* TYPE OF COLUMN A_FP_PAYLISTS_R.IDP */ INTEGER,
  SNR /* TYPE OF COLUMN A_FP_PAYLISTS_R.SNR */ INTEGER,
  DATE1 /* TYPE OF COLUMN A_FP_PAYLISTS_R.DATE1 */ DATE,
  DATE2 /* TYPE OF COLUMN A_FP_PAYLISTS_R.DATE2 */ DATE,
  PAYDATE /* TYPE OF COLUMN A_FP_PAYLISTS_R.PAYDATE */ DATE,
  TAX_TP /* TYPE OF COLUMN A_FP_PAYLISTS_R.TAX_TP */ SMALLINT,
  INCOME_ID /* TYPE OF COLUMN A_FP_PAYLISTS_R.INCOME_ID */ VARCHAR(4),
  DESCR /* TYPE OF COLUMN A_FP_PAYLISTS_R.DESCR */ VARCHAR(50),
  PAY0 /* TYPE OF COLUMN A_FP_PAYLISTS_R.PAY0 */ NUMERIC(15,2),
  TAXED /* TYPE OF COLUMN A_FP_PAYLISTS_R.TAXED */ NUMERIC(15,2),
  NOSAI /* TYPE OF COLUMN A_FP_PAYLISTS_R.NOSAI */ NUMERIC(15,2),
  NOTTAXED /* TYPE OF COLUMN A_FP_PAYLISTS_R.NOTTAXED */ NUMERIC(15,2),
  AUTHORS_FEE /* TYPE OF COLUMN A_FP_PAYLISTS_R.AUTHORS_FEE */ NUMERIC(15,2),
  SIRATETP /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATETP */ SMALLINT,
  SIRATEDD /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATEDD */ NUMERIC(15,2),
  SIRATEDN /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATEDN */ NUMERIC(15,2),
  SIDD /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIDD */ NUMERIC(15,2),
  SIDN /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIDN */ NUMERIC(15,2),
  IINEX_PERC /* TYPE OF COLUMN A_FP_PAYLISTS_R.IINEX_PERC */ NUMERIC(15,2),
  IINEX /* TYPE OF COLUMN A_FP_PAYLISTS_R.IINEX */ NUMERIC(15,2),
  IIN_FROM /* TYPE OF COLUMN A_FP_PAYLISTS_R.IIN_FROM */ NUMERIC(15,2),
  IIN_RATE /* TYPE OF COLUMN A_FP_PAYLISTS_R.IIN_RATE */ NUMERIC(15,2),
  IIN /* TYPE OF COLUMN A_FP_PAYLISTS_R.IIN */ NUMERIC(15,2),
  CASH /* TYPE OF COLUMN A_FP_PAYLISTS_R.CASH */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_PAYLISTS_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_PAYLISTS.ID */ INTEGER,
  SNR /* TYPE OF COLUMN A_PAYLISTS.SNR */ INTEGER,
  YR /* TYPE OF COLUMN A_PAYLISTS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_PAYLISTS.MT */ INTEGER,
  DT /* TYPE OF COLUMN A_PAYLISTS.DT */ DATE,
  DEP /* TYPE OF COLUMN A_PAYLISTS.DEP */ VARCHAR(15),
  DESCR /* TYPE OF COLUMN A_PAYLISTS.DESCR */ VARCHAR(50),
  DOPAY /* TYPE OF COLUMN A_PAYLISTS.DOPAY */ SMALLINT,
  TOTAL_PAY /* TYPE OF COLUMN A_PAYLISTS.TOTAL_PAY */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_PAYLISTS_R_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_PAYLISTS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_PAYLISTS_R.IDS */ INTEGER,
  IDP /* TYPE OF COLUMN A_PAYLISTS_R.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_PAYLISTS_R.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_PAYLISTS_R.SNR */ INTEGER,
  PAY0 /* TYPE OF COLUMN A_PAYLISTS_R.PAY0 */ NUMERIC(15,2),
  IIN0 /* TYPE OF COLUMN A_PAYLISTS_R.IIN0 */ NUMERIC(15,2),
  ADVANCE0 /* TYPE OF COLUMN A_PAYLISTS_R.ADVANCE0 */ NUMERIC(15,2),
  WITHHOLDINGS0 /* TYPE OF COLUMN A_PAYLISTS_R.WITHHOLDINGS0 */ NUMERIC(15,2),
  TPAY0 /* TYPE OF COLUMN A_PAYLISTS_R.TPAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_PAYLISTS_R.PAY */ NUMERIC(15,2),
  IIN /* TYPE OF COLUMN A_PAYLISTS_R.IIN */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_PAYLISTS_R.ADVANCE */ NUMERIC(15,2),
  WITHHOLDINGS /* TYPE OF COLUMN A_PAYLISTS_R.WITHHOLDINGS */ NUMERIC(15,2),
  TPAY /* TYPE OF COLUMN A_PAYLISTS_R.TPAY */ NUMERIC(15,2),
  PAY_REVERSE /* TYPE OF COLUMN A_PAYLISTS_R.PAY_REVERSE */ NUMERIC(15,2),
  IIN_REVERSE /* TYPE OF COLUMN A_PAYLISTS_R.IIN_REVERSE */ NUMERIC(15,2),
  DT1 /* TYPE OF COLUMN A_PAYLISTS_R.DT1 */ DATE,
  DT2 /* TYPE OF COLUMN A_PAYLISTS_R.DT2 */ DATE,
  R1 /* TYPE OF COLUMN A_PAYLISTS_R.R1 */ FLOAT,
  R2 /* TYPE OF COLUMN A_PAYLISTS_R.R2 */ FLOAT,
  S0 /* TYPE OF COLUMN A_PAYLISTS_R.S0 */ NUMERIC(15,2),
  S1 /* TYPE OF COLUMN A_PAYLISTS_R.S1 */ NUMERIC(15,2),
  S2 /* TYPE OF COLUMN A_PAYLISTS_R.S2 */ NUMERIC(15,2),
  ID_SHR_1 /* TYPE OF COLUMN A_PAYLISTS_R.ID_SHR_1 */ INTEGER,
  ID_SHR_2 /* TYPE OF COLUMN A_PAYLISTS_R.ID_SHR_2 */ INTEGER,
  PAY_TAXED_1 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_TAXED_1 */ NUMERIC(15,2),
  PAY_NOSAI_1 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOSAI_1 */ NUMERIC(15,2),
  PAY_NOTTAXED_1 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOTTAXED_1 */ NUMERIC(15,2),
  UNTAXED_MINIMUM_1 /* TYPE OF COLUMN A_PAYLISTS_R.UNTAXED_MINIMUM_1 */ NUMERIC(15,2),
  IINEX_DEPENDANTS_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_DEPENDANTS_1 */ NUMERIC(15,2),
  IINEX2_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_1 */ NUMERIC(15,2),
  IINEX2_TP_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_TP_1 */ SMALLINT,
  DNSI_1 /* TYPE OF COLUMN A_PAYLISTS_R.DNSI_1 */ NUMERIC(15,2),
  PFNT_1 /* TYPE OF COLUMN A_PAYLISTS_R.PFNT_1 */ NUMERIC(15,2),
  LINT_1 /* TYPE OF COLUMN A_PAYLISTS_R.LINT_1 */ NUMERIC(15,2),
  HINT_1 /* TYPE OF COLUMN A_PAYLISTS_R.HINT_1 */ NUMERIC(15,2),
  IINEX_EXP_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_EXP_1 */ NUMERIC(15,2),
  IIN_1 /* TYPE OF COLUMN A_PAYLISTS_R.IIN_1 */ NUMERIC(15,2),
  PAY_TAXED_2 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_TAXED_2 */ NUMERIC(15,2),
  PAY_NOSAI_2 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOSAI_2 */ NUMERIC(15,2),
  PAY_NOTTAXED_2 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOTTAXED_2 */ NUMERIC(15,2),
  UNTAXED_MINIMUM_2 /* TYPE OF COLUMN A_PAYLISTS_R.UNTAXED_MINIMUM_2 */ NUMERIC(15,2),
  IINEX_DEPENDANTS_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_DEPENDANTS_2 */ NUMERIC(15,2),
  IINEX2_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_2 */ NUMERIC(15,2),
  IINEX2_TP_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_TP_2 */ SMALLINT,
  DNSI_2 /* TYPE OF COLUMN A_PAYLISTS_R.DNSI_2 */ NUMERIC(15,2),
  PFNT_2 /* TYPE OF COLUMN A_PAYLISTS_R.PFNT_2 */ NUMERIC(15,2),
  LINT_2 /* TYPE OF COLUMN A_PAYLISTS_R.LINT_2 */ NUMERIC(15,2),
  HINT_2 /* TYPE OF COLUMN A_PAYLISTS_R.HINT_2 */ NUMERIC(15,2),
  IINEX_EXP_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_EXP_2 */ NUMERIC(15,2),
  IIN_2 /* TYPE OF COLUMN A_PAYLISTS_R.IIN_2 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_PIECEWORK_PER_01(
  PDT1 DATE,
  PDT2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_PIECEWORK.ID */ INTEGER,
  IDK /* TYPE OF COLUMN A_PIECEWORK.IDK */ INTEGER,
  IDP /* TYPE OF COLUMN A_PIECEWORK.IDP */ INTEGER,
  IDA /* TYPE OF COLUMN A_PIECEWORK.IDA */ INTEGER,
  DT /* TYPE OF COLUMN A_PIECEWORK.DT */ DATE,
  UNIT /* TYPE OF COLUMN A_PIECEWORK.UNIT */ VARCHAR(10),
  QUANTITY /* TYPE OF COLUMN A_PIECEWORK.QUANTITY */ NUMERIC(13,4),
  RATE /* TYPE OF COLUMN A_PIECEWORK.RATE */ NUMERIC(13,4),
  BONUS /* TYPE OF COLUMN A_PIECEWORK.BONUS */ FLOAT,
  PAY /* TYPE OF COLUMN A_PIECEWORK.PAY */ NUMERIC(13,4),
  TIMEUNIT /* TYPE OF COLUMN A_PIECEWORK.TIMEUNIT */ INTEGER,
  TIMEUSE /* TYPE OF COLUMN A_PIECEWORK.TIMEUSE */ FLOAT,
  TIMEUSEINHOURS /* TYPE OF COLUMN A_PIECEWORK.TIMEUSEINHOURS */ FLOAT)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_POSITIONS_PLUSMINUS_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.ID */ INTEGER,
  IDP /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDP */ INTEGER,
  IDA /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDA */ INTEGER,
  DATE1 /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DATE1 */ DATE,
  DATE2 /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DATE2 */ DATE,
  IDSV /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDSV */ INTEGER,
  IDNO /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDNO */ INTEGER,
  IDIE /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDIE */ INTEGER,
  DESCR /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DESCR */ VARCHAR(50),
  RATE /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.RATE */ NUMERIC(15,2),
  RATE_TYPE /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.RATE_TYPE */ SMALLINT,
  IS_INAVPAY /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_INAVPAY */ SMALLINT,
  IS_PAID /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_PAID */ SMALLINT)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_PLUSMINUS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_SALARY_PLUSMINUS.ID */ INTEGER,
  IDP /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDP */ INTEGER,
  IDA /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDA */ INTEGER,
  IDAP /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDAP */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDSX */ INTEGER,
  IDSV /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDSV */ INTEGER,
  IDNO /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDNO */ INTEGER,
  IDIE /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDIE */ INTEGER,
  DESCR /* TYPE OF COLUMN A_SALARY_PLUSMINUS.DESCR */ VARCHAR(50),
  RATE /* TYPE OF COLUMN A_SALARY_PLUSMINUS.RATE */ NUMERIC(15,2),
  RATE_TYPE /* TYPE OF COLUMN A_SALARY_PLUSMINUS.RATE_TYPE */ SMALLINT,
  AMOUNT /* TYPE OF COLUMN A_SALARY_PLUSMINUS.AMOUNT */ NUMERIC(15,2),
  IS_INAVPAY /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_INAVPAY */ SMALLINT,
  IS_PAID /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_PAID */ SMALLINT)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_SALARY_SHEETS.ID */ INTEGER,
  YR /* TYPE OF COLUMN A_SALARY_SHEETS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_SALARY_SHEETS.MT */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS.SNR */ SMALLINT,
  DT1 /* TYPE OF COLUMN A_SALARY_SHEETS.DT1 */ DATE,
  DT2 /* TYPE OF COLUMN A_SALARY_SHEETS.DT2 */ DATE,
  DESCR /* TYPE OF COLUMN A_SALARY_SHEETS.DESCR */ VARCHAR(50),
  DEP /* TYPE OF COLUMN A_SALARY_SHEETS.DEP */ VARCHAR(15),
  KIND /* TYPE OF COLUMN A_SALARY_SHEETS.KIND */ SMALLINT,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS.IS_TEMP */ SMALLINT)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_HIST_01(
  PID INTEGER)
RETURNS (
  IDH /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  ID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDS */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDSX */ INTEGER,
  IDST /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDST */ INTEGER,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IS_TEMP */ SMALLINT,
  TYPE_TAG /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TYPE_TAG */ SMALLINT,
  IDP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SNR */ SMALLINT,
  FNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FNAME */ VARCHAR(20),
  LNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.LNAME */ VARCHAR(20),
  POSITION_TITLE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.POSITION_TITLE */ VARCHAR(50),
  TERRITORIAL_CODE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TERRITORIAL_CODE */ VARCHAR(20),
  CALENDAR_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS */ INTEGER,
  CALENDAR_DAYS_USE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS_USE */ INTEGER,
  MONTH_WORKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKDAYS */ INTEGER,
  MONTH_WORKHOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKHOURS */ FLOAT,
  PLAN_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_DAYS */ INTEGER,
  PLAN_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS */ FLOAT,
  PLAN_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_NIGHT */ FLOAT,
  PLAN_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_OVERTIME */ FLOAT,
  FACT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_DAYS */ INTEGER,
  FACT_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS */ FLOAT,
  FACT_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_NIGHT */ FLOAT,
  FACT_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_OVERTIME */ FLOAT,
  PLAN_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_DAYS */ INTEGER,
  PLAN_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS */ FLOAT,
  PLAN_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_NIGHT */ FLOAT,
  PLAN_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_OVERTIME */ FLOAT,
  FACT_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_DAYS */ INTEGER,
  FACT_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS */ FLOAT,
  FACT_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_NIGHT */ FLOAT,
  FACT_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_OVERTIME */ FLOAT,
  PLAN_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_DAYS */ INTEGER,
  PLAN_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS */ FLOAT,
  PLAN_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  PLAN_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  FACT_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_DAYS */ INTEGER,
  FACT_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS */ FLOAT,
  FACT_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  FACT_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  SALARY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY */ NUMERIC(15,2),
  SALARY_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_DAY */ NUMERIC(15,2),
  SALARY_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_NIGHT */ NUMERIC(15,2),
  SALARY_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_OVERTIME */ NUMERIC(15,2),
  SALARY_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_PIECEWORK /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PIECEWORK */ NUMERIC(15,2),
  SICKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS */ INTEGER,
  SICKDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS_PAY */ NUMERIC(15,2),
  ACCIDENT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_DAYS */ INTEGER,
  ACCIDENT_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_PAY */ NUMERIC(15,2),
  AVERAGE_INCOME_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_DAYS */ INTEGER,
  AVERAGE_INCOME_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_PAY */ NUMERIC(15,2),
  FACT_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_DAYS */ INTEGER,
  FACT_AVPAY_FREE_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_HOURS */ FLOAT,
  FACT_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORK_DAYS */ INTEGER,
  FACT_AVPAY_WORKINHOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORKINHOLIDAYS */ INTEGER,
  FACT_AVPAY_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS */ FLOAT,
  FACT_AVPAY_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS_OVERTIME */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS_OVERT */ FLOAT,
  SALARY_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_FREE_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  BUSINESS_TRIP_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_DAYS */ INTEGER,
  BUSINESS_TRIP_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_PAY */ NUMERIC(15,2),
  PAID_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS */ INTEGER,
  PAID_HOLIDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS_PAY */ NUMERIC(15,2),
  VACATION_DAYS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_CURRENT */ FLOAT,
  VACATION_DAYS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_NEXT */ FLOAT,
  VACATION_HOURS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_CURRENT */ FLOAT,
  VACATION_HOURS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_NEXT */ FLOAT,
  VACATION_PAY_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_CURRENT */ NUMERIC(15,2),
  VACATION_PAY_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_NEXT */ NUMERIC(15,2),
  VACATION_DNS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_NEXT */ NUMERIC(15,2),
  VACATION_DDS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_NEXT */ NUMERIC(15,2),
  VACATION_IIN_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_NEXT */ NUMERIC(15,2),
  VACATION_IIN_REDUCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_REDUCE_NEXT */ NUMERIC(15,2),
  VACATION_CASH_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_CASH_NEXT */ NUMERIC(15,2),
  VACATION_PAY_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_PREV */ NUMERIC(15,2),
  VACATION_DNS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_PREV */ NUMERIC(15,2),
  VACATION_DDS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_PREV */ NUMERIC(15,2),
  VACATION_IIN_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_PREV */ NUMERIC(15,2),
  VACATION_DAYS_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_COMP */ FLOAT,
  VACATION_PAY_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_COMP */ NUMERIC(15,2),
  PLUS_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_TAXED */ NUMERIC(15,2),
  PLUS_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOTTAXED */ NUMERIC(15,2),
  PLUS_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOSAI */ NUMERIC(15,2),
  PLUS_AUTHORS_FEES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_AUTHORS_FEES */ NUMERIC(15,2),
  MINUS_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_BEFORE_IIN */ NUMERIC(15,2),
  MINUS_AFTER_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_AFTER_IIN */ NUMERIC(15,2),
  PLUS_PF_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_NOTTAXED */ NUMERIC(15,2),
  PLUS_PF_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_TAXED */ NUMERIC(15,2),
  PLUS_LI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_NOTTAXED */ NUMERIC(15,2),
  PLUS_LI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_TAXED */ NUMERIC(15,2),
  PLUS_HI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_NOTTAXED */ NUMERIC(15,2),
  PLUS_HI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_TAXED */ NUMERIC(15,2),
  PLUS_NP_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_TAXED */ NUMERIC(15,2),
  PLUS_NP_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOTTAXED */ NUMERIC(15,2),
  PLUS_NP_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOSAI */ NUMERIC(15,2),
  TOTAL_BEFORE_TAXES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TOTAL_BEFORE_TAXES */ NUMERIC(15,2),
  ADJUSTED_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADJUSTED_AMOUNT */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN_REVERSE */ NUMERIC(15,2),
  RATE_DNSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DNSN */ NUMERIC(15,2),
  RATE_DDSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DDSN */ NUMERIC(15,2),
  DNSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT */ NUMERIC(15,2),
  DDSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT */ NUMERIC(15,2),
  SN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_AMOUNT */ NUMERIC(15,2),
  DNSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  DDSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  SN_MAX_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_MAX_AMOUNT */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM0 */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS0 */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION0 */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY0 */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT0 */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT */ NUMERIC(15,2),
  IIN_EXEMPT_EXPENSES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_EXPENSES */ NUMERIC(15,2),
  IIN_EXEMPT_2TP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2TP */ SMALLINT,
  IIN_EXEMPT_20 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_20 */ NUMERIC(15,2),
  IIN_EXEMPT_2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2 */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN_REVERSE */ NUMERIC(15,2),
  RATE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN */ NUMERIC(15,2),
  RATE_IIN2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN2 */ NUMERIC(15,2),
  IIN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT */ NUMERIC(15,2),
  IIN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT_REVERSE */ NUMERIC(15,2),
  URVN_AMAOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.URVN_AMAOUNT */ NUMERIC(15,2),
  PLUS_NOT_PAID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOT_PAID */ NUMERIC(15,2),
  VACATION_ADVANCE_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_CURRENT */ NUMERIC(15,2),
  VACATION_ADVANCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_NEXT */ NUMERIC(15,2),
  VACATION_ADVANCE_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_PREV */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADVANCE */ NUMERIC(15,2),
  PAY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY */ NUMERIC(15,2),
  PAYT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAYT */ NUMERIC(15,2),
  PAY_DATE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY_DATE */ DATE,
  COMMENTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.COMMENTS */ VARCHAR(255),
  WITHHOLD_FROM_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.WITHHOLD_FROM_PAY */ NUMERIC(15,2),
  FORAVPAYCALC_BRUTO /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_BRUTO */ NUMERIC(15,2),
  FORAVPAYCALC_PAYOUT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_PAYOUT */ NUMERIC(15,2),
  FORAVPAYCALC_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_DAYS */ INTEGER,
  FORAVPAYCALC_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_HOURS */ FLOAT,
  AVPAYCALC_CALDAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_CALDAY */ NUMERIC(13,4),
  AVPAYCALC_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_DAY */ NUMERIC(13,4),
  AVPAYCALC_HOUR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_HOUR */ NUMERIC(13,4),
  DT_EDITED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DT_EDITED */ TIMESTAMP,
  CALC_VER /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALC_VER */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_HIST_02(
  PIDSX INTEGER,
  PTIME1 TIMESTAMP,
  PTIME2 TIMESTAMP)
RETURNS (
  IDH /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  ID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDS */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDSX */ INTEGER,
  IDST /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDST */ INTEGER,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IS_TEMP */ SMALLINT,
  TYPE_TAG /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TYPE_TAG */ SMALLINT,
  IDP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SNR */ SMALLINT,
  FNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FNAME */ VARCHAR(20),
  LNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.LNAME */ VARCHAR(20),
  POSITION_TITLE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.POSITION_TITLE */ VARCHAR(50),
  TERRITORIAL_CODE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TERRITORIAL_CODE */ VARCHAR(20),
  CALENDAR_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS */ INTEGER,
  CALENDAR_DAYS_USE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS_USE */ INTEGER,
  MONTH_WORKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKDAYS */ INTEGER,
  MONTH_WORKHOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKHOURS */ FLOAT,
  PLAN_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_DAYS */ INTEGER,
  PLAN_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS */ FLOAT,
  PLAN_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_NIGHT */ FLOAT,
  PLAN_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_OVERTIME */ FLOAT,
  FACT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_DAYS */ INTEGER,
  FACT_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS */ FLOAT,
  FACT_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_NIGHT */ FLOAT,
  FACT_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_OVERTIME */ FLOAT,
  PLAN_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_DAYS */ INTEGER,
  PLAN_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS */ FLOAT,
  PLAN_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_NIGHT */ FLOAT,
  PLAN_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_OVERTIME */ FLOAT,
  FACT_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_DAYS */ INTEGER,
  FACT_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS */ FLOAT,
  FACT_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_NIGHT */ FLOAT,
  FACT_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_OVERTIME */ FLOAT,
  PLAN_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_DAYS */ INTEGER,
  PLAN_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS */ FLOAT,
  PLAN_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  PLAN_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  FACT_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_DAYS */ INTEGER,
  FACT_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS */ FLOAT,
  FACT_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  FACT_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  SALARY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY */ NUMERIC(15,2),
  SALARY_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_DAY */ NUMERIC(15,2),
  SALARY_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_NIGHT */ NUMERIC(15,2),
  SALARY_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_OVERTIME */ NUMERIC(15,2),
  SALARY_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_PIECEWORK /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PIECEWORK */ NUMERIC(15,2),
  SICKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS */ INTEGER,
  SICKDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS_PAY */ NUMERIC(15,2),
  ACCIDENT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_DAYS */ INTEGER,
  ACCIDENT_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_PAY */ NUMERIC(15,2),
  AVERAGE_INCOME_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_DAYS */ INTEGER,
  AVERAGE_INCOME_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_PAY */ NUMERIC(15,2),
  FACT_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_DAYS */ INTEGER,
  FACT_AVPAY_FREE_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_HOURS */ FLOAT,
  FACT_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORK_DAYS */ INTEGER,
  FACT_AVPAY_WORKINHOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORKINHOLIDAYS */ INTEGER,
  FACT_AVPAY_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS */ FLOAT,
  FACT_AVPAY_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS_OVERTIME */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS_OVERT */ FLOAT,
  SALARY_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_FREE_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  BUSINESS_TRIP_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_DAYS */ INTEGER,
  BUSINESS_TRIP_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_PAY */ NUMERIC(15,2),
  PAID_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS */ INTEGER,
  PAID_HOLIDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS_PAY */ NUMERIC(15,2),
  VACATION_DAYS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_CURRENT */ FLOAT,
  VACATION_DAYS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_NEXT */ FLOAT,
  VACATION_HOURS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_CURRENT */ FLOAT,
  VACATION_HOURS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_NEXT */ FLOAT,
  VACATION_PAY_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_CURRENT */ NUMERIC(15,2),
  VACATION_PAY_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_NEXT */ NUMERIC(15,2),
  VACATION_DNS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_NEXT */ NUMERIC(15,2),
  VACATION_DDS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_NEXT */ NUMERIC(15,2),
  VACATION_IIN_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_NEXT */ NUMERIC(15,2),
  VACATION_IIN_REDUCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_REDUCE_NEXT */ NUMERIC(15,2),
  VACATION_CASH_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_CASH_NEXT */ NUMERIC(15,2),
  VACATION_PAY_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_PREV */ NUMERIC(15,2),
  VACATION_DNS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_PREV */ NUMERIC(15,2),
  VACATION_DDS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_PREV */ NUMERIC(15,2),
  VACATION_IIN_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_PREV */ NUMERIC(15,2),
  VACATION_DAYS_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_COMP */ FLOAT,
  VACATION_PAY_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_COMP */ NUMERIC(15,2),
  PLUS_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_TAXED */ NUMERIC(15,2),
  PLUS_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOTTAXED */ NUMERIC(15,2),
  PLUS_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOSAI */ NUMERIC(15,2),
  PLUS_AUTHORS_FEES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_AUTHORS_FEES */ NUMERIC(15,2),
  MINUS_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_BEFORE_IIN */ NUMERIC(15,2),
  MINUS_AFTER_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_AFTER_IIN */ NUMERIC(15,2),
  PLUS_PF_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_NOTTAXED */ NUMERIC(15,2),
  PLUS_PF_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_TAXED */ NUMERIC(15,2),
  PLUS_LI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_NOTTAXED */ NUMERIC(15,2),
  PLUS_LI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_TAXED */ NUMERIC(15,2),
  PLUS_HI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_NOTTAXED */ NUMERIC(15,2),
  PLUS_HI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_TAXED */ NUMERIC(15,2),
  PLUS_NP_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_TAXED */ NUMERIC(15,2),
  PLUS_NP_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOTTAXED */ NUMERIC(15,2),
  PLUS_NP_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOSAI */ NUMERIC(15,2),
  TOTAL_BEFORE_TAXES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TOTAL_BEFORE_TAXES */ NUMERIC(15,2),
  ADJUSTED_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADJUSTED_AMOUNT */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN_REVERSE */ NUMERIC(15,2),
  RATE_DNSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DNSN */ NUMERIC(15,2),
  RATE_DDSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DDSN */ NUMERIC(15,2),
  DNSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT */ NUMERIC(15,2),
  DDSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT */ NUMERIC(15,2),
  SN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_AMOUNT */ NUMERIC(15,2),
  DNSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  DDSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  SN_MAX_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_MAX_AMOUNT */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM0 */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS0 */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION0 */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY0 */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT0 */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT */ NUMERIC(15,2),
  IIN_EXEMPT_EXPENSES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_EXPENSES */ NUMERIC(15,2),
  IIN_EXEMPT_2TP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2TP */ SMALLINT,
  IIN_EXEMPT_20 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_20 */ NUMERIC(15,2),
  IIN_EXEMPT_2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2 */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN_REVERSE */ NUMERIC(15,2),
  RATE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN */ NUMERIC(15,2),
  RATE_IIN2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN2 */ NUMERIC(15,2),
  IIN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT */ NUMERIC(15,2),
  IIN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT_REVERSE */ NUMERIC(15,2),
  URVN_AMAOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.URVN_AMAOUNT */ NUMERIC(15,2),
  PLUS_NOT_PAID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOT_PAID */ NUMERIC(15,2),
  VACATION_ADVANCE_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_CURRENT */ NUMERIC(15,2),
  VACATION_ADVANCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_NEXT */ NUMERIC(15,2),
  VACATION_ADVANCE_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_PREV */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADVANCE */ NUMERIC(15,2),
  PAY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY */ NUMERIC(15,2),
  PAYT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAYT */ NUMERIC(15,2),
  PAY_DATE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY_DATE */ DATE,
  COMMENTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.COMMENTS */ VARCHAR(255),
  WITHHOLD_FROM_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.WITHHOLD_FROM_PAY */ NUMERIC(15,2),
  FORAVPAYCALC_BRUTO /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_BRUTO */ NUMERIC(15,2),
  FORAVPAYCALC_PAYOUT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_PAYOUT */ NUMERIC(15,2),
  FORAVPAYCALC_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_DAYS */ INTEGER,
  FORAVPAYCALC_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_HOURS */ FLOAT,
  AVPAYCALC_CALDAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_CALDAY */ NUMERIC(13,4),
  AVPAYCALC_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_DAY */ NUMERIC(13,4),
  AVPAYCALC_HOUR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_HOUR */ NUMERIC(13,4),
  DT_EDITED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DT_EDITED */ TIMESTAMP,
  CALC_VER /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALC_VER */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_SALARY_SHEETS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDS */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDSX */ INTEGER,
  IDST /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDST */ INTEGER,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS_R.IS_TEMP */ SMALLINT,
  TYPE_TAG /* TYPE OF COLUMN A_SALARY_SHEETS_R.TYPE_TAG */ SMALLINT,
  IDP /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS_R.SNR */ SMALLINT,
  FNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FNAME */ VARCHAR(20),
  LNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R.LNAME */ VARCHAR(20),
  POSITION_TITLE /* TYPE OF COLUMN A_SALARY_SHEETS_R.POSITION_TITLE */ VARCHAR(50),
  TERRITORIAL_CODE /* TYPE OF COLUMN A_SALARY_SHEETS_R.TERRITORIAL_CODE */ VARCHAR(20),
  CALENDAR_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.CALENDAR_DAYS */ INTEGER,
  CALENDAR_DAYS_USE /* TYPE OF COLUMN A_SALARY_SHEETS_R.CALENDAR_DAYS_USE */ INTEGER,
  MONTH_WORKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.MONTH_WORKDAYS */ INTEGER,
  MONTH_WORKHOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.MONTH_WORKHOURS */ FLOAT,
  PLAN_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_DAYS */ INTEGER,
  PLAN_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS */ FLOAT,
  PLAN_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS_NIGHT */ FLOAT,
  PLAN_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS_OVERTIME */ FLOAT,
  FACT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_DAYS */ INTEGER,
  FACT_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS */ FLOAT,
  FACT_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS_NIGHT */ FLOAT,
  FACT_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS_OVERTIME */ FLOAT,
  PLAN_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_DAYS */ INTEGER,
  PLAN_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS */ FLOAT,
  PLAN_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS_NIGHT */ FLOAT,
  PLAN_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS_OVERTIME */ FLOAT,
  FACT_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_DAYS */ INTEGER,
  FACT_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS */ FLOAT,
  FACT_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS_NIGHT */ FLOAT,
  FACT_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS_OVERTIME */ FLOAT,
  PLAN_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_DAYS */ INTEGER,
  PLAN_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS */ FLOAT,
  PLAN_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  PLAN_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  FACT_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_DAYS */ INTEGER,
  FACT_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS */ FLOAT,
  FACT_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  FACT_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  SALARY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY */ NUMERIC(15,2),
  SALARY_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_DAY */ NUMERIC(15,2),
  SALARY_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_NIGHT */ NUMERIC(15,2),
  SALARY_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_OVERTIME */ NUMERIC(15,2),
  SALARY_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PAID_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PAID_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_PIECEWORK /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PIECEWORK */ NUMERIC(15,2),
  SICKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SICKDAYS */ INTEGER,
  SICKDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SICKDAYS_PAY */ NUMERIC(15,2),
  ACCIDENT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.ACCIDENT_DAYS */ INTEGER,
  ACCIDENT_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.ACCIDENT_PAY */ NUMERIC(15,2),
  AVERAGE_INCOME_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVERAGE_INCOME_DAYS */ INTEGER,
  AVERAGE_INCOME_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVERAGE_INCOME_PAY */ NUMERIC(15,2),
  FACT_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_FREE_DAYS */ INTEGER,
  FACT_AVPAY_FREE_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_FREE_HOURS */ FLOAT,
  FACT_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_WORK_DAYS */ INTEGER,
  FACT_AVPAY_WORKINHOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_WORKINHOLIDAYS */ INTEGER,
  FACT_AVPAY_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOURS */ FLOAT,
  FACT_AVPAY_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOURS_OVERTIME */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOLIDAYS_HOURS */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOLIDAYS_HOURS_OVERT */ FLOAT,
  SALARY_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_FREE_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_WORK_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_WORK_DAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_HOLIDAYS */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  BUSINESS_TRIP_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.BUSINESS_TRIP_DAYS */ INTEGER,
  BUSINESS_TRIP_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.BUSINESS_TRIP_PAY */ NUMERIC(15,2),
  PAID_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAID_HOLIDAYS */ INTEGER,
  PAID_HOLIDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAID_HOLIDAYS_PAY */ NUMERIC(15,2),
  VACATION_DAYS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_CURRENT */ FLOAT,
  VACATION_DAYS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_NEXT */ FLOAT,
  VACATION_HOURS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_HOURS_CURRENT */ FLOAT,
  VACATION_HOURS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_HOURS_NEXT */ FLOAT,
  VACATION_PAY_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_CURRENT */ NUMERIC(15,2),
  VACATION_PAY_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_NEXT */ NUMERIC(15,2),
  VACATION_DNS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DNS_NEXT */ NUMERIC(15,2),
  VACATION_DDS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DDS_NEXT */ NUMERIC(15,2),
  VACATION_IIN_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_NEXT */ NUMERIC(15,2),
  VACATION_IIN_REDUCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_REDUCE_NEXT */ NUMERIC(15,2),
  VACATION_CASH_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_CASH_NEXT */ NUMERIC(15,2),
  VACATION_PAY_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_PREV */ NUMERIC(15,2),
  VACATION_DNS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DNS_PREV */ NUMERIC(15,2),
  VACATION_DDS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DDS_PREV */ NUMERIC(15,2),
  VACATION_IIN_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_PREV */ NUMERIC(15,2),
  VACATION_DAYS_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_COMP */ FLOAT,
  VACATION_PAY_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_COMP */ NUMERIC(15,2),
  PLUS_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_TAXED */ NUMERIC(15,2),
  PLUS_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOTTAXED */ NUMERIC(15,2),
  PLUS_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOSAI */ NUMERIC(15,2),
  PLUS_AUTHORS_FEES /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_AUTHORS_FEES */ NUMERIC(15,2),
  MINUS_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.MINUS_BEFORE_IIN */ NUMERIC(15,2),
  MINUS_AFTER_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.MINUS_AFTER_IIN */ NUMERIC(15,2),
  PLUS_PF_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_PF_NOTTAXED */ NUMERIC(15,2),
  PLUS_PF_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_PF_TAXED */ NUMERIC(15,2),
  PLUS_LI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_LI_NOTTAXED */ NUMERIC(15,2),
  PLUS_LI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_LI_TAXED */ NUMERIC(15,2),
  PLUS_HI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_HI_NOTTAXED */ NUMERIC(15,2),
  PLUS_HI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_HI_TAXED */ NUMERIC(15,2),
  PLUS_NP_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_TAXED */ NUMERIC(15,2),
  PLUS_NP_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_NOTTAXED */ NUMERIC(15,2),
  PLUS_NP_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_NOSAI */ NUMERIC(15,2),
  TOTAL_BEFORE_TAXES /* TYPE OF COLUMN A_SALARY_SHEETS_R.TOTAL_BEFORE_TAXES */ NUMERIC(15,2),
  ADJUSTED_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.ADJUSTED_AMOUNT */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_SN */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_SN_REVERSE */ NUMERIC(15,2),
  RATE_DNSN /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_DNSN */ NUMERIC(15,2),
  RATE_DDSN /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_DDSN */ NUMERIC(15,2),
  DNSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.DNSN_AMOUNT */ NUMERIC(15,2),
  DDSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.DDSN_AMOUNT */ NUMERIC(15,2),
  SN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SN_AMOUNT */ NUMERIC(15,2),
  DNSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.DNSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  DDSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.DDSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  SN_MAX_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SN_MAX_AMOUNT */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_UNTAXED_MINIMUM0 */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_DEPENDANTS0 */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_RETALIATION0 */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_INVALIDITY0 */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_NATIONAL_MOVEMENT0 */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_UNTAXED_MINIMUM */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_DEPENDANTS */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_RETALIATION */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_INVALIDITY */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_NATIONAL_MOVEMENT */ NUMERIC(15,2),
  IIN_EXEMPT_EXPENSES /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_EXPENSES */ NUMERIC(15,2),
  IIN_EXEMPT_2TP /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_2TP */ SMALLINT,
  IIN_EXEMPT_20 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_20 */ NUMERIC(15,2),
  IIN_EXEMPT_2 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_2 */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_IIN */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_IIN_REVERSE */ NUMERIC(15,2),
  RATE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_IIN */ NUMERIC(15,2),
  RATE_IIN2 /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_IIN2 */ NUMERIC(15,2),
  IIN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_AMOUNT */ NUMERIC(15,2),
  IIN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_AMOUNT_REVERSE */ NUMERIC(15,2),
  URVN_AMAOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.URVN_AMAOUNT */ NUMERIC(15,2),
  PLUS_NOT_PAID /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOT_PAID */ NUMERIC(15,2),
  VACATION_ADVANCE_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_CURRENT */ NUMERIC(15,2),
  VACATION_ADVANCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_NEXT */ NUMERIC(15,2),
  VACATION_ADVANCE_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_PREV */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_SALARY_SHEETS_R.ADVANCE */ NUMERIC(15,2),
  PAY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAY */ NUMERIC(15,2),
  PAYT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAYT */ NUMERIC(15,2),
  PAY_DATE /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAY_DATE */ DATE,
  COMMENTS /* TYPE OF COLUMN A_SALARY_SHEETS_R.COMMENTS */ VARCHAR(255),
  WITHHOLD_FROM_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.WITHHOLD_FROM_PAY */ NUMERIC(15,2),
  FORAVPAYCALC_BRUTO /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_BRUTO */ NUMERIC(15,2),
  FORAVPAYCALC_PAYOUT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_PAYOUT */ NUMERIC(15,2),
  FORAVPAYCALC_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_DAYS */ INTEGER,
  FORAVPAYCALC_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_HOURS */ FLOAT,
  AVPAYCALC_CALDAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_CALDAY */ NUMERIC(13,4),
  AVPAYCALC_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_DAY */ NUMERIC(13,4),
  AVPAYCALC_HOUR /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_HOUR */ NUMERIC(13,4),
  DT_EDITED /* TYPE OF COLUMN A_SALARY_SHEETS_R.DT_EDITED */ TIMESTAMP,
  CALC_VER /* TYPE OF COLUMN A_SALARY_SHEETS_R.CALC_VER */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_TIMESHEET_LISTS_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_TIMESHEET_LISTS.ID */ INTEGER,
  YR /* TYPE OF COLUMN A_TIMESHEET_LISTS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_TIMESHEET_LISTS.MT */ INTEGER,
  SNR /* TYPE OF COLUMN A_TIMESHEET_LISTS.SNR */ SMALLINT,
  DESCR /* TYPE OF COLUMN A_TIMESHEET_LISTS.DESCR */ VARCHAR(50),
  IDSH /* TYPE OF COLUMN A_TIMESHEET_LISTS.IDSH */ INTEGER,
  DEP /* TYPE OF COLUMN A_TIMESHEET_LISTS.DEP */ VARCHAR(15))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_TIMESHEET_LISTS_R_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDS */ INTEGER,
  IDP /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDAM */ INTEGER,
  IDPL /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDPL */ INTEGER,
  SNR /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.SNR */ SMALLINT,
  PLAN_TYPE /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.PLAN_TYPE */ SMALLINT,
  NIGHT /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.NIGHT */ SMALLINT,
  OVERTIME /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.OVERTIME */ SMALLINT)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_TIMESHEET_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_TIMESHEET.ID */ INTEGER,
  IDP /* TYPE OF COLUMN A_TIMESHEET.IDP */ INTEGER,
  IDL /* TYPE OF COLUMN A_TIMESHEET.IDL */ INTEGER,
  SNR /* TYPE OF COLUMN A_TIMESHEET.SNR */ SMALLINT,
  PERID /* TYPE OF COLUMN A_TIMESHEET.PERID */ INTEGER,
  AMID /* TYPE OF COLUMN A_TIMESHEET.AMID */ INTEGER,
  YR /* TYPE OF COLUMN A_TIMESHEET.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_TIMESHEET.MT */ INTEGER,
  KIND1 /* TYPE OF COLUMN A_TIMESHEET.KIND1 */ SMALLINT,
  KIND2 /* TYPE OF COLUMN A_TIMESHEET.KIND2 */ SMALLINT,
  V1 /* TYPE OF COLUMN A_TIMESHEET.V1 */ FLOAT,
  V2 /* TYPE OF COLUMN A_TIMESHEET.V2 */ FLOAT,
  V3 /* TYPE OF COLUMN A_TIMESHEET.V3 */ FLOAT,
  V4 /* TYPE OF COLUMN A_TIMESHEET.V4 */ FLOAT,
  V5 /* TYPE OF COLUMN A_TIMESHEET.V5 */ FLOAT,
  V6 /* TYPE OF COLUMN A_TIMESHEET.V6 */ FLOAT,
  V7 /* TYPE OF COLUMN A_TIMESHEET.V7 */ FLOAT,
  V8 /* TYPE OF COLUMN A_TIMESHEET.V8 */ FLOAT,
  V9 /* TYPE OF COLUMN A_TIMESHEET.V9 */ FLOAT,
  V10 /* TYPE OF COLUMN A_TIMESHEET.V10 */ FLOAT,
  V11 /* TYPE OF COLUMN A_TIMESHEET.V11 */ FLOAT,
  V12 /* TYPE OF COLUMN A_TIMESHEET.V12 */ FLOAT,
  V13 /* TYPE OF COLUMN A_TIMESHEET.V13 */ FLOAT,
  V14 /* TYPE OF COLUMN A_TIMESHEET.V14 */ FLOAT,
  V15 /* TYPE OF COLUMN A_TIMESHEET.V15 */ FLOAT,
  V16 /* TYPE OF COLUMN A_TIMESHEET.V16 */ FLOAT,
  V17 /* TYPE OF COLUMN A_TIMESHEET.V17 */ FLOAT,
  V18 /* TYPE OF COLUMN A_TIMESHEET.V18 */ FLOAT,
  V19 /* TYPE OF COLUMN A_TIMESHEET.V19 */ FLOAT,
  V20 /* TYPE OF COLUMN A_TIMESHEET.V20 */ FLOAT,
  V21 /* TYPE OF COLUMN A_TIMESHEET.V21 */ FLOAT,
  V22 /* TYPE OF COLUMN A_TIMESHEET.V22 */ FLOAT,
  V23 /* TYPE OF COLUMN A_TIMESHEET.V23 */ FLOAT,
  V24 /* TYPE OF COLUMN A_TIMESHEET.V24 */ FLOAT,
  V25 /* TYPE OF COLUMN A_TIMESHEET.V25 */ FLOAT,
  V26 /* TYPE OF COLUMN A_TIMESHEET.V26 */ FLOAT,
  V27 /* TYPE OF COLUMN A_TIMESHEET.V27 */ FLOAT,
  V28 /* TYPE OF COLUMN A_TIMESHEET.V28 */ FLOAT,
  V29 /* TYPE OF COLUMN A_TIMESHEET.V29 */ FLOAT,
  V30 /* TYPE OF COLUMN A_TIMESHEET.V30 */ FLOAT,
  V31 /* TYPE OF COLUMN A_TIMESHEET.V31 */ FLOAT,
  K1 /* TYPE OF COLUMN A_TIMESHEET.K1 */ FLOAT,
  D1 /* TYPE OF COLUMN A_TIMESHEET.D1 */ SMALLINT,
  D2 /* TYPE OF COLUMN A_TIMESHEET.D2 */ SMALLINT,
  D3 /* TYPE OF COLUMN A_TIMESHEET.D3 */ SMALLINT,
  D4 /* TYPE OF COLUMN A_TIMESHEET.D4 */ SMALLINT,
  D5 /* TYPE OF COLUMN A_TIMESHEET.D5 */ SMALLINT,
  D6 /* TYPE OF COLUMN A_TIMESHEET.D6 */ SMALLINT,
  D7 /* TYPE OF COLUMN A_TIMESHEET.D7 */ SMALLINT,
  D8 /* TYPE OF COLUMN A_TIMESHEET.D8 */ SMALLINT,
  D9 /* TYPE OF COLUMN A_TIMESHEET.D9 */ SMALLINT,
  D10 /* TYPE OF COLUMN A_TIMESHEET.D10 */ SMALLINT,
  D11 /* TYPE OF COLUMN A_TIMESHEET.D11 */ SMALLINT,
  D12 /* TYPE OF COLUMN A_TIMESHEET.D12 */ SMALLINT,
  D13 /* TYPE OF COLUMN A_TIMESHEET.D13 */ SMALLINT,
  D14 /* TYPE OF COLUMN A_TIMESHEET.D14 */ SMALLINT,
  D15 /* TYPE OF COLUMN A_TIMESHEET.D15 */ SMALLINT,
  D16 /* TYPE OF COLUMN A_TIMESHEET.D16 */ SMALLINT,
  D17 /* TYPE OF COLUMN A_TIMESHEET.D17 */ SMALLINT,
  D18 /* TYPE OF COLUMN A_TIMESHEET.D18 */ SMALLINT,
  D19 /* TYPE OF COLUMN A_TIMESHEET.D19 */ SMALLINT,
  D20 /* TYPE OF COLUMN A_TIMESHEET.D20 */ SMALLINT,
  D21 /* TYPE OF COLUMN A_TIMESHEET.D21 */ SMALLINT,
  D22 /* TYPE OF COLUMN A_TIMESHEET.D22 */ SMALLINT,
  D23 /* TYPE OF COLUMN A_TIMESHEET.D23 */ SMALLINT,
  D24 /* TYPE OF COLUMN A_TIMESHEET.D24 */ SMALLINT,
  D25 /* TYPE OF COLUMN A_TIMESHEET.D25 */ SMALLINT,
  D26 /* TYPE OF COLUMN A_TIMESHEET.D26 */ SMALLINT,
  D27 /* TYPE OF COLUMN A_TIMESHEET.D27 */ SMALLINT,
  D28 /* TYPE OF COLUMN A_TIMESHEET.D28 */ SMALLINT,
  D29 /* TYPE OF COLUMN A_TIMESHEET.D29 */ SMALLINT,
  D30 /* TYPE OF COLUMN A_TIMESHEET.D30 */ SMALLINT,
  D31 /* TYPE OF COLUMN A_TIMESHEET.D31 */ SMALLINT)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPS_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPS.ID */ INTEGER,
  DOCID /* TYPE OF COLUMN F_OPS.DOCID */ INTEGER,
  DESCR /* TYPE OF COLUMN F_OPS.DESCR */ VARCHAR(50),
  AC11 /* TYPE OF COLUMN F_OPS.AC11 */ VARCHAR(8),
  AC12 /* TYPE OF COLUMN F_OPS.AC12 */ VARCHAR(8),
  AC13 /* TYPE OF COLUMN F_OPS.AC13 */ VARCHAR(5),
  AC14 /* TYPE OF COLUMN F_OPS.AC14 */ VARCHAR(8),
  AC15 /* TYPE OF COLUMN F_OPS.AC15 */ VARCHAR(5),
  AC21 /* TYPE OF COLUMN F_OPS.AC21 */ VARCHAR(8),
  AC22 /* TYPE OF COLUMN F_OPS.AC22 */ VARCHAR(8),
  AC23 /* TYPE OF COLUMN F_OPS.AC23 */ VARCHAR(5),
  AC24 /* TYPE OF COLUMN F_OPS.AC24 */ VARCHAR(8),
  AC25 /* TYPE OF COLUMN F_OPS.AC25 */ VARCHAR(5),
  SUMMC /* TYPE OF COLUMN F_OPS.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN F_OPS.CUR */ VARCHAR(3),
  SUMM /* TYPE OF COLUMN F_OPS.SUMM */ NUMERIC(15,2),
  QV /* TYPE OF COLUMN F_OPS.QV */ FLOAT,
  NL /* TYPE OF COLUMN F_OPS.NL */ SMALLINT,
  ZDT /* TYPE OF COLUMN F_OPS.ZDT */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPS_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPS.ID */ INTEGER,
  DOCID /* TYPE OF COLUMN F_OPS.DOCID */ INTEGER,
  DESCR /* TYPE OF COLUMN F_OPS.DESCR */ VARCHAR(50),
  AC11 /* TYPE OF COLUMN F_OPS.AC11 */ VARCHAR(8),
  AC12 /* TYPE OF COLUMN F_OPS.AC12 */ VARCHAR(8),
  AC13 /* TYPE OF COLUMN F_OPS.AC13 */ VARCHAR(5),
  AC14 /* TYPE OF COLUMN F_OPS.AC14 */ VARCHAR(8),
  AC15 /* TYPE OF COLUMN F_OPS.AC15 */ VARCHAR(5),
  AC21 /* TYPE OF COLUMN F_OPS.AC21 */ VARCHAR(8),
  AC22 /* TYPE OF COLUMN F_OPS.AC22 */ VARCHAR(8),
  AC23 /* TYPE OF COLUMN F_OPS.AC23 */ VARCHAR(5),
  AC24 /* TYPE OF COLUMN F_OPS.AC24 */ VARCHAR(8),
  AC25 /* TYPE OF COLUMN F_OPS.AC25 */ VARCHAR(5),
  SUMMC /* TYPE OF COLUMN F_OPS.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN F_OPS.CUR */ VARCHAR(3),
  SUMM /* TYPE OF COLUMN F_OPS.SUMM */ NUMERIC(15,2),
  QV /* TYPE OF COLUMN F_OPS.QV */ FLOAT,
  NL /* TYPE OF COLUMN F_OPS.NL */ SMALLINT,
  ZDT /* TYPE OF COLUMN F_OPS.ZDT */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPSD_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPSD.ID */ INTEGER,
  DETE /* TYPE OF COLUMN F_OPSD.DETE */ DATE,
  NRX /* TYPE OF COLUMN F_OPSD.NRX */ VARCHAR(5),
  DOCTYP /* TYPE OF COLUMN F_OPSD.DOCTYP */ VARCHAR(10),
  DOCST /* TYPE OF COLUMN F_OPSD.DOCST */ VARCHAR(6),
  DOCNR /* TYPE OF COLUMN F_OPSD.DOCNR */ VARCHAR(15),
  CLID /* TYPE OF COLUMN F_OPSD.CLID */ VARCHAR(15),
  CLID2 /* TYPE OF COLUMN F_OPSD.CLID2 */ VARCHAR(15),
  DESCR /* TYPE OF COLUMN F_OPSD.DESCR */ VARCHAR(80),
  SUMM /* TYPE OF COLUMN F_OPSD.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN F_OPSD.PVN */ NUMERIC(15,2),
  OPT /* TYPE OF COLUMN F_OPSD.OPT */ INTEGER,
  ZNR /* TYPE OF COLUMN F_OPSD.ZNR */ INTEGER,
  ZU /* TYPE OF COLUMN F_OPSD.ZU */ VARCHAR(20),
  ZDT /* TYPE OF COLUMN F_OPSD.ZDT */ TIMESTAMP,
  DT2 /* TYPE OF COLUMN F_OPSD.DT2 */ DATE,
  YR /* TYPE OF COLUMN F_OPSD.YR */ SMALLINT,
  NL /* TYPE OF COLUMN F_OPSD.NL */ SMALLINT,
  IDDOCM /* TYPE OF COLUMN F_OPSD.IDDOCM */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPSD_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPSD.ID */ INTEGER,
  DETE /* TYPE OF COLUMN F_OPSD.DETE */ DATE,
  NRX /* TYPE OF COLUMN F_OPSD.NRX */ VARCHAR(5),
  DOCTYP /* TYPE OF COLUMN F_OPSD.DOCTYP */ VARCHAR(10),
  DOCST /* TYPE OF COLUMN F_OPSD.DOCST */ VARCHAR(6),
  DOCNR /* TYPE OF COLUMN F_OPSD.DOCNR */ VARCHAR(15),
  CLID /* TYPE OF COLUMN F_OPSD.CLID */ VARCHAR(15),
  CLID2 /* TYPE OF COLUMN F_OPSD.CLID2 */ VARCHAR(15),
  DESCR /* TYPE OF COLUMN F_OPSD.DESCR */ VARCHAR(80),
  SUMM /* TYPE OF COLUMN F_OPSD.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN F_OPSD.PVN */ NUMERIC(15,2),
  OPT /* TYPE OF COLUMN F_OPSD.OPT */ INTEGER,
  ZNR /* TYPE OF COLUMN F_OPSD.ZNR */ INTEGER,
  ZU /* TYPE OF COLUMN F_OPSD.ZU */ VARCHAR(20),
  ZDT /* TYPE OF COLUMN F_OPSD.ZDT */ TIMESTAMP,
  DT2 /* TYPE OF COLUMN F_OPSD.DT2 */ DATE,
  YR /* TYPE OF COLUMN F_OPSD.YR */ SMALLINT,
  NL /* TYPE OF COLUMN F_OPSD.NL */ SMALLINT,
  IDDOCM /* TYPE OF COLUMN F_OPSD.IDDOCM */ INTEGER)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_REP_BAL_13(
  PBALID VARCHAR(10))
RETURNS (
  AC /* TYPE OF COLUMN F_ACP21.AC */ VARCHAR(8),
  NAME /* TYPE OF COLUMN F_ACP21.NAME */ VARCHAR(100),
  ID1 /* TYPE OF COLUMN F_ACP21.ID1 */ VARCHAR(15),
  ID2 /* TYPE OF COLUMN F_ACP21.ID2 */ VARCHAR(15))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_DOCS_01(
  PDT1 DATE,
  PDT2 DATE,
  PTP INTEGER,
  PSTATE INTEGER,
  PIDSTOREOUT INTEGER,
  PIDSTOREIN INTEGER,
  PIDSTOREOUTORIN INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_DOCS.ID */ INTEGER,
  DT /* TYPE OF COLUMN M_DOCS.DT */ DATE,
  SR /* TYPE OF COLUMN M_DOCS.SR */ VARCHAR(10),
  NR /* TYPE OF COLUMN M_DOCS.NR */ VARCHAR(20),
  TP /* TYPE OF COLUMN M_DOCS.TP */ INTEGER,
  PVNTYPE /* TYPE OF COLUMN M_DOCS.PVNTYPE */ INTEGER,
  STATE /* TYPE OF COLUMN M_DOCS.STATE */ INTEGER,
  IDSTOREIN /* TYPE OF COLUMN M_DOCS.IDSTOREIN */ INTEGER,
  IDSTOREOUT /* TYPE OF COLUMN M_DOCS.IDSTOREOUT */ INTEGER,
  IDCREDDOC /* TYPE OF COLUMN M_DOCS.IDCREDDOC */ INTEGER,
  CREDDOCDT /* TYPE OF COLUMN M_DOCS.CREDDOCDT */ DATE,
  SUMM /* TYPE OF COLUMN M_DOCS.SUMM */ NUMERIC(15,2),
  IDSEQ /* TYPE OF COLUMN M_DOCS.IDSEQ */ BIGINT,
  ACCIN /* TYPE OF COLUMN M_DOCS.ACCIN */ VARCHAR(8),
  ACCOUT /* TYPE OF COLUMN M_DOCS.ACCOUT */ VARCHAR(8),
  CREDDOCSR /* TYPE OF COLUMN M_DOCS.CREDDOCSR */ VARCHAR(10),
  CREDDOCNR /* TYPE OF COLUMN M_DOCS.CREDDOCNR */ VARCHAR(20),
  IDCARRIER /* TYPE OF COLUMN M_DOCS.IDCARRIER */ INTEGER,
  IDADDRESSOUT /* TYPE OF COLUMN M_DOCS.IDADDRESSOUT */ INTEGER,
  IDADDRESSIN /* TYPE OF COLUMN M_DOCS.IDADDRESSIN */ INTEGER,
  IDVEHICLE /* TYPE OF COLUMN M_DOCS.IDVEHICLE */ INTEGER,
  IDTRANSACTIONTYPE /* TYPE OF COLUMN M_DOCS.IDTRANSACTIONTYPE */ INTEGER,
  IDPAYMENTTYPE /* TYPE OF COLUMN M_DOCS.IDPAYMENTTYPE */ INTEGER,
  IDDRIVER /* TYPE OF COLUMN M_DOCS.IDDRIVER */ INTEGER,
  ACCOUNTINGTP /* TYPE OF COLUMN M_DOCS.ACCOUNTINGTP */ SMALLINT,
  ACCTP1 /* TYPE OF COLUMN M_DOCS.ACCTP1 */ SMALLINT,
  ACCTP2 /* TYPE OF COLUMN M_DOCS.ACCTP2 */ SMALLINT,
  WEVATPAYER /* TYPE OF COLUMN M_DOCS.WEVATPAYER */ SMALLINT,
  DUEDATE /* TYPE OF COLUMN M_DOCS.DUEDATE */ DATE)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_DOCS_02(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_DOCS.ID */ INTEGER,
  DT /* TYPE OF COLUMN M_DOCS.DT */ DATE,
  SR /* TYPE OF COLUMN M_DOCS.SR */ VARCHAR(10),
  NR /* TYPE OF COLUMN M_DOCS.NR */ VARCHAR(20),
  TP /* TYPE OF COLUMN M_DOCS.TP */ INTEGER,
  PVNTYPE /* TYPE OF COLUMN M_DOCS.PVNTYPE */ INTEGER,
  STATE /* TYPE OF COLUMN M_DOCS.STATE */ INTEGER,
  IDSTOREIN /* TYPE OF COLUMN M_DOCS.IDSTOREIN */ INTEGER,
  IDSTOREOUT /* TYPE OF COLUMN M_DOCS.IDSTOREOUT */ INTEGER,
  IDCREDDOC /* TYPE OF COLUMN M_DOCS.IDCREDDOC */ INTEGER,
  CREDDOCDT /* TYPE OF COLUMN M_DOCS.CREDDOCDT */ DATE,
  SUMM /* TYPE OF COLUMN M_DOCS.SUMM */ NUMERIC(15,2),
  IDSEQ /* TYPE OF COLUMN M_DOCS.IDSEQ */ BIGINT,
  ACCIN /* TYPE OF COLUMN M_DOCS.ACCIN */ VARCHAR(8),
  ACCOUT /* TYPE OF COLUMN M_DOCS.ACCOUT */ VARCHAR(8),
  CREDDOCSR /* TYPE OF COLUMN M_DOCS.CREDDOCSR */ VARCHAR(10),
  CREDDOCNR /* TYPE OF COLUMN M_DOCS.CREDDOCNR */ VARCHAR(20),
  IDCARRIER /* TYPE OF COLUMN M_DOCS.IDCARRIER */ INTEGER,
  IDADDRESSOUT /* TYPE OF COLUMN M_DOCS.IDADDRESSOUT */ INTEGER,
  IDADDRESSIN /* TYPE OF COLUMN M_DOCS.IDADDRESSIN */ INTEGER,
  IDVEHICLE /* TYPE OF COLUMN M_DOCS.IDVEHICLE */ INTEGER,
  IDTRANSACTIONTYPE /* TYPE OF COLUMN M_DOCS.IDTRANSACTIONTYPE */ INTEGER,
  IDPAYMENTTYPE /* TYPE OF COLUMN M_DOCS.IDPAYMENTTYPE */ INTEGER,
  IDDRIVER /* TYPE OF COLUMN M_DOCS.IDDRIVER */ INTEGER,
  ACCOUNTINGTP /* TYPE OF COLUMN M_DOCS.ACCOUNTINGTP */ SMALLINT,
  ACCTP1 /* TYPE OF COLUMN M_DOCS.ACCTP1 */ SMALLINT,
  ACCTP2 /* TYPE OF COLUMN M_DOCS.ACCTP2 */ SMALLINT,
  WEVATPAYER /* TYPE OF COLUMN M_DOCS.WEVATPAYER */ SMALLINT,
  DUEDATE /* TYPE OF COLUMN M_DOCS.DUEDATE */ DATE)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_INVDOCS_1(
  PDT1 DATE,
  PDT2 DATE,
  PSTATE INTEGER,
  PIDSTORE INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_INV_DOCS.ID */ INTEGER,
  DT /* TYPE OF COLUMN M_INV_DOCS.DT */ DATE,
  NR /* TYPE OF COLUMN M_INV_DOCS.NR */ VARCHAR(10),
  STATE /* TYPE OF COLUMN M_INV_DOCS.STATE */ INTEGER,
  IDSTORE /* TYPE OF COLUMN M_INV_DOCS.IDSTORE */ INTEGER,
  PERSONS /* TYPE OF COLUMN M_INV_DOCS.PERSONS */ VARCHAR(200))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_INVROWS_1(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_INV_ROWS.ID */ INTEGER,
  IDDOC /* TYPE OF COLUMN M_INV_ROWS.IDDOC */ INTEGER,
  IDITEM /* TYPE OF COLUMN M_INV_ROWS.IDITEM */ INTEGER,
  IDUNITS /* TYPE OF COLUMN M_INV_ROWS.IDUNITS */ INTEGER,
  AM_COUNTED_1 /* TYPE OF COLUMN M_INV_ROWS.AM_COUNTED_1 */ NUMERIC(12,4),
  AM_COUNTED_2 /* TYPE OF COLUMN M_INV_ROWS.AM_COUNTED_2 */ NUMERIC(12,4),
  AM_CALC /* TYPE OF COLUMN M_INV_ROWS.AM_CALC */ NUMERIC(12,4),
  AM_DIFF /* TYPE OF COLUMN M_INV_ROWS.AM_DIFF */ NUMERIC(12,4))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_ITEMS_01(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_ITEMS.ID */ INTEGER,
  BARCODE /* TYPE OF COLUMN M_ITEMS.BARCODE */ VARCHAR(30),
  NAME /* TYPE OF COLUMN M_ITEMS.NAME */ VARCHAR(300),
  CAT /* TYPE OF COLUMN M_ITEMS.CAT */ INTEGER,
  UNITS /* TYPE OF COLUMN M_ITEMS.UNITS */ INTEGER,
  STORE1 /* TYPE OF COLUMN M_ITEMS.STORE1 */ INTEGER,
  PVNRATE /* TYPE OF COLUMN M_ITEMS.PVNRATE */ INTEGER,
  ISSERVICE /* TYPE OF COLUMN M_ITEMS.ISSERVICE */ INTEGER,
  ISPRODUCED /* TYPE OF COLUMN M_ITEMS.ISPRODUCED */ INTEGER,
  SELLPRICE /* TYPE OF COLUMN M_ITEMS.SELLPRICE */ NUMERIC(15,6),
  BUYPRICE /* TYPE OF COLUMN M_ITEMS.BUYPRICE */ NUMERIC(15,6),
  PRODCOST /* TYPE OF COLUMN M_ITEMS.PRODCOST */ NUMERIC(15,6),
  LASTBUYPRICE /* TYPE OF COLUMN M_ITEMS.LASTBUYPRICE */ NUMERIC(15,6),
  AMOUNTINSTORE /* TYPE OF COLUMN M_ITEMS.AMOUNTINSTORE */ NUMERIC(12,4),
  LASTSALEDATE /* TYPE OF COLUMN M_ITEMS.LASTSALEDATE */ DATE,
  LASTBUYDATE /* TYPE OF COLUMN M_ITEMS.LASTBUYDATE */ DATE)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_ITEMS_PER_STORE_01(
  PIDDOC INTEGER)
RETURNS (
  IDITEM /* TYPE OF COLUMN M_ITEMS_PER_STORE.IDITEM */ INTEGER,
  IDSTORE /* TYPE OF COLUMN M_ITEMS_PER_STORE.IDSTORE */ INTEGER,
  AMOUNT /* TYPE OF COLUMN M_ITEMS_PER_STORE.AMOUNT */ NUMERIC(12,4))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_ROWS_01(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_ROWS.ID */ INTEGER,
  IDDOC /* TYPE OF COLUMN M_ROWS.IDDOC */ INTEGER,
  IDITEM /* TYPE OF COLUMN M_ROWS.IDITEM */ INTEGER,
  IDPVNRATE /* TYPE OF COLUMN M_ROWS.IDPVNRATE */ INTEGER,
  UNITS /* TYPE OF COLUMN M_ROWS.UNITS */ INTEGER,
  IDCREDROW /* TYPE OF COLUMN M_ROWS.IDCREDROW */ INTEGER,
  AMOUNT /* TYPE OF COLUMN M_ROWS.AMOUNT */ NUMERIC(12,4),
  DISCOUNT /* TYPE OF COLUMN M_ROWS.DISCOUNT */ FLOAT,
  PRICE0 /* TYPE OF COLUMN M_ROWS.PRICE0 */ NUMERIC(15,6),
  PRICE /* TYPE OF COLUMN M_ROWS.PRICE */ NUMERIC(15,6),
  BUYPRICE /* TYPE OF COLUMN M_ROWS.BUYPRICE */ NUMERIC(15,6),
  OLDPRICE /* TYPE OF COLUMN M_ROWS.OLDPRICE */ NUMERIC(15,6),
  TOLDPRICE /* TYPE OF COLUMN M_ROWS.TOLDPRICE */ NUMERIC(15,2),
  TPRICE /* TYPE OF COLUMN M_ROWS.TPRICE */ NUMERIC(15,2),
  TBUYPRICE /* TYPE OF COLUMN M_ROWS.TBUYPRICE */ NUMERIC(15,2),
  IDSEQ /* TYPE OF COLUMN M_ROWS.IDSEQ */ BIGINT,
  ACC6 /* TYPE OF COLUMN M_ROWS.ACC6 */ VARCHAR(8),
  ACC7 /* TYPE OF COLUMN M_ROWS.ACC7 */ VARCHAR(8))
AS
BEGIN
  SUSPEND;
END
^


/******************************************************************************/
/****                          Dropping triggers                           ****/
/******************************************************************************/
SET TERM !! ^

EXECUTE BLOCK AS BEGIN
    if (exists(select 1 from RDB$TRIGGERS where RDB$TRIGGER_NAME = 'TRIG_F_OPS_BI')) then
        execute statement 'DROP TRIGGER TRIG_F_OPS_BI;';
    if (exists(select 1 from RDB$TRIGGERS where RDB$TRIGGER_NAME = 'TRIG_F_OPSD_BI')) then
        execute statement 'DROP TRIGGER TRIG_F_OPSD_BI;';
END!!


/******************************************************************************/
/****                      Creating stored procedures                      ****/
/******************************************************************************/
SET TERM ^ !!

CREATE PROCEDURE SP_F_OPS_DELETE_2(
  PID INTEGER,
  PTS TIMESTAMP)
RETURNS (
  ROWCOUNT INTEGER)
AS
BEGIN
  SUSPEND;
END
^

CREATE PROCEDURE SP_F_OPS_UPDATE_2(
  PID INTEGER,
  PTS TIMESTAMP,
  PDOCID INTEGER,
  PDESCR /* TYPE OF COLUMN F_OPS.DESCR */ VARCHAR(50),
  PAC11 /* TYPE OF COLUMN F_OPS.AC11 */ VARCHAR(8),
  PAC12 /* TYPE OF COLUMN F_OPS.AC12 */ VARCHAR(8),
  PAC13 /* TYPE OF COLUMN F_OPS.AC13 */ VARCHAR(5),
  PAC14 /* TYPE OF COLUMN F_OPS.AC14 */ VARCHAR(8),
  PAC15 /* TYPE OF COLUMN F_OPS.AC15 */ VARCHAR(5),
  PAC21 /* TYPE OF COLUMN F_OPS.AC21 */ VARCHAR(8),
  PAC22 /* TYPE OF COLUMN F_OPS.AC22 */ VARCHAR(8),
  PAC23 /* TYPE OF COLUMN F_OPS.AC23 */ VARCHAR(5),
  PAC24 /* TYPE OF COLUMN F_OPS.AC24 */ VARCHAR(8),
  PAC25 /* TYPE OF COLUMN F_OPS.AC25 */ VARCHAR(5),
  PSUMMC /* TYPE OF COLUMN F_OPS.SUMMC */ NUMERIC(15,2),
  PCUR /* TYPE OF COLUMN F_OPS.CUR */ VARCHAR(3),
  PSUMM /* TYPE OF COLUMN F_OPS.SUMM */ NUMERIC(15,2),
  PQV /* TYPE OF COLUMN F_OPS.QV */ FLOAT,
  PZDT /* TYPE OF COLUMN F_OPS.ZDT */ TIMESTAMP,
  PNL /* TYPE OF COLUMN F_OPS.NL */ SMALLINT)
RETURNS (
  TS TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

CREATE PROCEDURE SP_F_OPSD_DELETE_2(
  PID INTEGER,
  PTS TIMESTAMP)
RETURNS (
  ROWCOUNT INTEGER)
AS
BEGIN
  SUSPEND;
END
^

CREATE PROCEDURE SP_F_OPSD_UPDATE_2(
  PID INTEGER,
  PTS TIMESTAMP,
  PDETE /* TYPE OF COLUMN F_OPSD.DETE */ DATE,
  PNRX /* TYPE OF COLUMN F_OPSD.NRX */ VARCHAR(5),
  PDOCTYP /* TYPE OF COLUMN F_OPSD.DOCTYP */ VARCHAR(10),
  PDOCST /* TYPE OF COLUMN F_OPSD.DOCST */ VARCHAR(6),
  PDOCNR /* TYPE OF COLUMN F_OPSD.DOCNR */ VARCHAR(15),
  PCLID /* TYPE OF COLUMN F_OPSD.CLID */ VARCHAR(15),
  PCLID2 /* TYPE OF COLUMN F_OPSD.CLID2 */ VARCHAR(15),
  PDESCR /* TYPE OF COLUMN F_OPSD.DESCR */ VARCHAR(80),
  PSUMM /* TYPE OF COLUMN F_OPSD.SUMM */ NUMERIC(15,2),
  PPVN /* TYPE OF COLUMN F_OPSD.PVN */ NUMERIC(15,2),
  POPT /* TYPE OF COLUMN F_OPSD.OPT */ INTEGER,
  PZU /* TYPE OF COLUMN F_OPSD.ZU */ VARCHAR(20),
  PZDT /* TYPE OF COLUMN F_OPSD.ZDT */ TIMESTAMP,
  PDT2 /* TYPE OF COLUMN F_OPSD.DT2 */ DATE,
  PIDDCOM /* TYPE OF COLUMN F_OPSD.IDDOCM */ INTEGER,
  PNL /* TYPE OF COLUMN F_OPSD.NL */ SMALLINT)
RETURNS (
  ZNR /* TYPE OF COLUMN F_OPSD.ZNR */ INTEGER,
  TS TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^


/******************************************************************************/
/****                           Altering tables                            ****/
/******************************************************************************/
SET TERM ; ^

ALTER TABLE A_BANKS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_DEPARTMENTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_EVENT_TYPES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_EVENT_TYPES2
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_EVENTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_FP_PAYLISTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_FP_PAYLISTS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_HOLIDAYS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_INCOME_CODES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PAYLIST_TEMPL
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PAYLIST_TEMPL_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PAYLISTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PAYLISTS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PASTDATA
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PASTDATA_2
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PERSONS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PERSONS_FIZ
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PERSONS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PIECEWORK
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PIECEWORK_CATALOG
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PIECEWORK_CATSTRUCT
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PLUSMINUS_FROM
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PLUSMINUS_TYPES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_POSITIONS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_POSITIONS_PLUSMINUS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_POSITIONS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_PROFESSIONS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_RATES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_RATES ALTER COLUMN URN SET DEFAULT 0;

ALTER TABLE A_REPORT_CODES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_SALARY_PLUSMINUS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_SALARY_SHEET_TEMPL
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_SALARY_SHEET_TEMPL_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_SALARY_SHEETS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_SALARY_SHEETS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_SALARY_SHEETS_R ALTER COLUMN IDS SET NOT NULL;

ALTER TABLE A_SALARY_SHEETS_R ALTER COLUMN IDSX SET NOT NULL;

ALTER TABLE A_SALARY_SHEETS_R ALTER COLUMN IS_TEMP SET NOT NULL;

ALTER TABLE A_SALARY_SHEETS_R ALTER COLUMN TYPE_TAG SET NOT NULL;

ALTER TABLE A_SALARY_SHEETS_R ALTER COLUMN IDP SET NOT NULL;

ALTER TABLE A_SALARY_SHEETS_R_HIST
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TEMP_REP_INKP
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TEMP_REP_PDT
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TERITORIAL_CODES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TIMEPLAN_LIST
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TIMESHEET
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TIMESHEET_LISTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TIMESHEET_LISTS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TIMESHEET_TEMPL
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_TIMESHEET_TEMPL_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE A_UNTAXED_MIN
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP1
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP21
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP211
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP22
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP23
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP24
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP25
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP25A
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACP6
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACPLAN
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_ACPVN
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_BAL0
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_BALA1
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_BALA2
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_BALA21
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_BALA3
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_BANKS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_CURRENCY
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_DOCS0
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_DOCTYP
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_DOCTYPA
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_DOCTYPB
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_LOGX
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_LXOP
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_OPS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_OPSD
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_PERSONS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_PERSONTYP
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_TREM
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_TUPDFIELDS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE F_TUPVN1
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_ACCOUNTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_ACCOUNTTYPE
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_ADDRESSSES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_BANKACCOUNTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_BANKS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_CONTACTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_COUNTRIES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_DISC_LISTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_DISC_LISTS_P
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_DISC_LISTS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_DOCS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_DOCTYPES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_INV_DOCS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_INV_ROWS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_ITEMS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_ITEMS_CAT
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_ITEMS_PER_STORE
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_LINKS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PAYMENTTYPE
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PRICE_LISTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PRICE_LISTS_P
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PRICE_LISTS_R
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PVNRATES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PVNRATES2
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PVNTEXTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_PVNTYPE
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_ROWS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_STORES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_STORES_CAT
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_STORETYPE
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_TRANSACTIONTYPE
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_UNITS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE M_VEHICLES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_CAT1
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_CATD
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_CATT
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_DEPARTMENTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_EVENTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_ITEMS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_ITEMS_EVENTS
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_PLACES
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;

ALTER TABLE P_TAXDEPRECYEAR
  ADD TS TIMESTAMP DEFAULT LOCALTIMESTAMP NOT NULL;


/******************************************************************************/
/****            Altering stored procedures (with empty bodies)            ****/
/******************************************************************************/
SET TERM ^ ;

ALTER PROCEDURE SP_A_FP_PAYLISTS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_FP_PAYLISTS.ID */ INTEGER,
  SNR /* TYPE OF COLUMN A_FP_PAYLISTS.SNR */ INTEGER,
  YR /* TYPE OF COLUMN A_FP_PAYLISTS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_FP_PAYLISTS.MT */ INTEGER,
  PAYDATE /* TYPE OF COLUMN A_FP_PAYLISTS.PAYDATE */ DATE,
  DESCR /* TYPE OF COLUMN A_FP_PAYLISTS.DESCR */ VARCHAR(50),
  TS /* TYPE OF COLUMN A_FP_PAYLISTS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_FP_PAYLISTS_PER_R_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_FP_PAYLISTS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_FP_PAYLISTS_R.IDS */ INTEGER,
  IDP /* TYPE OF COLUMN A_FP_PAYLISTS_R.IDP */ INTEGER,
  SNR /* TYPE OF COLUMN A_FP_PAYLISTS_R.SNR */ INTEGER,
  DATE1 /* TYPE OF COLUMN A_FP_PAYLISTS_R.DATE1 */ DATE,
  DATE2 /* TYPE OF COLUMN A_FP_PAYLISTS_R.DATE2 */ DATE,
  PAYDATE /* TYPE OF COLUMN A_FP_PAYLISTS_R.PAYDATE */ DATE,
  TAX_TP /* TYPE OF COLUMN A_FP_PAYLISTS_R.TAX_TP */ SMALLINT,
  INCOME_ID /* TYPE OF COLUMN A_FP_PAYLISTS_R.INCOME_ID */ VARCHAR(4),
  DESCR /* TYPE OF COLUMN A_FP_PAYLISTS_R.DESCR */ VARCHAR(50),
  PAY0 /* TYPE OF COLUMN A_FP_PAYLISTS_R.PAY0 */ NUMERIC(15,2),
  TAXED /* TYPE OF COLUMN A_FP_PAYLISTS_R.TAXED */ NUMERIC(15,2),
  NOSAI /* TYPE OF COLUMN A_FP_PAYLISTS_R.NOSAI */ NUMERIC(15,2),
  NOTTAXED /* TYPE OF COLUMN A_FP_PAYLISTS_R.NOTTAXED */ NUMERIC(15,2),
  AUTHORS_FEE /* TYPE OF COLUMN A_FP_PAYLISTS_R.AUTHORS_FEE */ NUMERIC(15,2),
  SIRATETP /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATETP */ SMALLINT,
  SIRATEDD /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATEDD */ NUMERIC(15,2),
  SIRATEDN /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATEDN */ NUMERIC(15,2),
  SIDD /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIDD */ NUMERIC(15,2),
  SIDN /* TYPE OF COLUMN A_FP_PAYLISTS_R.SIDN */ NUMERIC(15,2),
  IINEX_PERC /* TYPE OF COLUMN A_FP_PAYLISTS_R.IINEX_PERC */ NUMERIC(15,2),
  IINEX /* TYPE OF COLUMN A_FP_PAYLISTS_R.IINEX */ NUMERIC(15,2),
  IIN_FROM /* TYPE OF COLUMN A_FP_PAYLISTS_R.IIN_FROM */ NUMERIC(15,2),
  IIN_RATE /* TYPE OF COLUMN A_FP_PAYLISTS_R.IIN_RATE */ NUMERIC(15,2),
  IIN /* TYPE OF COLUMN A_FP_PAYLISTS_R.IIN */ NUMERIC(15,2),
  CASH /* TYPE OF COLUMN A_FP_PAYLISTS_R.CASH */ NUMERIC(15,2),
  TS /* TYPE OF COLUMN A_FP_PAYLISTS_R.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_PAYLISTS_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_PAYLISTS.ID */ INTEGER,
  SNR /* TYPE OF COLUMN A_PAYLISTS.SNR */ INTEGER,
  YR /* TYPE OF COLUMN A_PAYLISTS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_PAYLISTS.MT */ INTEGER,
  DT /* TYPE OF COLUMN A_PAYLISTS.DT */ DATE,
  DEP /* TYPE OF COLUMN A_PAYLISTS.DEP */ VARCHAR(15),
  DESCR /* TYPE OF COLUMN A_PAYLISTS.DESCR */ VARCHAR(50),
  DOPAY /* TYPE OF COLUMN A_PAYLISTS.DOPAY */ SMALLINT,
  TOTAL_PAY /* TYPE OF COLUMN A_PAYLISTS.TOTAL_PAY */ NUMERIC(15,2),
  TS /* TYPE OF COLUMN A_PAYLISTS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_PAYLISTS_R_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_PAYLISTS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_PAYLISTS_R.IDS */ INTEGER,
  IDP /* TYPE OF COLUMN A_PAYLISTS_R.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_PAYLISTS_R.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_PAYLISTS_R.SNR */ INTEGER,
  PAY0 /* TYPE OF COLUMN A_PAYLISTS_R.PAY0 */ NUMERIC(15,2),
  IIN0 /* TYPE OF COLUMN A_PAYLISTS_R.IIN0 */ NUMERIC(15,2),
  ADVANCE0 /* TYPE OF COLUMN A_PAYLISTS_R.ADVANCE0 */ NUMERIC(15,2),
  WITHHOLDINGS0 /* TYPE OF COLUMN A_PAYLISTS_R.WITHHOLDINGS0 */ NUMERIC(15,2),
  TPAY0 /* TYPE OF COLUMN A_PAYLISTS_R.TPAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_PAYLISTS_R.PAY */ NUMERIC(15,2),
  IIN /* TYPE OF COLUMN A_PAYLISTS_R.IIN */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_PAYLISTS_R.ADVANCE */ NUMERIC(15,2),
  WITHHOLDINGS /* TYPE OF COLUMN A_PAYLISTS_R.WITHHOLDINGS */ NUMERIC(15,2),
  TPAY /* TYPE OF COLUMN A_PAYLISTS_R.TPAY */ NUMERIC(15,2),
  PAY_REVERSE /* TYPE OF COLUMN A_PAYLISTS_R.PAY_REVERSE */ NUMERIC(15,2),
  IIN_REVERSE /* TYPE OF COLUMN A_PAYLISTS_R.IIN_REVERSE */ NUMERIC(15,2),
  DT1 /* TYPE OF COLUMN A_PAYLISTS_R.DT1 */ DATE,
  DT2 /* TYPE OF COLUMN A_PAYLISTS_R.DT2 */ DATE,
  R1 /* TYPE OF COLUMN A_PAYLISTS_R.R1 */ FLOAT,
  R2 /* TYPE OF COLUMN A_PAYLISTS_R.R2 */ FLOAT,
  S0 /* TYPE OF COLUMN A_PAYLISTS_R.S0 */ NUMERIC(15,2),
  S1 /* TYPE OF COLUMN A_PAYLISTS_R.S1 */ NUMERIC(15,2),
  S2 /* TYPE OF COLUMN A_PAYLISTS_R.S2 */ NUMERIC(15,2),
  ID_SHR_1 /* TYPE OF COLUMN A_PAYLISTS_R.ID_SHR_1 */ INTEGER,
  ID_SHR_2 /* TYPE OF COLUMN A_PAYLISTS_R.ID_SHR_2 */ INTEGER,
  PAY_TAXED_1 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_TAXED_1 */ NUMERIC(15,2),
  PAY_NOSAI_1 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOSAI_1 */ NUMERIC(15,2),
  PAY_NOTTAXED_1 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOTTAXED_1 */ NUMERIC(15,2),
  UNTAXED_MINIMUM_1 /* TYPE OF COLUMN A_PAYLISTS_R.UNTAXED_MINIMUM_1 */ NUMERIC(15,2),
  IINEX_DEPENDANTS_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_DEPENDANTS_1 */ NUMERIC(15,2),
  IINEX2_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_1 */ NUMERIC(15,2),
  IINEX2_TP_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_TP_1 */ SMALLINT,
  DNSI_1 /* TYPE OF COLUMN A_PAYLISTS_R.DNSI_1 */ NUMERIC(15,2),
  PFNT_1 /* TYPE OF COLUMN A_PAYLISTS_R.PFNT_1 */ NUMERIC(15,2),
  LINT_1 /* TYPE OF COLUMN A_PAYLISTS_R.LINT_1 */ NUMERIC(15,2),
  HINT_1 /* TYPE OF COLUMN A_PAYLISTS_R.HINT_1 */ NUMERIC(15,2),
  IINEX_EXP_1 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_EXP_1 */ NUMERIC(15,2),
  IIN_1 /* TYPE OF COLUMN A_PAYLISTS_R.IIN_1 */ NUMERIC(15,2),
  PAY_TAXED_2 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_TAXED_2 */ NUMERIC(15,2),
  PAY_NOSAI_2 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOSAI_2 */ NUMERIC(15,2),
  PAY_NOTTAXED_2 /* TYPE OF COLUMN A_PAYLISTS_R.PAY_NOTTAXED_2 */ NUMERIC(15,2),
  UNTAXED_MINIMUM_2 /* TYPE OF COLUMN A_PAYLISTS_R.UNTAXED_MINIMUM_2 */ NUMERIC(15,2),
  IINEX_DEPENDANTS_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_DEPENDANTS_2 */ NUMERIC(15,2),
  IINEX2_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_2 */ NUMERIC(15,2),
  IINEX2_TP_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX2_TP_2 */ SMALLINT,
  DNSI_2 /* TYPE OF COLUMN A_PAYLISTS_R.DNSI_2 */ NUMERIC(15,2),
  PFNT_2 /* TYPE OF COLUMN A_PAYLISTS_R.PFNT_2 */ NUMERIC(15,2),
  LINT_2 /* TYPE OF COLUMN A_PAYLISTS_R.LINT_2 */ NUMERIC(15,2),
  HINT_2 /* TYPE OF COLUMN A_PAYLISTS_R.HINT_2 */ NUMERIC(15,2),
  IINEX_EXP_2 /* TYPE OF COLUMN A_PAYLISTS_R.IINEX_EXP_2 */ NUMERIC(15,2),
  IIN_2 /* TYPE OF COLUMN A_PAYLISTS_R.IIN_2 */ NUMERIC(15,2),
  TS /* TYPE OF COLUMN A_PAYLISTS_R.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_PIECEWORK_PER_01(
  PDT1 DATE,
  PDT2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_PIECEWORK.ID */ INTEGER,
  IDK /* TYPE OF COLUMN A_PIECEWORK.IDK */ INTEGER,
  IDP /* TYPE OF COLUMN A_PIECEWORK.IDP */ INTEGER,
  IDA /* TYPE OF COLUMN A_PIECEWORK.IDA */ INTEGER,
  DT /* TYPE OF COLUMN A_PIECEWORK.DT */ DATE,
  UNIT /* TYPE OF COLUMN A_PIECEWORK.UNIT */ VARCHAR(10),
  QUANTITY /* TYPE OF COLUMN A_PIECEWORK.QUANTITY */ NUMERIC(13,4),
  RATE /* TYPE OF COLUMN A_PIECEWORK.RATE */ NUMERIC(13,4),
  BONUS /* TYPE OF COLUMN A_PIECEWORK.BONUS */ FLOAT,
  PAY /* TYPE OF COLUMN A_PIECEWORK.PAY */ NUMERIC(13,4),
  TIMEUNIT /* TYPE OF COLUMN A_PIECEWORK.TIMEUNIT */ INTEGER,
  TIMEUSE /* TYPE OF COLUMN A_PIECEWORK.TIMEUSE */ FLOAT,
  TIMEUSEINHOURS /* TYPE OF COLUMN A_PIECEWORK.TIMEUSEINHOURS */ FLOAT,
  TS /* TYPE OF COLUMN A_PIECEWORK.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_POSITIONS_PLUSMINUS_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.ID */ INTEGER,
  IDP /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDP */ INTEGER,
  IDA /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDA */ INTEGER,
  DATE1 /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DATE1 */ DATE,
  DATE2 /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DATE2 */ DATE,
  IDSV /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDSV */ INTEGER,
  IDNO /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDNO */ INTEGER,
  IDIE /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDIE */ INTEGER,
  DESCR /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DESCR */ VARCHAR(50),
  RATE /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.RATE */ NUMERIC(15,2),
  RATE_TYPE /* TYPE OF COLUMN A_POSITIONS_PLUSMINUS.RATE_TYPE */ SMALLINT,
  IS_INAVPAY /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_INAVPAY */ SMALLINT,
  IS_PAID /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_PAID */ SMALLINT,
  TS /* TYPE OF COLUMN A_SALARY_PLUSMINUS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_PLUSMINUS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_SALARY_PLUSMINUS.ID */ INTEGER,
  IDP /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDP */ INTEGER,
  IDA /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDA */ INTEGER,
  IDAP /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDAP */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDSX */ INTEGER,
  IDSV /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDSV */ INTEGER,
  IDNO /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDNO */ INTEGER,
  IDIE /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IDIE */ INTEGER,
  DESCR /* TYPE OF COLUMN A_SALARY_PLUSMINUS.DESCR */ VARCHAR(50),
  RATE /* TYPE OF COLUMN A_SALARY_PLUSMINUS.RATE */ NUMERIC(15,2),
  RATE_TYPE /* TYPE OF COLUMN A_SALARY_PLUSMINUS.RATE_TYPE */ SMALLINT,
  AMOUNT /* TYPE OF COLUMN A_SALARY_PLUSMINUS.AMOUNT */ NUMERIC(15,2),
  IS_INAVPAY /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_INAVPAY */ SMALLINT,
  IS_PAID /* TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_PAID */ SMALLINT,
  TS /* TYPE OF COLUMN A_SALARY_PLUSMINUS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_SALARY_SHEETS.ID */ INTEGER,
  YR /* TYPE OF COLUMN A_SALARY_SHEETS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_SALARY_SHEETS.MT */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS.SNR */ SMALLINT,
  DT1 /* TYPE OF COLUMN A_SALARY_SHEETS.DT1 */ DATE,
  DT2 /* TYPE OF COLUMN A_SALARY_SHEETS.DT2 */ DATE,
  DESCR /* TYPE OF COLUMN A_SALARY_SHEETS.DESCR */ VARCHAR(50),
  DEP /* TYPE OF COLUMN A_SALARY_SHEETS.DEP */ VARCHAR(15),
  KIND /* TYPE OF COLUMN A_SALARY_SHEETS.KIND */ SMALLINT,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS.IS_TEMP */ SMALLINT,
  TS /* TYPE OF COLUMN A_SALARY_SHEETS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_HIST_01(
  PID INTEGER)
RETURNS (
  IDH /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  ID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDS */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDSX */ INTEGER,
  IDST /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDST */ INTEGER,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IS_TEMP */ SMALLINT,
  TYPE_TAG /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TYPE_TAG */ SMALLINT,
  IDP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SNR */ SMALLINT,
  FNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FNAME */ VARCHAR(20),
  LNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.LNAME */ VARCHAR(20),
  POSITION_TITLE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.POSITION_TITLE */ VARCHAR(50),
  TERRITORIAL_CODE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TERRITORIAL_CODE */ VARCHAR(20),
  CALENDAR_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS */ INTEGER,
  CALENDAR_DAYS_USE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS_USE */ INTEGER,
  MONTH_WORKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKDAYS */ INTEGER,
  MONTH_WORKHOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKHOURS */ FLOAT,
  PLAN_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_DAYS */ INTEGER,
  PLAN_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS */ FLOAT,
  PLAN_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_NIGHT */ FLOAT,
  PLAN_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_OVERTIME */ FLOAT,
  FACT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_DAYS */ INTEGER,
  FACT_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS */ FLOAT,
  FACT_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_NIGHT */ FLOAT,
  FACT_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_OVERTIME */ FLOAT,
  PLAN_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_DAYS */ INTEGER,
  PLAN_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS */ FLOAT,
  PLAN_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_NIGHT */ FLOAT,
  PLAN_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_OVERTIME */ FLOAT,
  FACT_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_DAYS */ INTEGER,
  FACT_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS */ FLOAT,
  FACT_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_NIGHT */ FLOAT,
  FACT_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_OVERTIME */ FLOAT,
  PLAN_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_DAYS */ INTEGER,
  PLAN_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS */ FLOAT,
  PLAN_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  PLAN_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  FACT_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_DAYS */ INTEGER,
  FACT_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS */ FLOAT,
  FACT_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  FACT_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  SALARY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY */ NUMERIC(15,2),
  SALARY_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_DAY */ NUMERIC(15,2),
  SALARY_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_NIGHT */ NUMERIC(15,2),
  SALARY_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_OVERTIME */ NUMERIC(15,2),
  SALARY_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_PIECEWORK /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PIECEWORK */ NUMERIC(15,2),
  SICKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS */ INTEGER,
  SICKDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS_PAY */ NUMERIC(15,2),
  ACCIDENT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_DAYS */ INTEGER,
  ACCIDENT_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_PAY */ NUMERIC(15,2),
  AVERAGE_INCOME_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_DAYS */ INTEGER,
  AVERAGE_INCOME_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_PAY */ NUMERIC(15,2),
  FACT_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_DAYS */ INTEGER,
  FACT_AVPAY_FREE_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_HOURS */ FLOAT,
  FACT_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORK_DAYS */ INTEGER,
  FACT_AVPAY_WORKINHOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORKINHOLIDAYS */ INTEGER,
  FACT_AVPAY_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS */ FLOAT,
  FACT_AVPAY_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS_OVERTIME */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS_OVERT */ FLOAT,
  SALARY_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_FREE_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  BUSINESS_TRIP_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_DAYS */ INTEGER,
  BUSINESS_TRIP_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_PAY */ NUMERIC(15,2),
  PAID_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS */ INTEGER,
  PAID_HOLIDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS_PAY */ NUMERIC(15,2),
  VACATION_DAYS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_CURRENT */ FLOAT,
  VACATION_DAYS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_NEXT */ FLOAT,
  VACATION_HOURS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_CURRENT */ FLOAT,
  VACATION_HOURS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_NEXT */ FLOAT,
  VACATION_PAY_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_CURRENT */ NUMERIC(15,2),
  VACATION_PAY_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_NEXT */ NUMERIC(15,2),
  VACATION_DNS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_NEXT */ NUMERIC(15,2),
  VACATION_DDS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_NEXT */ NUMERIC(15,2),
  VACATION_IIN_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_NEXT */ NUMERIC(15,2),
  VACATION_IIN_REDUCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_REDUCE_NEXT */ NUMERIC(15,2),
  VACATION_CASH_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_CASH_NEXT */ NUMERIC(15,2),
  VACATION_PAY_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_PREV */ NUMERIC(15,2),
  VACATION_DNS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_PREV */ NUMERIC(15,2),
  VACATION_DDS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_PREV */ NUMERIC(15,2),
  VACATION_IIN_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_PREV */ NUMERIC(15,2),
  VACATION_DAYS_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_COMP */ FLOAT,
  VACATION_PAY_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_COMP */ NUMERIC(15,2),
  PLUS_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_TAXED */ NUMERIC(15,2),
  PLUS_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOTTAXED */ NUMERIC(15,2),
  PLUS_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOSAI */ NUMERIC(15,2),
  PLUS_AUTHORS_FEES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_AUTHORS_FEES */ NUMERIC(15,2),
  MINUS_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_BEFORE_IIN */ NUMERIC(15,2),
  MINUS_AFTER_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_AFTER_IIN */ NUMERIC(15,2),
  PLUS_PF_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_NOTTAXED */ NUMERIC(15,2),
  PLUS_PF_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_TAXED */ NUMERIC(15,2),
  PLUS_LI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_NOTTAXED */ NUMERIC(15,2),
  PLUS_LI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_TAXED */ NUMERIC(15,2),
  PLUS_HI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_NOTTAXED */ NUMERIC(15,2),
  PLUS_HI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_TAXED */ NUMERIC(15,2),
  PLUS_NP_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_TAXED */ NUMERIC(15,2),
  PLUS_NP_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOTTAXED */ NUMERIC(15,2),
  PLUS_NP_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOSAI */ NUMERIC(15,2),
  TOTAL_BEFORE_TAXES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TOTAL_BEFORE_TAXES */ NUMERIC(15,2),
  ADJUSTED_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADJUSTED_AMOUNT */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN_REVERSE */ NUMERIC(15,2),
  RATE_DNSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DNSN */ NUMERIC(15,2),
  RATE_DDSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DDSN */ NUMERIC(15,2),
  DNSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT */ NUMERIC(15,2),
  DDSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT */ NUMERIC(15,2),
  SN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_AMOUNT */ NUMERIC(15,2),
  DNSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  DDSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  SN_MAX_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_MAX_AMOUNT */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM0 */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS0 */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION0 */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY0 */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT0 */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT */ NUMERIC(15,2),
  IIN_EXEMPT_EXPENSES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_EXPENSES */ NUMERIC(15,2),
  IIN_EXEMPT_2TP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2TP */ SMALLINT,
  IIN_EXEMPT_20 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_20 */ NUMERIC(15,2),
  IIN_EXEMPT_2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2 */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN_REVERSE */ NUMERIC(15,2),
  RATE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN */ NUMERIC(15,2),
  RATE_IIN2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN2 */ NUMERIC(15,2),
  IIN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT */ NUMERIC(15,2),
  IIN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT_REVERSE */ NUMERIC(15,2),
  URVN_AMAOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.URVN_AMAOUNT */ NUMERIC(15,2),
  PLUS_NOT_PAID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOT_PAID */ NUMERIC(15,2),
  VACATION_ADVANCE_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_CURRENT */ NUMERIC(15,2),
  VACATION_ADVANCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_NEXT */ NUMERIC(15,2),
  VACATION_ADVANCE_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_PREV */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADVANCE */ NUMERIC(15,2),
  PAY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY */ NUMERIC(15,2),
  PAYT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAYT */ NUMERIC(15,2),
  PAY_DATE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY_DATE */ DATE,
  COMMENTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.COMMENTS */ VARCHAR(255),
  WITHHOLD_FROM_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.WITHHOLD_FROM_PAY */ NUMERIC(15,2),
  FORAVPAYCALC_BRUTO /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_BRUTO */ NUMERIC(15,2),
  FORAVPAYCALC_PAYOUT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_PAYOUT */ NUMERIC(15,2),
  FORAVPAYCALC_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_DAYS */ INTEGER,
  FORAVPAYCALC_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_HOURS */ FLOAT,
  AVPAYCALC_CALDAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_CALDAY */ NUMERIC(13,4),
  AVPAYCALC_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_DAY */ NUMERIC(13,4),
  AVPAYCALC_HOUR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_HOUR */ NUMERIC(13,4),
  DT_EDITED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DT_EDITED */ TIMESTAMP,
  CALC_VER /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALC_VER */ INTEGER,
  TS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_HIST_02(
  PIDSX INTEGER,
  PTIME1 TIMESTAMP,
  PTIME2 TIMESTAMP)
RETURNS (
  IDH /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  ID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDS */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDSX */ INTEGER,
  IDST /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDST */ INTEGER,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IS_TEMP */ SMALLINT,
  TYPE_TAG /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TYPE_TAG */ SMALLINT,
  IDP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SNR */ SMALLINT,
  FNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FNAME */ VARCHAR(20),
  LNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.LNAME */ VARCHAR(20),
  POSITION_TITLE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.POSITION_TITLE */ VARCHAR(50),
  TERRITORIAL_CODE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TERRITORIAL_CODE */ VARCHAR(20),
  CALENDAR_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS */ INTEGER,
  CALENDAR_DAYS_USE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS_USE */ INTEGER,
  MONTH_WORKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKDAYS */ INTEGER,
  MONTH_WORKHOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKHOURS */ FLOAT,
  PLAN_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_DAYS */ INTEGER,
  PLAN_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS */ FLOAT,
  PLAN_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_NIGHT */ FLOAT,
  PLAN_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_OVERTIME */ FLOAT,
  FACT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_DAYS */ INTEGER,
  FACT_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS */ FLOAT,
  FACT_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_NIGHT */ FLOAT,
  FACT_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_OVERTIME */ FLOAT,
  PLAN_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_DAYS */ INTEGER,
  PLAN_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS */ FLOAT,
  PLAN_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_NIGHT */ FLOAT,
  PLAN_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_OVERTIME */ FLOAT,
  FACT_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_DAYS */ INTEGER,
  FACT_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS */ FLOAT,
  FACT_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_NIGHT */ FLOAT,
  FACT_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_OVERTIME */ FLOAT,
  PLAN_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_DAYS */ INTEGER,
  PLAN_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS */ FLOAT,
  PLAN_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  PLAN_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  FACT_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_DAYS */ INTEGER,
  FACT_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS */ FLOAT,
  FACT_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  FACT_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  SALARY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY */ NUMERIC(15,2),
  SALARY_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_DAY */ NUMERIC(15,2),
  SALARY_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_NIGHT */ NUMERIC(15,2),
  SALARY_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_OVERTIME */ NUMERIC(15,2),
  SALARY_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_PIECEWORK /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PIECEWORK */ NUMERIC(15,2),
  SICKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS */ INTEGER,
  SICKDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS_PAY */ NUMERIC(15,2),
  ACCIDENT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_DAYS */ INTEGER,
  ACCIDENT_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_PAY */ NUMERIC(15,2),
  AVERAGE_INCOME_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_DAYS */ INTEGER,
  AVERAGE_INCOME_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_PAY */ NUMERIC(15,2),
  FACT_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_DAYS */ INTEGER,
  FACT_AVPAY_FREE_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_HOURS */ FLOAT,
  FACT_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORK_DAYS */ INTEGER,
  FACT_AVPAY_WORKINHOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORKINHOLIDAYS */ INTEGER,
  FACT_AVPAY_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS */ FLOAT,
  FACT_AVPAY_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS_OVERTIME */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS_OVERT */ FLOAT,
  SALARY_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_FREE_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  BUSINESS_TRIP_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_DAYS */ INTEGER,
  BUSINESS_TRIP_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_PAY */ NUMERIC(15,2),
  PAID_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS */ INTEGER,
  PAID_HOLIDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS_PAY */ NUMERIC(15,2),
  VACATION_DAYS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_CURRENT */ FLOAT,
  VACATION_DAYS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_NEXT */ FLOAT,
  VACATION_HOURS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_CURRENT */ FLOAT,
  VACATION_HOURS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_NEXT */ FLOAT,
  VACATION_PAY_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_CURRENT */ NUMERIC(15,2),
  VACATION_PAY_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_NEXT */ NUMERIC(15,2),
  VACATION_DNS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_NEXT */ NUMERIC(15,2),
  VACATION_DDS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_NEXT */ NUMERIC(15,2),
  VACATION_IIN_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_NEXT */ NUMERIC(15,2),
  VACATION_IIN_REDUCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_REDUCE_NEXT */ NUMERIC(15,2),
  VACATION_CASH_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_CASH_NEXT */ NUMERIC(15,2),
  VACATION_PAY_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_PREV */ NUMERIC(15,2),
  VACATION_DNS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_PREV */ NUMERIC(15,2),
  VACATION_DDS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_PREV */ NUMERIC(15,2),
  VACATION_IIN_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_PREV */ NUMERIC(15,2),
  VACATION_DAYS_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_COMP */ FLOAT,
  VACATION_PAY_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_COMP */ NUMERIC(15,2),
  PLUS_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_TAXED */ NUMERIC(15,2),
  PLUS_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOTTAXED */ NUMERIC(15,2),
  PLUS_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOSAI */ NUMERIC(15,2),
  PLUS_AUTHORS_FEES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_AUTHORS_FEES */ NUMERIC(15,2),
  MINUS_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_BEFORE_IIN */ NUMERIC(15,2),
  MINUS_AFTER_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_AFTER_IIN */ NUMERIC(15,2),
  PLUS_PF_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_NOTTAXED */ NUMERIC(15,2),
  PLUS_PF_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_TAXED */ NUMERIC(15,2),
  PLUS_LI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_NOTTAXED */ NUMERIC(15,2),
  PLUS_LI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_TAXED */ NUMERIC(15,2),
  PLUS_HI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_NOTTAXED */ NUMERIC(15,2),
  PLUS_HI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_TAXED */ NUMERIC(15,2),
  PLUS_NP_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_TAXED */ NUMERIC(15,2),
  PLUS_NP_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOTTAXED */ NUMERIC(15,2),
  PLUS_NP_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOSAI */ NUMERIC(15,2),
  TOTAL_BEFORE_TAXES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TOTAL_BEFORE_TAXES */ NUMERIC(15,2),
  ADJUSTED_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADJUSTED_AMOUNT */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN_REVERSE */ NUMERIC(15,2),
  RATE_DNSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DNSN */ NUMERIC(15,2),
  RATE_DDSN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DDSN */ NUMERIC(15,2),
  DNSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT */ NUMERIC(15,2),
  DDSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT */ NUMERIC(15,2),
  SN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_AMOUNT */ NUMERIC(15,2),
  DNSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  DDSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  SN_MAX_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_MAX_AMOUNT */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM0 */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS0 */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION0 */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY0 */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT0 */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT */ NUMERIC(15,2),
  IIN_EXEMPT_EXPENSES /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_EXPENSES */ NUMERIC(15,2),
  IIN_EXEMPT_2TP /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2TP */ SMALLINT,
  IIN_EXEMPT_20 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_20 */ NUMERIC(15,2),
  IIN_EXEMPT_2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2 */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN_REVERSE */ NUMERIC(15,2),
  RATE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN */ NUMERIC(15,2),
  RATE_IIN2 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN2 */ NUMERIC(15,2),
  IIN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT */ NUMERIC(15,2),
  IIN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT_REVERSE */ NUMERIC(15,2),
  URVN_AMAOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.URVN_AMAOUNT */ NUMERIC(15,2),
  PLUS_NOT_PAID /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOT_PAID */ NUMERIC(15,2),
  VACATION_ADVANCE_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_CURRENT */ NUMERIC(15,2),
  VACATION_ADVANCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_NEXT */ NUMERIC(15,2),
  VACATION_ADVANCE_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_PREV */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADVANCE */ NUMERIC(15,2),
  PAY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY */ NUMERIC(15,2),
  PAYT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAYT */ NUMERIC(15,2),
  PAY_DATE /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY_DATE */ DATE,
  COMMENTS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.COMMENTS */ VARCHAR(255),
  WITHHOLD_FROM_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.WITHHOLD_FROM_PAY */ NUMERIC(15,2),
  FORAVPAYCALC_BRUTO /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_BRUTO */ NUMERIC(15,2),
  FORAVPAYCALC_PAYOUT /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_PAYOUT */ NUMERIC(15,2),
  FORAVPAYCALC_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_DAYS */ INTEGER,
  FORAVPAYCALC_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_HOURS */ FLOAT,
  AVPAYCALC_CALDAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_CALDAY */ NUMERIC(13,4),
  AVPAYCALC_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_DAY */ NUMERIC(13,4),
  AVPAYCALC_HOUR /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_HOUR */ NUMERIC(13,4),
  DT_EDITED /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DT_EDITED */ TIMESTAMP,
  CALC_VER /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALC_VER */ INTEGER,
  TS /* TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_SALARY_SHEETS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDS */ INTEGER,
  IDSX /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDSX */ INTEGER,
  IDST /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDST */ INTEGER,
  IS_TEMP /* TYPE OF COLUMN A_SALARY_SHEETS_R.IS_TEMP */ SMALLINT,
  TYPE_TAG /* TYPE OF COLUMN A_SALARY_SHEETS_R.TYPE_TAG */ SMALLINT,
  IDP /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_SALARY_SHEETS_R.IDAM */ INTEGER,
  SNR /* TYPE OF COLUMN A_SALARY_SHEETS_R.SNR */ SMALLINT,
  FNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FNAME */ VARCHAR(20),
  LNAME /* TYPE OF COLUMN A_SALARY_SHEETS_R.LNAME */ VARCHAR(20),
  POSITION_TITLE /* TYPE OF COLUMN A_SALARY_SHEETS_R.POSITION_TITLE */ VARCHAR(50),
  TERRITORIAL_CODE /* TYPE OF COLUMN A_SALARY_SHEETS_R.TERRITORIAL_CODE */ VARCHAR(20),
  CALENDAR_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.CALENDAR_DAYS */ INTEGER,
  CALENDAR_DAYS_USE /* TYPE OF COLUMN A_SALARY_SHEETS_R.CALENDAR_DAYS_USE */ INTEGER,
  MONTH_WORKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.MONTH_WORKDAYS */ INTEGER,
  MONTH_WORKHOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.MONTH_WORKHOURS */ FLOAT,
  PLAN_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_DAYS */ INTEGER,
  PLAN_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS */ FLOAT,
  PLAN_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS_NIGHT */ FLOAT,
  PLAN_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS_OVERTIME */ FLOAT,
  FACT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_DAYS */ INTEGER,
  FACT_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS */ FLOAT,
  FACT_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS_NIGHT */ FLOAT,
  FACT_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS_OVERTIME */ FLOAT,
  PLAN_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_DAYS */ INTEGER,
  PLAN_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS */ FLOAT,
  PLAN_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS_NIGHT */ FLOAT,
  PLAN_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS_OVERTIME */ FLOAT,
  FACT_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_DAYS */ INTEGER,
  FACT_WORK_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS */ FLOAT,
  FACT_WORK_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS_NIGHT */ FLOAT,
  FACT_WORK_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS_OVERTIME */ FLOAT,
  PLAN_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_DAYS */ INTEGER,
  PLAN_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS */ FLOAT,
  PLAN_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  PLAN_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  FACT_HOLIDAYS_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_DAYS */ INTEGER,
  FACT_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS */ FLOAT,
  FACT_HOLIDAYS_HOURS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS_NIGHT */ FLOAT,
  FACT_HOLIDAYS_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS_OVERTIME */ FLOAT,
  SALARY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY */ NUMERIC(15,2),
  SALARY_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_DAY */ NUMERIC(15,2),
  SALARY_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_NIGHT */ NUMERIC(15,2),
  SALARY_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_OVERTIME */ NUMERIC(15,2),
  SALARY_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PAID_HOLIDAYS_DAY */ NUMERIC(15,2),
  SALARY_PAID_HOLIDAYS_NIGHT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PAID_HOLIDAYS_NIGHT */ NUMERIC(15,2),
  SALARY_PIECEWORK /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PIECEWORK */ NUMERIC(15,2),
  SICKDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SICKDAYS */ INTEGER,
  SICKDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.SICKDAYS_PAY */ NUMERIC(15,2),
  ACCIDENT_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.ACCIDENT_DAYS */ INTEGER,
  ACCIDENT_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.ACCIDENT_PAY */ NUMERIC(15,2),
  AVERAGE_INCOME_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVERAGE_INCOME_DAYS */ INTEGER,
  AVERAGE_INCOME_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVERAGE_INCOME_PAY */ NUMERIC(15,2),
  FACT_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_FREE_DAYS */ INTEGER,
  FACT_AVPAY_FREE_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_FREE_HOURS */ FLOAT,
  FACT_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_WORK_DAYS */ INTEGER,
  FACT_AVPAY_WORKINHOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_WORKINHOLIDAYS */ INTEGER,
  FACT_AVPAY_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOURS */ FLOAT,
  FACT_AVPAY_HOURS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOURS_OVERTIME */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOLIDAYS_HOURS */ FLOAT,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOLIDAYS_HOURS_OVERT */ FLOAT,
  SALARY_AVPAY_FREE_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_FREE_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_WORK_DAYS */ NUMERIC(15,2),
  SALARY_AVPAY_WORK_DAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_WORK_DAYS_OVERTIME */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_HOLIDAYS */ NUMERIC(15,2),
  SALARY_AVPAY_HOLIDAYS_OVERTIME /* TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_HOLIDAYS_OVERTIME */ NUMERIC(15,2),
  BUSINESS_TRIP_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.BUSINESS_TRIP_DAYS */ INTEGER,
  BUSINESS_TRIP_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.BUSINESS_TRIP_PAY */ NUMERIC(15,2),
  PAID_HOLIDAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAID_HOLIDAYS */ INTEGER,
  PAID_HOLIDAYS_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAID_HOLIDAYS_PAY */ NUMERIC(15,2),
  VACATION_DAYS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_CURRENT */ FLOAT,
  VACATION_DAYS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_NEXT */ FLOAT,
  VACATION_HOURS_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_HOURS_CURRENT */ FLOAT,
  VACATION_HOURS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_HOURS_NEXT */ FLOAT,
  VACATION_PAY_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_CURRENT */ NUMERIC(15,2),
  VACATION_PAY_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_NEXT */ NUMERIC(15,2),
  VACATION_DNS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DNS_NEXT */ NUMERIC(15,2),
  VACATION_DDS_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DDS_NEXT */ NUMERIC(15,2),
  VACATION_IIN_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_NEXT */ NUMERIC(15,2),
  VACATION_IIN_REDUCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_REDUCE_NEXT */ NUMERIC(15,2),
  VACATION_CASH_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_CASH_NEXT */ NUMERIC(15,2),
  VACATION_PAY_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_PREV */ NUMERIC(15,2),
  VACATION_DNS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DNS_PREV */ NUMERIC(15,2),
  VACATION_DDS_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DDS_PREV */ NUMERIC(15,2),
  VACATION_IIN_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_PREV */ NUMERIC(15,2),
  VACATION_DAYS_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_COMP */ FLOAT,
  VACATION_PAY_COMP /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_COMP */ NUMERIC(15,2),
  PLUS_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_TAXED */ NUMERIC(15,2),
  PLUS_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOTTAXED */ NUMERIC(15,2),
  PLUS_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOSAI */ NUMERIC(15,2),
  PLUS_AUTHORS_FEES /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_AUTHORS_FEES */ NUMERIC(15,2),
  MINUS_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.MINUS_BEFORE_IIN */ NUMERIC(15,2),
  MINUS_AFTER_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.MINUS_AFTER_IIN */ NUMERIC(15,2),
  PLUS_PF_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_PF_NOTTAXED */ NUMERIC(15,2),
  PLUS_PF_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_PF_TAXED */ NUMERIC(15,2),
  PLUS_LI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_LI_NOTTAXED */ NUMERIC(15,2),
  PLUS_LI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_LI_TAXED */ NUMERIC(15,2),
  PLUS_HI_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_HI_NOTTAXED */ NUMERIC(15,2),
  PLUS_HI_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_HI_TAXED */ NUMERIC(15,2),
  PLUS_NP_TAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_TAXED */ NUMERIC(15,2),
  PLUS_NP_NOTTAXED /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_NOTTAXED */ NUMERIC(15,2),
  PLUS_NP_NOSAI /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_NOSAI */ NUMERIC(15,2),
  TOTAL_BEFORE_TAXES /* TYPE OF COLUMN A_SALARY_SHEETS_R.TOTAL_BEFORE_TAXES */ NUMERIC(15,2),
  ADJUSTED_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.ADJUSTED_AMOUNT */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_SN */ NUMERIC(15,2),
  AMOUNT_BEFORE_SN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_SN_REVERSE */ NUMERIC(15,2),
  RATE_DNSN /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_DNSN */ NUMERIC(15,2),
  RATE_DDSN /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_DDSN */ NUMERIC(15,2),
  DNSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.DNSN_AMOUNT */ NUMERIC(15,2),
  DDSN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.DDSN_AMOUNT */ NUMERIC(15,2),
  SN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SN_AMOUNT */ NUMERIC(15,2),
  DNSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.DNSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  DDSN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.DDSN_AMOUNT_REVERSE */ NUMERIC(15,2),
  SN_MAX_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.SN_MAX_AMOUNT */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_UNTAXED_MINIMUM0 */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_DEPENDANTS0 */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_RETALIATION0 */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_INVALIDITY0 */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_NATIONAL_MOVEMENT0 */ NUMERIC(15,2),
  IIN_EXEMPT_UNTAXED_MINIMUM /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_UNTAXED_MINIMUM */ NUMERIC(15,2),
  IIN_EXEMPT_DEPENDANTS /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_DEPENDANTS */ NUMERIC(15,2),
  IIN_EXEMPT_RETALIATION /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_RETALIATION */ NUMERIC(15,2),
  IIN_EXEMPT_INVALIDITY /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_INVALIDITY */ NUMERIC(15,2),
  IIN_EXEMPT_NATIONAL_MOVEMENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_NATIONAL_MOVEMENT */ NUMERIC(15,2),
  IIN_EXEMPT_EXPENSES /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_EXPENSES */ NUMERIC(15,2),
  IIN_EXEMPT_2TP /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_2TP */ SMALLINT,
  IIN_EXEMPT_20 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_20 */ NUMERIC(15,2),
  IIN_EXEMPT_2 /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_2 */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_IIN */ NUMERIC(15,2),
  AMOUNT_BEFORE_IIN_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_IIN_REVERSE */ NUMERIC(15,2),
  RATE_IIN /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_IIN */ NUMERIC(15,2),
  RATE_IIN2 /* TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_IIN2 */ NUMERIC(15,2),
  IIN_AMOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_AMOUNT */ NUMERIC(15,2),
  IIN_AMOUNT_REVERSE /* TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_AMOUNT_REVERSE */ NUMERIC(15,2),
  URVN_AMAOUNT /* TYPE OF COLUMN A_SALARY_SHEETS_R.URVN_AMAOUNT */ NUMERIC(15,2),
  PLUS_NOT_PAID /* TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOT_PAID */ NUMERIC(15,2),
  VACATION_ADVANCE_CURRENT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_CURRENT */ NUMERIC(15,2),
  VACATION_ADVANCE_NEXT /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_NEXT */ NUMERIC(15,2),
  VACATION_ADVANCE_PREV /* TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_PREV */ NUMERIC(15,2),
  ADVANCE /* TYPE OF COLUMN A_SALARY_SHEETS_R.ADVANCE */ NUMERIC(15,2),
  PAY0 /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAY0 */ NUMERIC(15,2),
  PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAY */ NUMERIC(15,2),
  PAYT /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAYT */ NUMERIC(15,2),
  PAY_DATE /* TYPE OF COLUMN A_SALARY_SHEETS_R.PAY_DATE */ DATE,
  COMMENTS /* TYPE OF COLUMN A_SALARY_SHEETS_R.COMMENTS */ VARCHAR(255),
  WITHHOLD_FROM_PAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.WITHHOLD_FROM_PAY */ NUMERIC(15,2),
  FORAVPAYCALC_BRUTO /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_BRUTO */ NUMERIC(15,2),
  FORAVPAYCALC_PAYOUT /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_PAYOUT */ NUMERIC(15,2),
  FORAVPAYCALC_DAYS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_DAYS */ INTEGER,
  FORAVPAYCALC_HOURS /* TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_HOURS */ FLOAT,
  AVPAYCALC_CALDAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_CALDAY */ NUMERIC(13,4),
  AVPAYCALC_DAY /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_DAY */ NUMERIC(13,4),
  AVPAYCALC_HOUR /* TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_HOUR */ NUMERIC(13,4),
  DT_EDITED /* TYPE OF COLUMN A_SALARY_SHEETS_R.DT_EDITED */ TIMESTAMP,
  CALC_VER /* TYPE OF COLUMN A_SALARY_SHEETS_R.CALC_VER */ INTEGER,
  TS /* TYPE OF COLUMN A_SALARY_SHEETS_R.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_TIMESHEET_LISTS_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_TIMESHEET_LISTS.ID */ INTEGER,
  YR /* TYPE OF COLUMN A_TIMESHEET_LISTS.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_TIMESHEET_LISTS.MT */ INTEGER,
  SNR /* TYPE OF COLUMN A_TIMESHEET_LISTS.SNR */ SMALLINT,
  DESCR /* TYPE OF COLUMN A_TIMESHEET_LISTS.DESCR */ VARCHAR(50),
  IDSH /* TYPE OF COLUMN A_TIMESHEET_LISTS.IDSH */ INTEGER,
  DEP /* TYPE OF COLUMN A_TIMESHEET_LISTS.DEP */ VARCHAR(15),
  TS /* TYPE OF COLUMN A_TIMESHEET_LISTS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_TIMESHEET_LISTS_R_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.ID */ INTEGER,
  IDS /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDS */ INTEGER,
  IDP /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDP */ INTEGER,
  IDAM /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDAM */ INTEGER,
  IDPL /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDPL */ INTEGER,
  SNR /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.SNR */ SMALLINT,
  PLAN_TYPE /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.PLAN_TYPE */ SMALLINT,
  NIGHT /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.NIGHT */ SMALLINT,
  OVERTIME /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.OVERTIME */ SMALLINT,
  TS /* TYPE OF COLUMN A_TIMESHEET_LISTS_R.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_A_TIMESHEET_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN A_TIMESHEET.ID */ INTEGER,
  IDP /* TYPE OF COLUMN A_TIMESHEET.IDP */ INTEGER,
  IDL /* TYPE OF COLUMN A_TIMESHEET.IDL */ INTEGER,
  SNR /* TYPE OF COLUMN A_TIMESHEET.SNR */ SMALLINT,
  PERID /* TYPE OF COLUMN A_TIMESHEET.PERID */ INTEGER,
  AMID /* TYPE OF COLUMN A_TIMESHEET.AMID */ INTEGER,
  YR /* TYPE OF COLUMN A_TIMESHEET.YR */ INTEGER,
  MT /* TYPE OF COLUMN A_TIMESHEET.MT */ INTEGER,
  KIND1 /* TYPE OF COLUMN A_TIMESHEET.KIND1 */ SMALLINT,
  KIND2 /* TYPE OF COLUMN A_TIMESHEET.KIND2 */ SMALLINT,
  V1 /* TYPE OF COLUMN A_TIMESHEET.V1 */ FLOAT,
  V2 /* TYPE OF COLUMN A_TIMESHEET.V2 */ FLOAT,
  V3 /* TYPE OF COLUMN A_TIMESHEET.V3 */ FLOAT,
  V4 /* TYPE OF COLUMN A_TIMESHEET.V4 */ FLOAT,
  V5 /* TYPE OF COLUMN A_TIMESHEET.V5 */ FLOAT,
  V6 /* TYPE OF COLUMN A_TIMESHEET.V6 */ FLOAT,
  V7 /* TYPE OF COLUMN A_TIMESHEET.V7 */ FLOAT,
  V8 /* TYPE OF COLUMN A_TIMESHEET.V8 */ FLOAT,
  V9 /* TYPE OF COLUMN A_TIMESHEET.V9 */ FLOAT,
  V10 /* TYPE OF COLUMN A_TIMESHEET.V10 */ FLOAT,
  V11 /* TYPE OF COLUMN A_TIMESHEET.V11 */ FLOAT,
  V12 /* TYPE OF COLUMN A_TIMESHEET.V12 */ FLOAT,
  V13 /* TYPE OF COLUMN A_TIMESHEET.V13 */ FLOAT,
  V14 /* TYPE OF COLUMN A_TIMESHEET.V14 */ FLOAT,
  V15 /* TYPE OF COLUMN A_TIMESHEET.V15 */ FLOAT,
  V16 /* TYPE OF COLUMN A_TIMESHEET.V16 */ FLOAT,
  V17 /* TYPE OF COLUMN A_TIMESHEET.V17 */ FLOAT,
  V18 /* TYPE OF COLUMN A_TIMESHEET.V18 */ FLOAT,
  V19 /* TYPE OF COLUMN A_TIMESHEET.V19 */ FLOAT,
  V20 /* TYPE OF COLUMN A_TIMESHEET.V20 */ FLOAT,
  V21 /* TYPE OF COLUMN A_TIMESHEET.V21 */ FLOAT,
  V22 /* TYPE OF COLUMN A_TIMESHEET.V22 */ FLOAT,
  V23 /* TYPE OF COLUMN A_TIMESHEET.V23 */ FLOAT,
  V24 /* TYPE OF COLUMN A_TIMESHEET.V24 */ FLOAT,
  V25 /* TYPE OF COLUMN A_TIMESHEET.V25 */ FLOAT,
  V26 /* TYPE OF COLUMN A_TIMESHEET.V26 */ FLOAT,
  V27 /* TYPE OF COLUMN A_TIMESHEET.V27 */ FLOAT,
  V28 /* TYPE OF COLUMN A_TIMESHEET.V28 */ FLOAT,
  V29 /* TYPE OF COLUMN A_TIMESHEET.V29 */ FLOAT,
  V30 /* TYPE OF COLUMN A_TIMESHEET.V30 */ FLOAT,
  V31 /* TYPE OF COLUMN A_TIMESHEET.V31 */ FLOAT,
  K1 /* TYPE OF COLUMN A_TIMESHEET.K1 */ FLOAT,
  D1 /* TYPE OF COLUMN A_TIMESHEET.D1 */ SMALLINT,
  D2 /* TYPE OF COLUMN A_TIMESHEET.D2 */ SMALLINT,
  D3 /* TYPE OF COLUMN A_TIMESHEET.D3 */ SMALLINT,
  D4 /* TYPE OF COLUMN A_TIMESHEET.D4 */ SMALLINT,
  D5 /* TYPE OF COLUMN A_TIMESHEET.D5 */ SMALLINT,
  D6 /* TYPE OF COLUMN A_TIMESHEET.D6 */ SMALLINT,
  D7 /* TYPE OF COLUMN A_TIMESHEET.D7 */ SMALLINT,
  D8 /* TYPE OF COLUMN A_TIMESHEET.D8 */ SMALLINT,
  D9 /* TYPE OF COLUMN A_TIMESHEET.D9 */ SMALLINT,
  D10 /* TYPE OF COLUMN A_TIMESHEET.D10 */ SMALLINT,
  D11 /* TYPE OF COLUMN A_TIMESHEET.D11 */ SMALLINT,
  D12 /* TYPE OF COLUMN A_TIMESHEET.D12 */ SMALLINT,
  D13 /* TYPE OF COLUMN A_TIMESHEET.D13 */ SMALLINT,
  D14 /* TYPE OF COLUMN A_TIMESHEET.D14 */ SMALLINT,
  D15 /* TYPE OF COLUMN A_TIMESHEET.D15 */ SMALLINT,
  D16 /* TYPE OF COLUMN A_TIMESHEET.D16 */ SMALLINT,
  D17 /* TYPE OF COLUMN A_TIMESHEET.D17 */ SMALLINT,
  D18 /* TYPE OF COLUMN A_TIMESHEET.D18 */ SMALLINT,
  D19 /* TYPE OF COLUMN A_TIMESHEET.D19 */ SMALLINT,
  D20 /* TYPE OF COLUMN A_TIMESHEET.D20 */ SMALLINT,
  D21 /* TYPE OF COLUMN A_TIMESHEET.D21 */ SMALLINT,
  D22 /* TYPE OF COLUMN A_TIMESHEET.D22 */ SMALLINT,
  D23 /* TYPE OF COLUMN A_TIMESHEET.D23 */ SMALLINT,
  D24 /* TYPE OF COLUMN A_TIMESHEET.D24 */ SMALLINT,
  D25 /* TYPE OF COLUMN A_TIMESHEET.D25 */ SMALLINT,
  D26 /* TYPE OF COLUMN A_TIMESHEET.D26 */ SMALLINT,
  D27 /* TYPE OF COLUMN A_TIMESHEET.D27 */ SMALLINT,
  D28 /* TYPE OF COLUMN A_TIMESHEET.D28 */ SMALLINT,
  D29 /* TYPE OF COLUMN A_TIMESHEET.D29 */ SMALLINT,
  D30 /* TYPE OF COLUMN A_TIMESHEET.D30 */ SMALLINT,
  D31 /* TYPE OF COLUMN A_TIMESHEET.D31 */ SMALLINT,
  TS /* TYPE OF COLUMN A_TIMESHEET.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPS_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPS.ID */ INTEGER,
  DOCID /* TYPE OF COLUMN F_OPS.DOCID */ INTEGER,
  DESCR /* TYPE OF COLUMN F_OPS.DESCR */ VARCHAR(50),
  AC11 /* TYPE OF COLUMN F_OPS.AC11 */ VARCHAR(8),
  AC12 /* TYPE OF COLUMN F_OPS.AC12 */ VARCHAR(8),
  AC13 /* TYPE OF COLUMN F_OPS.AC13 */ VARCHAR(5),
  AC14 /* TYPE OF COLUMN F_OPS.AC14 */ VARCHAR(8),
  AC15 /* TYPE OF COLUMN F_OPS.AC15 */ VARCHAR(5),
  AC21 /* TYPE OF COLUMN F_OPS.AC21 */ VARCHAR(8),
  AC22 /* TYPE OF COLUMN F_OPS.AC22 */ VARCHAR(8),
  AC23 /* TYPE OF COLUMN F_OPS.AC23 */ VARCHAR(5),
  AC24 /* TYPE OF COLUMN F_OPS.AC24 */ VARCHAR(8),
  AC25 /* TYPE OF COLUMN F_OPS.AC25 */ VARCHAR(5),
  SUMMC /* TYPE OF COLUMN F_OPS.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN F_OPS.CUR */ VARCHAR(3),
  SUMM /* TYPE OF COLUMN F_OPS.SUMM */ NUMERIC(15,2),
  QV /* TYPE OF COLUMN F_OPS.QV */ FLOAT,
  NL /* TYPE OF COLUMN F_OPS.NL */ SMALLINT,
  ZDT /* TYPE OF COLUMN F_OPS.ZDT */ TIMESTAMP,
  TS /* TYPE OF COLUMN F_OPS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPS_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPS.ID */ INTEGER,
  DOCID /* TYPE OF COLUMN F_OPS.DOCID */ INTEGER,
  DESCR /* TYPE OF COLUMN F_OPS.DESCR */ VARCHAR(50),
  AC11 /* TYPE OF COLUMN F_OPS.AC11 */ VARCHAR(8),
  AC12 /* TYPE OF COLUMN F_OPS.AC12 */ VARCHAR(8),
  AC13 /* TYPE OF COLUMN F_OPS.AC13 */ VARCHAR(5),
  AC14 /* TYPE OF COLUMN F_OPS.AC14 */ VARCHAR(8),
  AC15 /* TYPE OF COLUMN F_OPS.AC15 */ VARCHAR(5),
  AC21 /* TYPE OF COLUMN F_OPS.AC21 */ VARCHAR(8),
  AC22 /* TYPE OF COLUMN F_OPS.AC22 */ VARCHAR(8),
  AC23 /* TYPE OF COLUMN F_OPS.AC23 */ VARCHAR(5),
  AC24 /* TYPE OF COLUMN F_OPS.AC24 */ VARCHAR(8),
  AC25 /* TYPE OF COLUMN F_OPS.AC25 */ VARCHAR(5),
  SUMMC /* TYPE OF COLUMN F_OPS.SUMMC */ NUMERIC(15,2),
  CUR /* TYPE OF COLUMN F_OPS.CUR */ VARCHAR(3),
  SUMM /* TYPE OF COLUMN F_OPS.SUMM */ NUMERIC(15,2),
  QV /* TYPE OF COLUMN F_OPS.QV */ FLOAT,
  NL /* TYPE OF COLUMN F_OPS.NL */ SMALLINT,
  ZDT /* TYPE OF COLUMN F_OPS.ZDT */ TIMESTAMP,
  TS /* TYPE OF COLUMN F_OPS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPSD_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPSD.ID */ INTEGER,
  DETE /* TYPE OF COLUMN F_OPSD.DETE */ DATE,
  NRX /* TYPE OF COLUMN F_OPSD.NRX */ VARCHAR(5),
  DOCTYP /* TYPE OF COLUMN F_OPSD.DOCTYP */ VARCHAR(10),
  DOCST /* TYPE OF COLUMN F_OPSD.DOCST */ VARCHAR(6),
  DOCNR /* TYPE OF COLUMN F_OPSD.DOCNR */ VARCHAR(15),
  CLID /* TYPE OF COLUMN F_OPSD.CLID */ VARCHAR(15),
  CLID2 /* TYPE OF COLUMN F_OPSD.CLID2 */ VARCHAR(15),
  DESCR /* TYPE OF COLUMN F_OPSD.DESCR */ VARCHAR(80),
  SUMM /* TYPE OF COLUMN F_OPSD.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN F_OPSD.PVN */ NUMERIC(15,2),
  OPT /* TYPE OF COLUMN F_OPSD.OPT */ INTEGER,
  ZNR /* TYPE OF COLUMN F_OPSD.ZNR */ INTEGER,
  ZU /* TYPE OF COLUMN F_OPSD.ZU */ VARCHAR(20),
  ZDT /* TYPE OF COLUMN F_OPSD.ZDT */ TIMESTAMP,
  DT2 /* TYPE OF COLUMN F_OPSD.DT2 */ DATE,
  YR /* TYPE OF COLUMN F_OPSD.YR */ SMALLINT,
  NL /* TYPE OF COLUMN F_OPSD.NL */ SMALLINT,
  IDDOCM /* TYPE OF COLUMN F_OPSD.IDDOCM */ INTEGER,
  TS /* TYPE OF COLUMN F_OPSD.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_OPSD_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_OPSD.ID */ INTEGER,
  DETE /* TYPE OF COLUMN F_OPSD.DETE */ DATE,
  NRX /* TYPE OF COLUMN F_OPSD.NRX */ VARCHAR(5),
  DOCTYP /* TYPE OF COLUMN F_OPSD.DOCTYP */ VARCHAR(10),
  DOCST /* TYPE OF COLUMN F_OPSD.DOCST */ VARCHAR(6),
  DOCNR /* TYPE OF COLUMN F_OPSD.DOCNR */ VARCHAR(15),
  CLID /* TYPE OF COLUMN F_OPSD.CLID */ VARCHAR(15),
  CLID2 /* TYPE OF COLUMN F_OPSD.CLID2 */ VARCHAR(15),
  DESCR /* TYPE OF COLUMN F_OPSD.DESCR */ VARCHAR(80),
  SUMM /* TYPE OF COLUMN F_OPSD.SUMM */ NUMERIC(15,2),
  PVN /* TYPE OF COLUMN F_OPSD.PVN */ NUMERIC(15,2),
  OPT /* TYPE OF COLUMN F_OPSD.OPT */ INTEGER,
  ZNR /* TYPE OF COLUMN F_OPSD.ZNR */ INTEGER,
  ZU /* TYPE OF COLUMN F_OPSD.ZU */ VARCHAR(20),
  ZDT /* TYPE OF COLUMN F_OPSD.ZDT */ TIMESTAMP,
  DT2 /* TYPE OF COLUMN F_OPSD.DT2 */ DATE,
  YR /* TYPE OF COLUMN F_OPSD.YR */ SMALLINT,
  NL /* TYPE OF COLUMN F_OPSD.NL */ SMALLINT,
  IDDOCM /* TYPE OF COLUMN F_OPSD.IDDOCM */ INTEGER,
  TS /* TYPE OF COLUMN F_OPSD.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_REP_BAL_12(
  SDT DATE,
  EDT DATE,
  PBALID VARCHAR(10))
RETURNS (
  ID /* TYPE OF COLUMN F_BALA21.ID */ INTEGER,
  SPID /* TYPE OF COLUMN F_BALA21.SPID */ INTEGER,
  BID /* TYPE OF COLUMN F_BALA21.BID */ INTEGER,
  S1 /* TYPE OF COLUMN F_BALA21.S1 */ NUMERIC(15,2),
  S2 /* TYPE OF COLUMN F_BALA21.S2 */ NUMERIC(15,2),
  TS /* TYPE OF COLUMN F_BALA21.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_REP_BAL_13(
  PBALID VARCHAR(10))
RETURNS (
  AC /* TYPE OF COLUMN F_ACP21.AC */ VARCHAR(8),
  NAME /* TYPE OF COLUMN F_ACP21.NAME */ VARCHAR(100),
  ID1 /* TYPE OF COLUMN F_ACP21.ID1 */ VARCHAR(15),
  ID2 /* TYPE OF COLUMN F_ACP21.ID2 */ VARCHAR(15),
  TS /* TYPE OF COLUMN F_ACP21.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_REP_DARZ_3(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN F_TREPDARZ1.ID */ INTEGER,
  SPID /* TYPE OF COLUMN F_TREPDARZ1.SPID */ INTEGER,
  DID /* TYPE OF COLUMN F_TREPDARZ1.DID */ INTEGER,
  RID /* TYPE OF COLUMN F_TREPDARZ1.RID */ INTEGER,
  DETE /* TYPE OF COLUMN F_TREPDARZ1.DETE */ DATE,
  NRX /* TYPE OF COLUMN F_TREPDARZ1.NRX */ VARCHAR(5),
  DOCTYP /* TYPE OF COLUMN F_TREPDARZ1.DOCTYP */ VARCHAR(10),
  DOCST /* TYPE OF COLUMN F_TREPDARZ1.DOCST */ VARCHAR(6),
  DOCNR /* TYPE OF COLUMN F_TREPDARZ1.DOCNR */ VARCHAR(15),
  CLID /* TYPE OF COLUMN F_TREPDARZ1.CLID */ VARCHAR(15),
  NAME /* TYPE OF COLUMN F_TREPDARZ1.NAME */ VARCHAR(100),
  REGNR /* TYPE OF COLUMN F_TREPDARZ1.REGNR */ VARCHAR(15),
  DESCR /* TYPE OF COLUMN F_TREPDARZ1.DESCR */ VARCHAR(80),
  AC1 /* TYPE OF COLUMN F_TREPDARZ1.AC1 */ VARCHAR(8),
  AC2 /* TYPE OF COLUMN F_TREPDARZ1.AC2 */ VARCHAR(8),
  AA /* TYPE OF COLUMN F_TREPDARZ1.AA */ NUMERIC(15,2),
  A1 /* TYPE OF COLUMN F_TREPDARZ1.A1 */ NUMERIC(15,2),
  A2 /* TYPE OF COLUMN F_TREPDARZ1.A2 */ NUMERIC(15,2),
  A3 /* TYPE OF COLUMN F_TREPDARZ1.A3 */ NUMERIC(15,2),
  A4 /* TYPE OF COLUMN F_TREPDARZ1.A4 */ NUMERIC(15,2),
  A5 /* TYPE OF COLUMN F_TREPDARZ1.A5 */ NUMERIC(15,2),
  A6 /* TYPE OF COLUMN F_TREPDARZ1.A6 */ NUMERIC(15,2),
  A7 /* TYPE OF COLUMN F_TREPDARZ1.A7 */ NUMERIC(15,2),
  A8 /* TYPE OF COLUMN F_TREPDARZ1.A8 */ NUMERIC(15,2),
  A9 /* TYPE OF COLUMN F_TREPDARZ1.A9 */ NUMERIC(15,2),
  A10 /* TYPE OF COLUMN F_TREPDARZ1.A10 */ NUMERIC(15,2),
  A11 /* TYPE OF COLUMN F_TREPDARZ1.A11 */ NUMERIC(15,2),
  A12 /* TYPE OF COLUMN F_TREPDARZ1.A12 */ NUMERIC(15,2),
  A13 /* TYPE OF COLUMN F_TREPDARZ1.A13 */ NUMERIC(15,2),
  A14 /* TYPE OF COLUMN F_TREPDARZ1.A14 */ NUMERIC(15,2),
  A15 /* TYPE OF COLUMN F_TREPDARZ1.A15 */ NUMERIC(15,2),
  A16 /* TYPE OF COLUMN F_TREPDARZ1.A16 */ NUMERIC(15,2),
  A17 /* TYPE OF COLUMN F_TREPDARZ1.A17 */ NUMERIC(15,2),
  A18 /* TYPE OF COLUMN F_TREPDARZ1.A18 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_F_REP_DARZ_4(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID /* TYPE OF COLUMN F_TREPDARZ2.ID */ INTEGER,
  SPID /* TYPE OF COLUMN F_TREPDARZ2.SPID */ INTEGER,
  RID0 /* TYPE OF COLUMN F_TREPDARZ2.RID0 */ INTEGER,
  A1 /* TYPE OF COLUMN F_TREPDARZ2.A1 */ NUMERIC(15,2),
  A2 /* TYPE OF COLUMN F_TREPDARZ2.A2 */ NUMERIC(15,2),
  A3 /* TYPE OF COLUMN F_TREPDARZ2.A3 */ NUMERIC(15,2),
  A4 /* TYPE OF COLUMN F_TREPDARZ2.A4 */ NUMERIC(15,2),
  A5 /* TYPE OF COLUMN F_TREPDARZ2.A5 */ NUMERIC(15,2),
  A6 /* TYPE OF COLUMN F_TREPDARZ2.A6 */ NUMERIC(15,2),
  A7 /* TYPE OF COLUMN F_TREPDARZ2.A7 */ NUMERIC(15,2),
  A8 /* TYPE OF COLUMN F_TREPDARZ2.A8 */ NUMERIC(15,2),
  A9 /* TYPE OF COLUMN F_TREPDARZ2.A9 */ NUMERIC(15,2),
  A10 /* TYPE OF COLUMN F_TREPDARZ2.A10 */ NUMERIC(15,2),
  A11 /* TYPE OF COLUMN F_TREPDARZ2.A11 */ NUMERIC(15,2),
  A12 /* TYPE OF COLUMN F_TREPDARZ2.A12 */ NUMERIC(15,2),
  A13 /* TYPE OF COLUMN F_TREPDARZ2.A13 */ NUMERIC(15,2),
  A14 /* TYPE OF COLUMN F_TREPDARZ2.A14 */ NUMERIC(15,2),
  A15 /* TYPE OF COLUMN F_TREPDARZ2.A15 */ NUMERIC(15,2),
  A16 /* TYPE OF COLUMN F_TREPDARZ2.A16 */ NUMERIC(15,2),
  A17 /* TYPE OF COLUMN F_TREPDARZ2.A17 */ NUMERIC(15,2),
  A18 /* TYPE OF COLUMN F_TREPDARZ2.A18 */ NUMERIC(15,2),
  A19 /* TYPE OF COLUMN F_TREPDARZ2.A19 */ NUMERIC(15,2),
  A20 /* TYPE OF COLUMN F_TREPDARZ2.A20 */ NUMERIC(15,2),
  A21 /* TYPE OF COLUMN F_TREPDARZ2.A21 */ NUMERIC(15,2))
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_DOCS_01(
  PDT1 DATE,
  PDT2 DATE,
  PTP INTEGER,
  PSTATE INTEGER,
  PIDSTOREOUT INTEGER,
  PIDSTOREIN INTEGER,
  PIDSTOREOUTORIN INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_DOCS.ID */ INTEGER,
  DT /* TYPE OF COLUMN M_DOCS.DT */ DATE,
  SR /* TYPE OF COLUMN M_DOCS.SR */ VARCHAR(10),
  NR /* TYPE OF COLUMN M_DOCS.NR */ VARCHAR(20),
  TP /* TYPE OF COLUMN M_DOCS.TP */ INTEGER,
  PVNTYPE /* TYPE OF COLUMN M_DOCS.PVNTYPE */ INTEGER,
  STATE /* TYPE OF COLUMN M_DOCS.STATE */ INTEGER,
  IDSTOREIN /* TYPE OF COLUMN M_DOCS.IDSTOREIN */ INTEGER,
  IDSTOREOUT /* TYPE OF COLUMN M_DOCS.IDSTOREOUT */ INTEGER,
  IDCREDDOC /* TYPE OF COLUMN M_DOCS.IDCREDDOC */ INTEGER,
  CREDDOCDT /* TYPE OF COLUMN M_DOCS.CREDDOCDT */ DATE,
  SUMM /* TYPE OF COLUMN M_DOCS.SUMM */ NUMERIC(15,2),
  IDSEQ /* TYPE OF COLUMN M_DOCS.IDSEQ */ BIGINT,
  ACCIN /* TYPE OF COLUMN M_DOCS.ACCIN */ VARCHAR(8),
  ACCOUT /* TYPE OF COLUMN M_DOCS.ACCOUT */ VARCHAR(8),
  CREDDOCSR /* TYPE OF COLUMN M_DOCS.CREDDOCSR */ VARCHAR(10),
  CREDDOCNR /* TYPE OF COLUMN M_DOCS.CREDDOCNR */ VARCHAR(20),
  IDCARRIER /* TYPE OF COLUMN M_DOCS.IDCARRIER */ INTEGER,
  IDADDRESSOUT /* TYPE OF COLUMN M_DOCS.IDADDRESSOUT */ INTEGER,
  IDADDRESSIN /* TYPE OF COLUMN M_DOCS.IDADDRESSIN */ INTEGER,
  IDVEHICLE /* TYPE OF COLUMN M_DOCS.IDVEHICLE */ INTEGER,
  IDTRANSACTIONTYPE /* TYPE OF COLUMN M_DOCS.IDTRANSACTIONTYPE */ INTEGER,
  IDPAYMENTTYPE /* TYPE OF COLUMN M_DOCS.IDPAYMENTTYPE */ INTEGER,
  IDDRIVER /* TYPE OF COLUMN M_DOCS.IDDRIVER */ INTEGER,
  ACCOUNTINGTP /* TYPE OF COLUMN M_DOCS.ACCOUNTINGTP */ SMALLINT,
  ACCTP1 /* TYPE OF COLUMN M_DOCS.ACCTP1 */ SMALLINT,
  ACCTP2 /* TYPE OF COLUMN M_DOCS.ACCTP2 */ SMALLINT,
  WEVATPAYER /* TYPE OF COLUMN M_DOCS.WEVATPAYER */ SMALLINT,
  DUEDATE /* TYPE OF COLUMN M_DOCS.DUEDATE */ DATE,
  TS /* TYPE OF COLUMN M_DOCS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_DOCS_02(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_DOCS.ID */ INTEGER,
  DT /* TYPE OF COLUMN M_DOCS.DT */ DATE,
  SR /* TYPE OF COLUMN M_DOCS.SR */ VARCHAR(10),
  NR /* TYPE OF COLUMN M_DOCS.NR */ VARCHAR(20),
  TP /* TYPE OF COLUMN M_DOCS.TP */ INTEGER,
  PVNTYPE /* TYPE OF COLUMN M_DOCS.PVNTYPE */ INTEGER,
  STATE /* TYPE OF COLUMN M_DOCS.STATE */ INTEGER,
  IDSTOREIN /* TYPE OF COLUMN M_DOCS.IDSTOREIN */ INTEGER,
  IDSTOREOUT /* TYPE OF COLUMN M_DOCS.IDSTOREOUT */ INTEGER,
  IDCREDDOC /* TYPE OF COLUMN M_DOCS.IDCREDDOC */ INTEGER,
  CREDDOCDT /* TYPE OF COLUMN M_DOCS.CREDDOCDT */ DATE,
  SUMM /* TYPE OF COLUMN M_DOCS.SUMM */ NUMERIC(15,2),
  IDSEQ /* TYPE OF COLUMN M_DOCS.IDSEQ */ BIGINT,
  ACCIN /* TYPE OF COLUMN M_DOCS.ACCIN */ VARCHAR(8),
  ACCOUT /* TYPE OF COLUMN M_DOCS.ACCOUT */ VARCHAR(8),
  CREDDOCSR /* TYPE OF COLUMN M_DOCS.CREDDOCSR */ VARCHAR(10),
  CREDDOCNR /* TYPE OF COLUMN M_DOCS.CREDDOCNR */ VARCHAR(20),
  IDCARRIER /* TYPE OF COLUMN M_DOCS.IDCARRIER */ INTEGER,
  IDADDRESSOUT /* TYPE OF COLUMN M_DOCS.IDADDRESSOUT */ INTEGER,
  IDADDRESSIN /* TYPE OF COLUMN M_DOCS.IDADDRESSIN */ INTEGER,
  IDVEHICLE /* TYPE OF COLUMN M_DOCS.IDVEHICLE */ INTEGER,
  IDTRANSACTIONTYPE /* TYPE OF COLUMN M_DOCS.IDTRANSACTIONTYPE */ INTEGER,
  IDPAYMENTTYPE /* TYPE OF COLUMN M_DOCS.IDPAYMENTTYPE */ INTEGER,
  IDDRIVER /* TYPE OF COLUMN M_DOCS.IDDRIVER */ INTEGER,
  ACCOUNTINGTP /* TYPE OF COLUMN M_DOCS.ACCOUNTINGTP */ SMALLINT,
  ACCTP1 /* TYPE OF COLUMN M_DOCS.ACCTP1 */ SMALLINT,
  ACCTP2 /* TYPE OF COLUMN M_DOCS.ACCTP2 */ SMALLINT,
  WEVATPAYER /* TYPE OF COLUMN M_DOCS.WEVATPAYER */ SMALLINT,
  DUEDATE /* TYPE OF COLUMN M_DOCS.DUEDATE */ DATE,
  TS /* TYPE OF COLUMN M_DOCS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_INVDOCS_1(
  PDT1 DATE,
  PDT2 DATE,
  PSTATE INTEGER,
  PIDSTORE INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_INV_DOCS.ID */ INTEGER,
  DT /* TYPE OF COLUMN M_INV_DOCS.DT */ DATE,
  NR /* TYPE OF COLUMN M_INV_DOCS.NR */ VARCHAR(10),
  STATE /* TYPE OF COLUMN M_INV_DOCS.STATE */ INTEGER,
  IDSTORE /* TYPE OF COLUMN M_INV_DOCS.IDSTORE */ INTEGER,
  PERSONS /* TYPE OF COLUMN M_INV_DOCS.PERSONS */ VARCHAR(200),
  TS /* TYPE OF COLUMN M_INV_DOCS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_INVROWS_1(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_INV_ROWS.ID */ INTEGER,
  IDDOC /* TYPE OF COLUMN M_INV_ROWS.IDDOC */ INTEGER,
  IDITEM /* TYPE OF COLUMN M_INV_ROWS.IDITEM */ INTEGER,
  IDUNITS /* TYPE OF COLUMN M_INV_ROWS.IDUNITS */ INTEGER,
  AM_COUNTED_1 /* TYPE OF COLUMN M_INV_ROWS.AM_COUNTED_1 */ NUMERIC(12,4),
  AM_COUNTED_2 /* TYPE OF COLUMN M_INV_ROWS.AM_COUNTED_2 */ NUMERIC(12,4),
  AM_CALC /* TYPE OF COLUMN M_INV_ROWS.AM_CALC */ NUMERIC(12,4),
  AM_DIFF /* TYPE OF COLUMN M_INV_ROWS.AM_DIFF */ NUMERIC(12,4),
  TS /* TYPE OF COLUMN M_INV_ROWS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_ITEMS_01(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_ITEMS.ID */ INTEGER,
  BARCODE /* TYPE OF COLUMN M_ITEMS.BARCODE */ VARCHAR(30),
  NAME /* TYPE OF COLUMN M_ITEMS.NAME */ VARCHAR(300),
  CAT /* TYPE OF COLUMN M_ITEMS.CAT */ INTEGER,
  UNITS /* TYPE OF COLUMN M_ITEMS.UNITS */ INTEGER,
  STORE1 /* TYPE OF COLUMN M_ITEMS.STORE1 */ INTEGER,
  PVNRATE /* TYPE OF COLUMN M_ITEMS.PVNRATE */ INTEGER,
  ISSERVICE /* TYPE OF COLUMN M_ITEMS.ISSERVICE */ INTEGER,
  ISPRODUCED /* TYPE OF COLUMN M_ITEMS.ISPRODUCED */ INTEGER,
  SELLPRICE /* TYPE OF COLUMN M_ITEMS.SELLPRICE */ NUMERIC(15,6),
  BUYPRICE /* TYPE OF COLUMN M_ITEMS.BUYPRICE */ NUMERIC(15,6),
  PRODCOST /* TYPE OF COLUMN M_ITEMS.PRODCOST */ NUMERIC(15,6),
  LASTBUYPRICE /* TYPE OF COLUMN M_ITEMS.LASTBUYPRICE */ NUMERIC(15,6),
  AMOUNTINSTORE /* TYPE OF COLUMN M_ITEMS.AMOUNTINSTORE */ NUMERIC(12,4),
  LASTSALEDATE /* TYPE OF COLUMN M_ITEMS.LASTSALEDATE */ DATE,
  LASTBUYDATE /* TYPE OF COLUMN M_ITEMS.LASTBUYDATE */ DATE,
  TS /* TYPE OF COLUMN M_ITEMS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_ITEMS_PER_STORE_01(
  PIDDOC INTEGER)
RETURNS (
  IDITEM /* TYPE OF COLUMN M_ITEMS_PER_STORE.IDITEM */ INTEGER,
  IDSTORE /* TYPE OF COLUMN M_ITEMS_PER_STORE.IDSTORE */ INTEGER,
  AMOUNT /* TYPE OF COLUMN M_ITEMS_PER_STORE.AMOUNT */ NUMERIC(12,4),
  TS /* TYPE OF COLUMN M_ITEMS_PER_STORE.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^

ALTER PROCEDURE SP_M_FILTER_ROWS_01(
  PIDDOC INTEGER)
RETURNS (
  ID /* TYPE OF COLUMN M_ROWS.ID */ INTEGER,
  IDDOC /* TYPE OF COLUMN M_ROWS.IDDOC */ INTEGER,
  IDITEM /* TYPE OF COLUMN M_ROWS.IDITEM */ INTEGER,
  IDPVNRATE /* TYPE OF COLUMN M_ROWS.IDPVNRATE */ INTEGER,
  UNITS /* TYPE OF COLUMN M_ROWS.UNITS */ INTEGER,
  IDCREDROW /* TYPE OF COLUMN M_ROWS.IDCREDROW */ INTEGER,
  AMOUNT /* TYPE OF COLUMN M_ROWS.AMOUNT */ NUMERIC(12,4),
  DISCOUNT /* TYPE OF COLUMN M_ROWS.DISCOUNT */ FLOAT,
  PRICE0 /* TYPE OF COLUMN M_ROWS.PRICE0 */ NUMERIC(15,6),
  PRICE /* TYPE OF COLUMN M_ROWS.PRICE */ NUMERIC(15,6),
  BUYPRICE /* TYPE OF COLUMN M_ROWS.BUYPRICE */ NUMERIC(15,6),
  OLDPRICE /* TYPE OF COLUMN M_ROWS.OLDPRICE */ NUMERIC(15,6),
  TOLDPRICE /* TYPE OF COLUMN M_ROWS.TOLDPRICE */ NUMERIC(15,2),
  TPRICE /* TYPE OF COLUMN M_ROWS.TPRICE */ NUMERIC(15,2),
  TBUYPRICE /* TYPE OF COLUMN M_ROWS.TBUYPRICE */ NUMERIC(15,2),
  IDSEQ /* TYPE OF COLUMN M_ROWS.IDSEQ */ BIGINT,
  ACC6 /* TYPE OF COLUMN M_ROWS.ACC6 */ VARCHAR(8),
  ACC7 /* TYPE OF COLUMN M_ROWS.ACC7 */ VARCHAR(8),
  TS /* TYPE OF COLUMN M_ROWS.TS */ TIMESTAMP)
AS
BEGIN
  SUSPEND;
END
^


/******************************************************************************/
/****                          Creating triggers                           ****/
/******************************************************************************/
CREATE TRIGGER F_OPSD_ZNR_BI FOR F_OPSD
ACTIVE
BEFORE INSERT
POSITION 1 
as
    declare variable vyr_new integer;
    declare variable vznr integer;
begin
    vyr_new = extract(year from new.dete);
    execute procedure SP_F_OPSD_GETNEXTNRFORYEARA(vyr_new)
    returning_values :vznr;

    new.znr = vznr;
end
^

CREATE TRIGGER TRG_F_OPS_AD FOR F_OPS
ACTIVE
AFTER DELETE
POSITION 0 
as
declare VUSER varchar(15);
begin
    VUSER = rdb$get_context('USER_SESSION', 'UserName');
    if(VUSER is null) then VUSER = User;

    execute procedure sp_f_ops_delete_log(
        old.id,
        :vuser,
        old.DocId,
        old.AC11,
        old.AC12,
        old.AC13,
        old.AC14,
        old.AC15,
        old.AC21,
        old.AC22,
        old.AC23,
        old.AC24,
        old.AC25,
        old.SummC,
        old.Cur,
        old.Summ,
        old.QV,
        old.zdt);
end
^

CREATE TRIGGER TRG_F_OPS_AU FOR F_OPS
ACTIVE
AFTER UPDATE
POSITION 0 
as
    declare VUSER varchar(15);
begin
    if( (COALESCE(old.AC11 , '') = COALESCE(new.AC11 , '')) and
        (COALESCE(old.AC12 , '') = COALESCE(new.AC12 , '')) and
        (COALESCE(old.AC13 , '') = COALESCE(new.AC13 , '')) and
        (COALESCE(old.AC14 , '') = COALESCE(new.AC14 , '')) and
        (COALESCE(old.AC15 , '') = COALESCE(new.AC15 , '')) and
        (COALESCE(old.AC21 , '') = COALESCE(new.AC21 , '')) and
        (COALESCE(old.AC22 , '') = COALESCE(new.AC22 , '')) and
        (COALESCE(old.AC23 , '') = COALESCE(new.AC23 , '')) and
        (COALESCE(old.AC24 , '') = COALESCE(new.AC24 , '')) and
        (COALESCE(old.AC25 , '') = COALESCE(new.AC25 , '')) and
        (         old.SummC      =          new.SummC     ) and
        (COALESCE(old.Cur  , '') = COALESCE(new.Cur  , '')) and
        (         old.Summ       =          new.Summ      ) and
        (COALESCE(old.QV   , 0 ) = COALESCE(new.QV   , 0 )))
    then
        exit;

    VUSER = rdb$get_context('USER_SESSION', 'UserName');
    if(VUSER is null) then VUSER = User;

     execute procedure sp_f_ops_update_log(
        old.id,
        :vuser,
        old.DocId,
        old.AC11,
        old.AC12,
        old.AC13,
        old.AC14,
        old.AC15,
        old.AC21, 
        old.AC22, 
        old.AC23, 
        old.AC24, 
        old.AC25, 
        old.SummC, 
        old.Cur, 
        old.Summ, 
        old.QV,
        old.ZDt);

end
^

CREATE TRIGGER TRG_F_OPS_BI FOR F_OPS
ACTIVE
BEFORE INSERT
POSITION 0 
AS BEGIN
      IF(NEW."ID" IS NULL) THEN NEW."ID" = GEN_ID("GEN_F_OPS_ID",1);
    END
^

CREATE TRIGGER TRG_F_OPSD_AD FOR F_OPSD
ACTIVE
AFTER DELETE
POSITION 0 
as
declare VUSER varchar(15);
begin
    VUSER = rdb$get_context('USER_SESSION', 'UserName');
    if(VUSER is null) then VUSER = User;
    
    EXECUTE PROCEDURE sp_f_opsd_delete_log(
            old.id,
            :VUSER,
            old.dete,
            old.NrX,
            old.DocTyp,
            old.DocSt,
            old.DocNr,
            old.ClId,
            old.ClId2,
            old.Descr,
            old.Summ,
            old.PVN,
            old.ZNR,
            old.ZDt);
end
^

CREATE TRIGGER TRG_F_OPSD_AU FOR F_OPSD
ACTIVE
AFTER UPDATE
POSITION 0 
as
    declare VUSER varchar(15);
begin
    if((         old.Dete         =          new.Dete       ) and
       (COALESCE(old.DocTyp, '')  = COALESCE(new.DocTyp, '')) and
       (COALESCE(old.DocSt , '')  = COALESCE(new.DocSt , '')) and
       (COALESCE(old.DocNr , '')  = COALESCE(new.DocNr , '')) and
       (COALESCE(old.ClId  , '')  = COALESCE(new.ClId  , '')) and
       (COALESCE(old.ClId2 , '')  = COALESCE(new.ClId2 , '')) and
       (COALESCE(old.Descr , '')  = COALESCE(new.Descr , '')) and
       (         old.Summ         =          new.Summ       ) and
       (         old.PVN          =          new.PVN        ) and
       (         old.ZNR          =          new.ZNR        ))
    then
        exit;

    --VUSER = new.ZU;
    VUSER = rdb$get_context('USER_SESSION', 'UserName');
    if(VUSER is null) then VUSER = User;

    EXECUTE PROCEDURE sp_f_opsd_update_log(
        old.id,
        :vuser,
        old.Dete,
        old.NrX, 
        old.DocTyp, 
        old.DocSt, 
        old.DocNr, 
        old.ClId, 
        old.ClId2, 
        old.Descr, 
        old.Summ, 
        old.PVN, 
        old.ZNR,
        old.ZDt);

end
^

CREATE TRIGGER TRG_F_OPSD_BI FOR F_OPSD
ACTIVE
BEFORE INSERT
POSITION 0 
AS BEGIN
      IF(NEW."ID" IS NULL) THEN NEW."ID" = GEN_ID("GEN_F_OPSD_ID",1);
    END
^

CREATE TRIGGER TRG_F_OPSD_ZNR_BU FOR F_OPSD
ACTIVE
BEFORE UPDATE
POSITION 1 
as
    declare variable vyr_old integer;
    declare variable vyr_new integer;
    declare variable vznr integer;
begin
    vyr_old = extract(year from old.dete);
    vyr_new = extract(year from new.dete);
    if (vyr_old <> vyr_new) then
    begin
        execute procedure SP_F_OPSD_GETNEXTNRFORYEARA(vyr_new)
        returning_values :vznr;

        new.znr = vznr;
    end
end
^

CREATE TRIGGER TS_A_BANKS_BU FOR A_BANKS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_DEPARTMENTS_BU FOR A_DEPARTMENTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_EVENT_TYPES_BU FOR A_EVENT_TYPES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_EVENT_TYPES2_BU FOR A_EVENT_TYPES2
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_EVENTS_BU FOR A_EVENTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_FP_PAYLISTS_BU FOR A_FP_PAYLISTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_FP_PAYLISTS_R_BU FOR A_FP_PAYLISTS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_HOLIDAYS_BU FOR A_HOLIDAYS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_INCOME_CODES_BU FOR A_INCOME_CODES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PAYLIST_TEMPL_BU FOR A_PAYLIST_TEMPL
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PAYLIST_TEMPL_R_BU FOR A_PAYLIST_TEMPL_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PAYLISTS_BU FOR A_PAYLISTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PAYLISTS_R_BU FOR A_PAYLISTS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PASTDATA_2_BU FOR A_PASTDATA_2
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PASTDATA_BU FOR A_PASTDATA
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PERSONS_BU FOR A_PERSONS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PERSONS_FIZ_BU FOR A_PERSONS_FIZ
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PERSONS_R_BU FOR A_PERSONS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PIECEWORK_BU FOR A_PIECEWORK
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PIECEWORK_CATALOG_BU FOR A_PIECEWORK_CATALOG
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PIECEWORK_CATSTRUCT_BU FOR A_PIECEWORK_CATSTRUCT
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PLUSMINUS_FROM_BU FOR A_PLUSMINUS_FROM
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PLUSMINUS_TYPES_BU FOR A_PLUSMINUS_TYPES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_POSITIONS_BU FOR A_POSITIONS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_POSITIONS_PLUSMINUS_BU FOR A_POSITIONS_PLUSMINUS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_POSITIONS_R_BU FOR A_POSITIONS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_PROFESSIONS_BU FOR A_PROFESSIONS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_RATES_BU FOR A_RATES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_REPORT_CODES_BU FOR A_REPORT_CODES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_SALARY_PLUSMINUS_BU FOR A_SALARY_PLUSMINUS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_SALARY_SHEET_TEMPL_BU FOR A_SALARY_SHEET_TEMPL
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_SALARY_SHEET_TEMPL_R_BU FOR A_SALARY_SHEET_TEMPL_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_SALARY_SHEETS_BU FOR A_SALARY_SHEETS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_SALARY_SHEETS_R_BU FOR A_SALARY_SHEETS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_SALARY_SHEETS_R_HIST_BU FOR A_SALARY_SHEETS_R_HIST
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TEMP_REP_INKP_BU FOR A_TEMP_REP_INKP
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TEMP_REP_PDT_BU FOR A_TEMP_REP_PDT
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TERITORIAL_CODES_BU FOR A_TERITORIAL_CODES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TIMEPLAN_LIST_BU FOR A_TIMEPLAN_LIST
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TIMESHEET_BU FOR A_TIMESHEET
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TIMESHEET_LISTS_BU FOR A_TIMESHEET_LISTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TIMESHEET_LISTS_R_BU FOR A_TIMESHEET_LISTS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TIMESHEET_TEMPL_BU FOR A_TIMESHEET_TEMPL
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_TIMESHEET_TEMPL_R_BU FOR A_TIMESHEET_TEMPL_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_A_UNTAXED_MIN_BU FOR A_UNTAXED_MIN
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP1_BU FOR F_ACP1
ACTIVE
BEFORE UPDATE
POSITION 0 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP21_BU FOR F_ACP21
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP211_BU FOR F_ACP211
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP22_BU FOR F_ACP22
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP23_BU FOR F_ACP23
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP24_BU FOR F_ACP24
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP25_BU FOR F_ACP25
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP25A_BU FOR F_ACP25A
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACP6_BU FOR F_ACP6
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACPLAN_BU FOR F_ACPLAN
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_ACPVN_BU FOR F_ACPVN
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_BAL0_BU FOR F_BAL0
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_BALA1_BU FOR F_BALA1
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_BALA2_BU FOR F_BALA2
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_BALA21_BU FOR F_BALA21
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_BALA3_BU FOR F_BALA3
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_BANKS_BU FOR F_BANKS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_CURRENCY_BU FOR F_CURRENCY
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_DOCS0_BU FOR F_DOCS0
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_DOCTYP_BU FOR F_DOCTYP
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_DOCTYPA_BU FOR F_DOCTYPA
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_DOCTYPB_BU FOR F_DOCTYPB
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_LOGX_BU FOR F_LOGX
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_LXOP_BU FOR F_LXOP
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_OPS_BU FOR F_OPS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_OPSD_BU FOR F_OPSD
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_PERSONS_BU FOR F_PERSONS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_PERSONTYP_BU FOR F_PERSONTYP
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_TREM_BU FOR F_TREM
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_TUPDFIELDS_BU FOR F_TUPDFIELDS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_F_TUPVN1_BU FOR F_TUPVN1
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_ACCOUNTS_BU FOR M_ACCOUNTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_ACCOUNTTYPE_BU FOR M_ACCOUNTTYPE
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_ADDRESSSES_BU FOR M_ADDRESSSES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_BANKACCOUNTS_BU FOR M_BANKACCOUNTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_BANKS_BU FOR M_BANKS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_CONTACTS_BU FOR M_CONTACTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_COUNTRIES_BU FOR M_COUNTRIES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_DISC_LISTS_BU FOR M_DISC_LISTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_DISC_LISTS_P_BU FOR M_DISC_LISTS_P
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_DISC_LISTS_R_BU FOR M_DISC_LISTS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_DOCS_BU FOR M_DOCS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_DOCTYPES_BU FOR M_DOCTYPES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_INV_DOCS_BU FOR M_INV_DOCS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_INV_ROWS_BU FOR M_INV_ROWS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_ITEMS_BU FOR M_ITEMS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_ITEMS_CAT_BU FOR M_ITEMS_CAT
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_ITEMS_PER_STORE_BU FOR M_ITEMS_PER_STORE
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_LINKS_BU FOR M_LINKS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PAYMENTTYPE_BU FOR M_PAYMENTTYPE
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PRICE_LISTS_BU FOR M_PRICE_LISTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PRICE_LISTS_P_BU FOR M_PRICE_LISTS_P
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PRICE_LISTS_R_BU FOR M_PRICE_LISTS_R
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PVNRATES_BU FOR M_PVNRATES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PVNRATES2_BU FOR M_PVNRATES2
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PVNTEXTS_BU FOR M_PVNTEXTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_PVNTYPE_BU FOR M_PVNTYPE
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_ROWS_BU FOR M_ROWS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_STORES_BU FOR M_STORES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_STORES_CAT_BU FOR M_STORES_CAT
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_STORETYPE_BU FOR M_STORETYPE
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_TRANSACTIONTYPE_BU FOR M_TRANSACTIONTYPE
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_UNITS_BU FOR M_UNITS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_M_VEHICLES_BU FOR M_VEHICLES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_CAT1_BU FOR P_CAT1
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_CATD_BU FOR P_CATD
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_CATT_BU FOR P_CATT
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_DEPARTMENTS_BU FOR P_DEPARTMENTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_EVENTS_BU FOR P_EVENTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_ITEMS_BU FOR P_ITEMS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_ITEMS_EVENTS_BU FOR P_ITEMS_EVENTS
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_PLACES_BU FOR P_PLACES
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^

CREATE TRIGGER TS_P_TAXDEPRECYEAR_BU FOR P_TAXDEPRECYEAR
ACTIVE
BEFORE UPDATE
POSITION 77 
as
begin
  new.ts = localtimestamp;
end
^


/******************************************************************************/
/****                      Altering stored procedures                      ****/
/******************************************************************************/
ALTER PROCEDURE SP_A_FP_PAYLISTS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_FP_PAYLISTS.ID,
  SNR TYPE OF COLUMN A_FP_PAYLISTS.SNR,
  YR TYPE OF COLUMN A_FP_PAYLISTS.YR,
  MT TYPE OF COLUMN A_FP_PAYLISTS.MT,
  PAYDATE TYPE OF COLUMN A_FP_PAYLISTS.PAYDATE,
  DESCR TYPE OF COLUMN A_FP_PAYLISTS.DESCR,
  TS TYPE OF COLUMN A_FP_PAYLISTS.TS)
AS
declare km1 integer;
    declare km2 integer;
begin
    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    FOR SELECT
        ID, SNR, YR, MT, PAYDATE, DESCR, TS
    FROM A_FP_PAYLISTS
    WHERE ((YR - 1900)*13 + MT) between :km1 and :km2
    ORDER BY YR, MT, SNR
    INTO
        :ID, :SNR, :YR, :MT, :PAYDATE, :DESCR, :TS
    DO
        Suspend;
end
^

ALTER PROCEDURE SP_A_FP_PAYLISTS_PER_R_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_FP_PAYLISTS_R.ID,
  IDS TYPE OF COLUMN A_FP_PAYLISTS_R.IDS,
  IDP TYPE OF COLUMN A_FP_PAYLISTS_R.IDP,
  SNR TYPE OF COLUMN A_FP_PAYLISTS_R.SNR,
  DATE1 TYPE OF COLUMN A_FP_PAYLISTS_R.DATE1,
  DATE2 TYPE OF COLUMN A_FP_PAYLISTS_R.DATE2,
  PAYDATE TYPE OF COLUMN A_FP_PAYLISTS_R.PAYDATE,
  TAX_TP TYPE OF COLUMN A_FP_PAYLISTS_R.TAX_TP,
  INCOME_ID TYPE OF COLUMN A_FP_PAYLISTS_R.INCOME_ID,
  DESCR TYPE OF COLUMN A_FP_PAYLISTS_R.DESCR,
  PAY0 TYPE OF COLUMN A_FP_PAYLISTS_R.PAY0,
  TAXED TYPE OF COLUMN A_FP_PAYLISTS_R.TAXED,
  NOSAI TYPE OF COLUMN A_FP_PAYLISTS_R.NOSAI,
  NOTTAXED TYPE OF COLUMN A_FP_PAYLISTS_R.NOTTAXED,
  AUTHORS_FEE TYPE OF COLUMN A_FP_PAYLISTS_R.AUTHORS_FEE,
  SIRATETP TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATETP,
  SIRATEDD TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATEDD,
  SIRATEDN TYPE OF COLUMN A_FP_PAYLISTS_R.SIRATEDN,
  SIDD TYPE OF COLUMN A_FP_PAYLISTS_R.SIDD,
  SIDN TYPE OF COLUMN A_FP_PAYLISTS_R.SIDN,
  IINEX_PERC TYPE OF COLUMN A_FP_PAYLISTS_R.IINEX_PERC,
  IINEX TYPE OF COLUMN A_FP_PAYLISTS_R.IINEX,
  IIN_FROM TYPE OF COLUMN A_FP_PAYLISTS_R.IIN_FROM,
  IIN_RATE TYPE OF COLUMN A_FP_PAYLISTS_R.IIN_RATE,
  IIN TYPE OF COLUMN A_FP_PAYLISTS_R.IIN,
  CASH TYPE OF COLUMN A_FP_PAYLISTS_R.CASH,
  TS TYPE OF COLUMN A_FP_PAYLISTS_R.TS)
AS
declare km1 integer;
    declare km2 integer;
begin
    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    FOR SELECT
        A_FP_PAYLISTS_R.ID,
        A_FP_PAYLISTS_R.IDS,
        A_FP_PAYLISTS_R.IDP,
        A_FP_PAYLISTS_R.SNR,
        A_FP_PAYLISTS_R.DATE1,
        A_FP_PAYLISTS_R.DATE2,
        A_FP_PAYLISTS_R.PAYDATE,
        A_FP_PAYLISTS_R.TAX_TP,
        A_FP_PAYLISTS_R.INCOME_ID,
        A_FP_PAYLISTS_R.DESCR,
        A_FP_PAYLISTS_R.PAY0,
        A_FP_PAYLISTS_R.TAXED,
        A_FP_PAYLISTS_R.NOSAI,
        A_FP_PAYLISTS_R.NOTTAXED,
        A_FP_PAYLISTS_R.AUTHORS_FEE,
        A_FP_PAYLISTS_R.SIRATETP,
        A_FP_PAYLISTS_R.SIRATEDD,
        A_FP_PAYLISTS_R.SIRATEDN,
        A_FP_PAYLISTS_R.SIDD,
        A_FP_PAYLISTS_R.SIDN,
        A_FP_PAYLISTS_R.IINEX_PERC,
        A_FP_PAYLISTS_R.IINEX,
        A_FP_PAYLISTS_R.IIN_FROM,
        A_FP_PAYLISTS_R.IIN_RATE,
        A_FP_PAYLISTS_R.IIN,
        A_FP_PAYLISTS_R.CASH,
        A_FP_PAYLISTS_R.TS

    FROM A_FP_PAYLISTS
    INNER JOIN A_FP_PAYLISTS_R
    ON A_FP_PAYLISTS.ID = A_FP_PAYLISTS_R.IDS
    WHERE ((A_FP_PAYLISTS.YR - 1900)*13 + A_FP_PAYLISTS.MT) between :km1 and :km2
    ORDER BY A_FP_PAYLISTS.YR, A_FP_PAYLISTS.MT, A_FP_PAYLISTS.SNR
    INTO
        :ID,
        :IDS,
        :IDP,
        :SNR,
        :DATE1,
        :DATE2,
        :PAYDATE,
        :TAX_TP,
        :INCOME_ID,
        :DESCR,
        :PAY0,
        :TAXED,
        :NOSAI,
        :NOTTAXED,
        :AUTHORS_FEE,
        :SIRATETP,
        :SIRATEDD,
        :SIRATEDN,
        :SIDD,
        :SIDN,
        :IINEX_PERC,
        :IINEX,
        :IIN_FROM,
        :IIN_RATE,
        :IIN,
        :CASH,
        :TS
    DO
        Suspend;
end
^

ALTER PROCEDURE SP_A_PAYLISTS_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID TYPE OF COLUMN A_PAYLISTS.ID,
  SNR TYPE OF COLUMN A_PAYLISTS.SNR,
  YR TYPE OF COLUMN A_PAYLISTS.YR,
  MT TYPE OF COLUMN A_PAYLISTS.MT,
  DT TYPE OF COLUMN A_PAYLISTS.DT,
  DEP TYPE OF COLUMN A_PAYLISTS.DEP,
  DESCR TYPE OF COLUMN A_PAYLISTS.DESCR,
  DOPAY TYPE OF COLUMN A_PAYLISTS.DOPAY,
  TOTAL_PAY TYPE OF COLUMN A_PAYLISTS.TOTAL_PAY,
  TS TYPE OF COLUMN A_PAYLISTS.TS)
AS
begin
    for select id, snr, yr, mt, dt, dep, descr, dopay, total_pay, ts
    from a_paylists
    where DT between :pdate1 and :pdate2
    order by DT, SNR
    into :id, :snr, :yr, :mt, :dt, :dep, :descr, :dopay, :total_pay, :ts

    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_A_PAYLISTS_R_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID TYPE OF COLUMN A_PAYLISTS_R.ID,
  IDS TYPE OF COLUMN A_PAYLISTS_R.IDS,
  IDP TYPE OF COLUMN A_PAYLISTS_R.IDP,
  IDAM TYPE OF COLUMN A_PAYLISTS_R.IDAM,
  SNR TYPE OF COLUMN A_PAYLISTS_R.SNR,
  PAY0 TYPE OF COLUMN A_PAYLISTS_R.PAY0,
  IIN0 TYPE OF COLUMN A_PAYLISTS_R.IIN0,
  ADVANCE0 TYPE OF COLUMN A_PAYLISTS_R.ADVANCE0,
  WITHHOLDINGS0 TYPE OF COLUMN A_PAYLISTS_R.WITHHOLDINGS0,
  TPAY0 TYPE OF COLUMN A_PAYLISTS_R.TPAY0,
  PAY TYPE OF COLUMN A_PAYLISTS_R.PAY,
  IIN TYPE OF COLUMN A_PAYLISTS_R.IIN,
  ADVANCE TYPE OF COLUMN A_PAYLISTS_R.ADVANCE,
  WITHHOLDINGS TYPE OF COLUMN A_PAYLISTS_R.WITHHOLDINGS,
  TPAY TYPE OF COLUMN A_PAYLISTS_R.TPAY,
  PAY_REVERSE TYPE OF COLUMN A_PAYLISTS_R.PAY_REVERSE,
  IIN_REVERSE TYPE OF COLUMN A_PAYLISTS_R.IIN_REVERSE,
  DT1 TYPE OF COLUMN A_PAYLISTS_R.DT1,
  DT2 TYPE OF COLUMN A_PAYLISTS_R.DT2,
  R1 TYPE OF COLUMN A_PAYLISTS_R.R1,
  R2 TYPE OF COLUMN A_PAYLISTS_R.R2,
  S0 TYPE OF COLUMN A_PAYLISTS_R.S0,
  S1 TYPE OF COLUMN A_PAYLISTS_R.S1,
  S2 TYPE OF COLUMN A_PAYLISTS_R.S2,
  ID_SHR_1 TYPE OF COLUMN A_PAYLISTS_R.ID_SHR_1,
  ID_SHR_2 TYPE OF COLUMN A_PAYLISTS_R.ID_SHR_2,
  PAY_TAXED_1 TYPE OF COLUMN A_PAYLISTS_R.PAY_TAXED_1,
  PAY_NOSAI_1 TYPE OF COLUMN A_PAYLISTS_R.PAY_NOSAI_1,
  PAY_NOTTAXED_1 TYPE OF COLUMN A_PAYLISTS_R.PAY_NOTTAXED_1,
  UNTAXED_MINIMUM_1 TYPE OF COLUMN A_PAYLISTS_R.UNTAXED_MINIMUM_1,
  IINEX_DEPENDANTS_1 TYPE OF COLUMN A_PAYLISTS_R.IINEX_DEPENDANTS_1,
  IINEX2_1 TYPE OF COLUMN A_PAYLISTS_R.IINEX2_1,
  IINEX2_TP_1 TYPE OF COLUMN A_PAYLISTS_R.IINEX2_TP_1,
  DNSI_1 TYPE OF COLUMN A_PAYLISTS_R.DNSI_1,
  PFNT_1 TYPE OF COLUMN A_PAYLISTS_R.PFNT_1,
  LINT_1 TYPE OF COLUMN A_PAYLISTS_R.LINT_1,
  HINT_1 TYPE OF COLUMN A_PAYLISTS_R.HINT_1,
  IINEX_EXP_1 TYPE OF COLUMN A_PAYLISTS_R.IINEX_EXP_1,
  IIN_1 TYPE OF COLUMN A_PAYLISTS_R.IIN_1,
  PAY_TAXED_2 TYPE OF COLUMN A_PAYLISTS_R.PAY_TAXED_2,
  PAY_NOSAI_2 TYPE OF COLUMN A_PAYLISTS_R.PAY_NOSAI_2,
  PAY_NOTTAXED_2 TYPE OF COLUMN A_PAYLISTS_R.PAY_NOTTAXED_2,
  UNTAXED_MINIMUM_2 TYPE OF COLUMN A_PAYLISTS_R.UNTAXED_MINIMUM_2,
  IINEX_DEPENDANTS_2 TYPE OF COLUMN A_PAYLISTS_R.IINEX_DEPENDANTS_2,
  IINEX2_2 TYPE OF COLUMN A_PAYLISTS_R.IINEX2_2,
  IINEX2_TP_2 TYPE OF COLUMN A_PAYLISTS_R.IINEX2_TP_2,
  DNSI_2 TYPE OF COLUMN A_PAYLISTS_R.DNSI_2,
  PFNT_2 TYPE OF COLUMN A_PAYLISTS_R.PFNT_2,
  LINT_2 TYPE OF COLUMN A_PAYLISTS_R.LINT_2,
  HINT_2 TYPE OF COLUMN A_PAYLISTS_R.HINT_2,
  IINEX_EXP_2 TYPE OF COLUMN A_PAYLISTS_R.IINEX_EXP_2,
  IIN_2 TYPE OF COLUMN A_PAYLISTS_R.IIN_2,
  TS TYPE OF COLUMN A_PAYLISTS_R.TS)
AS
begin
    for select
        a_paylists_r.id,
        a_paylists_r.ids,
        a_paylists_r.idp,
        a_paylists_r.idam,
        a_paylists_r.snr,
        a_paylists_r.pay0,
        a_paylists_r.iin0,
        a_paylists_r.advance0,
        a_paylists_r.withholdings0,
        a_paylists_r.tpay0,
        a_paylists_r.pay,
        a_paylists_r.iin,
        a_paylists_r.advance,
        a_paylists_r.withholdings,
        a_paylists_r.tpay,
        a_paylists_r.pay_reverse,
        a_paylists_r.iin_reverse,
        a_paylists_r.dt1,
        a_paylists_r.dt2,
        a_paylists_r.r1,
        a_paylists_r.r2,
        a_paylists_r.s0,
        a_paylists_r.s1,
        a_paylists_r.s2,
        a_paylists_r.ID_SHR_1,
        a_paylists_r.ID_SHR_2,
        a_paylists_r.PAY_TAXED_1,
        a_paylists_r.PAY_NOSAI_1,
        a_paylists_r.PAY_NOTTAXED_1,
        a_paylists_r.UNTAXED_MINIMUM_1,
        a_paylists_r.IINEX_DEPENDANTS_1,
        a_paylists_r.IINEX2_1,
        a_paylists_r.IINEX2_TP_1,
        a_paylists_r.DNSI_1,
        a_paylists_r.PFNT_1,
        a_paylists_r.LINT_1,
        a_paylists_r.HINT_1,
        a_paylists_r.IINEX_EXP_1,
        a_paylists_r.IIN_1,
        a_paylists_r.PAY_TAXED_2,
        a_paylists_r.PAY_NOSAI_2,
        a_paylists_r.PAY_NOTTAXED_2,
        a_paylists_r.UNTAXED_MINIMUM_2,
        a_paylists_r.IINEX_DEPENDANTS_2,
        a_paylists_r.IINEX2_2,
        a_paylists_r.IINEX2_TP_2,
        a_paylists_r.DNSI_2,
        a_paylists_r.PFNT_2,
        a_paylists_r.LINT_2,
        a_paylists_r.HINT_2,
        a_paylists_r.IINEX_EXP_2,
        a_paylists_r.IIN_2,
        a_paylists_r.TS

    from a_paylists_r join a_paylists on a_paylists_r.ids = a_paylists.id
    where a_paylists.DT between :pdate1 and :pdate2
    order by a_paylists.DT, a_paylists.SNR, a_paylists_r.SNR
    into
        :id,
        :ids,
        :idp,
        :idam,
        :snr,
        :pay0,
        :iin0,
        :advance0,
        :withholdings0,
        :tpay0,
        :pay,
        :iin,
        :advance,
        :withholdings,
        :tpay,
        :pay_reverse,
        :iin_reverse,
        :dt1,
        :dt2,
        :r1,
        :r2,
        :s0,
        :s1,
        :s2,
        :ID_SHR_1,
        :ID_SHR_2,
        :PAY_TAXED_1,
        :PAY_NOSAI_1,
        :PAY_NOTTAXED_1,
        :UNTAXED_MINIMUM_1,
        :IINEX_DEPENDANTS_1,
        :IINEX2_1,
        :IINEX2_TP_1,
        :DNSI_1,
        :PFNT_1,
        :LINT_1,
        :HINT_1,
        :IINEX_EXP_1,
        :IIN_1,
        :PAY_TAXED_2,
        :PAY_NOSAI_2,
        :PAY_NOTTAXED_2,
        :UNTAXED_MINIMUM_2,
        :IINEX_DEPENDANTS_2,
        :IINEX2_2,
        :IINEX2_TP_2,
        :DNSI_2,
        :PFNT_2,
        :LINT_2,
        :HINT_2,
        :IINEX_EXP_2,
        :IIN_2,
        :TS

    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_A_PIECEWORK_PER_01(
  PDT1 DATE,
  PDT2 DATE)
RETURNS (
  ID TYPE OF COLUMN A_PIECEWORK.ID,
  IDK TYPE OF COLUMN A_PIECEWORK.IDK,
  IDP TYPE OF COLUMN A_PIECEWORK.IDP,
  IDA TYPE OF COLUMN A_PIECEWORK.IDA,
  DT TYPE OF COLUMN A_PIECEWORK.DT,
  UNIT TYPE OF COLUMN A_PIECEWORK.UNIT,
  QUANTITY TYPE OF COLUMN A_PIECEWORK.QUANTITY,
  RATE TYPE OF COLUMN A_PIECEWORK.RATE,
  BONUS TYPE OF COLUMN A_PIECEWORK.BONUS,
  PAY TYPE OF COLUMN A_PIECEWORK.PAY,
  TIMEUNIT TYPE OF COLUMN A_PIECEWORK.TIMEUNIT,
  TIMEUSE TYPE OF COLUMN A_PIECEWORK.TIMEUSE,
  TIMEUSEINHOURS TYPE OF COLUMN A_PIECEWORK.TIMEUSEINHOURS,
  TS TYPE OF COLUMN A_PIECEWORK.TS)
AS
begin
    for select
        id,
        idk,
        idp,
        ida,
        dt,
        unit,
        quantity,
        rate,
        bonus,
        pay,
        timeunit,
        timeuse,
        timeuseinhours,
        ts
    from a_piecework
    where a_piecework.dt between :pdt1 and :pdt2
    order by a_piecework.dt

    into
        :id,
        :idk,
        :idp,
        :ida,
        :dt,
        :unit,
        :quantity,
        :rate,
        :bonus,
        :pay,
        :timeunit,
        :timeuse,
        :timeuseinhours,
        :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_A_POSITIONS_PLUSMINUS_PER_01(
  PDATE1 DATE,
  PDATE2 DATE)
RETURNS (
  ID TYPE OF COLUMN A_POSITIONS_PLUSMINUS.ID,
  IDP TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDP,
  IDA TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDA,
  DATE1 TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DATE1,
  DATE2 TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DATE2,
  IDSV TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDSV,
  IDNO TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDNO,
  IDIE TYPE OF COLUMN A_POSITIONS_PLUSMINUS.IDIE,
  DESCR TYPE OF COLUMN A_POSITIONS_PLUSMINUS.DESCR,
  RATE TYPE OF COLUMN A_POSITIONS_PLUSMINUS.RATE,
  RATE_TYPE TYPE OF COLUMN A_POSITIONS_PLUSMINUS.RATE_TYPE,
  IS_INAVPAY TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_INAVPAY,
  IS_PAID TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_PAID,
  TS TYPE OF COLUMN A_SALARY_PLUSMINUS.TS)
AS
begin

    for select
        id,
        idp,
        ida,
        date1,
        date2,
        idsv,
        idno,
        idie,
        descr,
        rate,
        rate_type,
        is_inavpay,
        is_paid,
        ts

    from a_positions_plusminus
    where
        (date2 is null and date1 <= :pdate2) or
        (date2 is not null and date1 <= :pdate2 and date2 >= :pdate1)

    order by date1

    into
        :id,
        :idp,
        :ida,
        :date1,
        :date2,
        :idsv,
        :idno,
        :idie,
        :descr,
        :rate,
        :rate_type,
        :is_inavpay,
        :is_paid,
        :ts

    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_A_SALARY_PLUSMINUS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_SALARY_PLUSMINUS.ID,
  IDP TYPE OF COLUMN A_SALARY_PLUSMINUS.IDP,
  IDA TYPE OF COLUMN A_SALARY_PLUSMINUS.IDA,
  IDAP TYPE OF COLUMN A_SALARY_PLUSMINUS.IDAP,
  IDSX TYPE OF COLUMN A_SALARY_PLUSMINUS.IDSX,
  IDSV TYPE OF COLUMN A_SALARY_PLUSMINUS.IDSV,
  IDNO TYPE OF COLUMN A_SALARY_PLUSMINUS.IDNO,
  IDIE TYPE OF COLUMN A_SALARY_PLUSMINUS.IDIE,
  DESCR TYPE OF COLUMN A_SALARY_PLUSMINUS.DESCR,
  RATE TYPE OF COLUMN A_SALARY_PLUSMINUS.RATE,
  RATE_TYPE TYPE OF COLUMN A_SALARY_PLUSMINUS.RATE_TYPE,
  AMOUNT TYPE OF COLUMN A_SALARY_PLUSMINUS.AMOUNT,
  IS_INAVPAY TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_INAVPAY,
  IS_PAID TYPE OF COLUMN A_SALARY_PLUSMINUS.IS_PAID,
  TS TYPE OF COLUMN A_SALARY_PLUSMINUS.TS)
AS
declare km1 integer;
    declare km2 integer;
begin
    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    for select
        a_salary_plusminus.id,
        a_salary_plusminus.idp,
        a_salary_plusminus.ida,
        a_salary_plusminus.idap,
        a_salary_plusminus.idsx,
        a_salary_plusminus.idsv,
        a_salary_plusminus.idno,
        a_salary_plusminus.idie,
        a_salary_plusminus.descr,
        a_salary_plusminus.rate,
        a_salary_plusminus.rate_type,
        a_salary_plusminus.amount,
        a_salary_plusminus.is_inavpay,
        a_salary_plusminus.is_paid,
        a_salary_plusminus.ts

    from a_salary_plusminus
    join a_salary_sheets_r on a_salary_plusminus.idsx = a_salary_sheets_r.id
    join a_salary_sheets on a_salary_sheets_r.ids = a_salary_sheets.id

    where ((a_salary_sheets.yr - 1900)*13 + a_salary_sheets.mt) between :km1 and :km2
    order by yr, mt

    into
        :id, :idp, :ida, :idap, :idsx, :idsv,
        :idno, :idie, :descr, :rate, :rate_type, :amount,
        :is_inavpay, :is_paid, :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_SALARY_SHEETS.ID,
  YR TYPE OF COLUMN A_SALARY_SHEETS.YR,
  MT TYPE OF COLUMN A_SALARY_SHEETS.MT,
  SNR TYPE OF COLUMN A_SALARY_SHEETS.SNR,
  DT1 TYPE OF COLUMN A_SALARY_SHEETS.DT1,
  DT2 TYPE OF COLUMN A_SALARY_SHEETS.DT2,
  DESCR TYPE OF COLUMN A_SALARY_SHEETS.DESCR,
  DEP TYPE OF COLUMN A_SALARY_SHEETS.DEP,
  KIND TYPE OF COLUMN A_SALARY_SHEETS.KIND,
  IS_TEMP TYPE OF COLUMN A_SALARY_SHEETS.IS_TEMP,
  TS TYPE OF COLUMN A_SALARY_SHEETS.TS)
AS
declare km1 integer;
    declare km2 integer;
begin
    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    for select id, yr, mt, snr, dt1, dt2, descr, dep, kind, is_temp, ts
    from a_salary_sheets
    where ((yr - 1900)*13 + mt) between :km1 and :km2
    order by yr, mt, snr
    into :id, :yr, :mt, :snr, :dt1, :dt2, :descr, :dep, :kind, :is_temp, :ts
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_HIST_01(
  PID INTEGER)
RETURNS (
  IDH TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID,
  ID TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID,
  IDS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDS,
  IDSX TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDSX,
  IDST TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDST,
  IS_TEMP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IS_TEMP,
  TYPE_TAG TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TYPE_TAG,
  IDP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDP,
  IDAM TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDAM,
  SNR TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SNR,
  FNAME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FNAME,
  LNAME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.LNAME,
  POSITION_TITLE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.POSITION_TITLE,
  TERRITORIAL_CODE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TERRITORIAL_CODE,
  CALENDAR_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS,
  CALENDAR_DAYS_USE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS_USE,
  MONTH_WORKDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKDAYS,
  MONTH_WORKHOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKHOURS,
  PLAN_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_DAYS,
  PLAN_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS,
  PLAN_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_NIGHT,
  PLAN_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_OVERTIME,
  FACT_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_DAYS,
  FACT_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS,
  FACT_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_NIGHT,
  FACT_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_OVERTIME,
  PLAN_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_DAYS,
  PLAN_WORK_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS,
  PLAN_WORK_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_NIGHT,
  PLAN_WORK_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_OVERTIME,
  FACT_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_DAYS,
  FACT_WORK_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS,
  FACT_WORK_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_NIGHT,
  FACT_WORK_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_OVERTIME,
  PLAN_HOLIDAYS_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_DAYS,
  PLAN_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS,
  PLAN_HOLIDAYS_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_NIGHT,
  PLAN_HOLIDAYS_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_OVERTIME,
  FACT_HOLIDAYS_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_DAYS,
  FACT_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS,
  FACT_HOLIDAYS_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_NIGHT,
  FACT_HOLIDAYS_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_OVERTIME,
  SALARY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY,
  SALARY_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_DAY,
  SALARY_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_NIGHT,
  SALARY_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_OVERTIME,
  SALARY_HOLIDAYS_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_DAY,
  SALARY_HOLIDAYS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_NIGHT,
  SALARY_HOLIDAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_OVERTIME,
  SALARY_PAID_HOLIDAYS_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_DAY,
  SALARY_PAID_HOLIDAYS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_NIGHT,
  SALARY_PIECEWORK TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PIECEWORK,
  SICKDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS,
  SICKDAYS_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS_PAY,
  ACCIDENT_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_DAYS,
  ACCIDENT_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_PAY,
  AVERAGE_INCOME_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_DAYS,
  AVERAGE_INCOME_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_PAY,
  FACT_AVPAY_FREE_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_DAYS,
  FACT_AVPAY_FREE_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_HOURS,
  FACT_AVPAY_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORK_DAYS,
  FACT_AVPAY_WORKINHOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORKINHOLIDAYS,
  FACT_AVPAY_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS,
  FACT_AVPAY_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS_OVERTIME,
  FACT_AVPAY_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS_OVERT,
  SALARY_AVPAY_FREE_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_FREE_DAYS,
  SALARY_AVPAY_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS,
  SALARY_AVPAY_WORK_DAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS_OVERTIME,
  SALARY_AVPAY_HOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS,
  SALARY_AVPAY_HOLIDAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS_OVERTIME,
  BUSINESS_TRIP_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_DAYS,
  BUSINESS_TRIP_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_PAY,
  PAID_HOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS,
  PAID_HOLIDAYS_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS_PAY,
  VACATION_DAYS_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_CURRENT,
  VACATION_DAYS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_NEXT,
  VACATION_HOURS_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_CURRENT,
  VACATION_HOURS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_NEXT,
  VACATION_PAY_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_CURRENT,
  VACATION_PAY_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_NEXT,
  VACATION_DNS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_NEXT,
  VACATION_DDS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_NEXT,
  VACATION_IIN_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_NEXT,
  VACATION_IIN_REDUCE_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_REDUCE_NEXT,
  VACATION_CASH_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_CASH_NEXT,
  VACATION_PAY_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_PREV,
  VACATION_DNS_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_PREV,
  VACATION_DDS_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_PREV,
  VACATION_IIN_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_PREV,
  VACATION_DAYS_COMP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_COMP,
  VACATION_PAY_COMP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_COMP,
  PLUS_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_TAXED,
  PLUS_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOTTAXED,
  PLUS_NOSAI TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOSAI,
  PLUS_AUTHORS_FEES TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_AUTHORS_FEES,
  MINUS_BEFORE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_BEFORE_IIN,
  MINUS_AFTER_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_AFTER_IIN,
  PLUS_PF_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_NOTTAXED,
  PLUS_PF_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_TAXED,
  PLUS_LI_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_NOTTAXED,
  PLUS_LI_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_TAXED,
  PLUS_HI_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_NOTTAXED,
  PLUS_HI_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_TAXED,
  PLUS_NP_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_TAXED,
  PLUS_NP_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOTTAXED,
  PLUS_NP_NOSAI TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOSAI,
  TOTAL_BEFORE_TAXES TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TOTAL_BEFORE_TAXES,
  ADJUSTED_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADJUSTED_AMOUNT,
  AMOUNT_BEFORE_SN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN,
  AMOUNT_BEFORE_SN_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN_REVERSE,
  RATE_DNSN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DNSN,
  RATE_DDSN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DDSN,
  DNSN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT,
  DDSN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT,
  SN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_AMOUNT,
  DNSN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT_REVERSE,
  DDSN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT_REVERSE,
  SN_MAX_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_MAX_AMOUNT,
  IIN_EXEMPT_UNTAXED_MINIMUM0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM0,
  IIN_EXEMPT_DEPENDANTS0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS0,
  IIN_EXEMPT_RETALIATION0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION0,
  IIN_EXEMPT_INVALIDITY0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY0,
  IIN_EXEMPT_NATIONAL_MOVEMENT0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT0,
  IIN_EXEMPT_UNTAXED_MINIMUM TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM,
  IIN_EXEMPT_DEPENDANTS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS,
  IIN_EXEMPT_RETALIATION TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION,
  IIN_EXEMPT_INVALIDITY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY,
  IIN_EXEMPT_NATIONAL_MOVEMENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT,
  IIN_EXEMPT_EXPENSES TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_EXPENSES,
  IIN_EXEMPT_2TP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2TP,
  IIN_EXEMPT_20 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_20,
  IIN_EXEMPT_2 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2,
  AMOUNT_BEFORE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN,
  AMOUNT_BEFORE_IIN_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN_REVERSE,
  RATE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN,
  RATE_IIN2 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN2,
  IIN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT,
  IIN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT_REVERSE,
  URVN_AMAOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.URVN_AMAOUNT,
  PLUS_NOT_PAID TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOT_PAID,
  VACATION_ADVANCE_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_CURRENT,
  VACATION_ADVANCE_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_NEXT,
  VACATION_ADVANCE_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_PREV,
  ADVANCE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADVANCE,
  PAY0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY0,
  PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY,
  PAYT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAYT,
  PAY_DATE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY_DATE,
  COMMENTS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.COMMENTS,
  WITHHOLD_FROM_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.WITHHOLD_FROM_PAY,
  FORAVPAYCALC_BRUTO TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_BRUTO,
  FORAVPAYCALC_PAYOUT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_PAYOUT,
  FORAVPAYCALC_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_DAYS,
  FORAVPAYCALC_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_HOURS,
  AVPAYCALC_CALDAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_CALDAY,
  AVPAYCALC_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_DAY,
  AVPAYCALC_HOUR TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_HOUR,
  DT_EDITED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DT_EDITED,
  CALC_VER TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALC_VER,
  TS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TS)
AS
begin

    for select
             a_salary_sheets_r_hist.idH,
             a_salary_sheets_r_hist.id,
             a_salary_sheets_r_hist.ids,
             a_salary_sheets_r_hist.idsx,
             a_salary_sheets_r_hist.idst,
             a_salary_sheets_r_hist.is_temp,
             a_salary_sheets_r_hist.type_tag,
             a_salary_sheets_r_hist.idp,
             a_salary_sheets_r_hist.idam,
             a_salary_sheets_r_hist.snr,
             a_salary_sheets_r_hist.fname,
             a_salary_sheets_r_hist.lname,
             a_salary_sheets_r_hist.position_title,
             a_salary_sheets_r_hist.territorial_code,
             a_salary_sheets_r_hist.calendar_days,
             a_salary_sheets_r_hist.calendar_days_use,
             a_salary_sheets_r_hist.month_workdays,
             a_salary_sheets_r_hist.month_workhours,
             a_salary_sheets_r_hist.plan_days,
             a_salary_sheets_r_hist.plan_hours,
             a_salary_sheets_r_hist.plan_hours_night,
             a_salary_sheets_r_hist.plan_hours_overtime,
             a_salary_sheets_r_hist.fact_days,
             a_salary_sheets_r_hist.fact_hours,
             a_salary_sheets_r_hist.fact_hours_night,
             a_salary_sheets_r_hist.fact_hours_overtime,
             a_salary_sheets_r_hist.plan_work_days,
             a_salary_sheets_r_hist.plan_work_hours,
             a_salary_sheets_r_hist.plan_work_hours_night,
             a_salary_sheets_r_hist.plan_work_hours_overtime,
             a_salary_sheets_r_hist.fact_work_days,
             a_salary_sheets_r_hist.fact_work_hours,
             a_salary_sheets_r_hist.fact_work_hours_night,
             a_salary_sheets_r_hist.fact_work_hours_overtime,
             a_salary_sheets_r_hist.plan_holidays_days,
             a_salary_sheets_r_hist.plan_holidays_hours,
             a_salary_sheets_r_hist.plan_holidays_hours_night,
             a_salary_sheets_r_hist.plan_holidays_hours_overtime,
             a_salary_sheets_r_hist.fact_holidays_days,
             a_salary_sheets_r_hist.fact_holidays_hours,
             a_salary_sheets_r_hist.fact_holidays_hours_night,
             a_salary_sheets_r_hist.fact_holidays_hours_overtime,
             a_salary_sheets_r_hist.salary,
             a_salary_sheets_r_hist.salary_day,
             a_salary_sheets_r_hist.salary_night,
             a_salary_sheets_r_hist.salary_overtime,
             a_salary_sheets_r_hist.salary_holidays_day,
             a_salary_sheets_r_hist.salary_holidays_night,
             a_salary_sheets_r_hist.salary_holidays_overtime,
             a_salary_sheets_r_hist.salary_paid_holidays_day,
             a_salary_sheets_r_hist.salary_paid_holidays_night,
             a_salary_sheets_r_hist.salary_piecework,
             a_salary_sheets_r_hist.sickdays,
             a_salary_sheets_r_hist.sickdays_pay,
             a_salary_sheets_r_hist.accident_days,
             a_salary_sheets_r_hist.accident_pay,
             a_salary_sheets_r_hist.average_income_days,
             a_salary_sheets_r_hist.average_income_pay,

             a_salary_sheets_r_hist.fact_avpay_free_days,
             a_salary_sheets_r_hist.fact_avpay_free_hours,
             a_salary_sheets_r_hist.fact_avpay_work_days,
             a_salary_sheets_r_hist.fact_avpay_workinholidays,
             a_salary_sheets_r_hist.fact_avpay_hours,
             a_salary_sheets_r_hist.fact_avpay_hours_overtime,
             a_salary_sheets_r_hist.fact_avpay_holidays_hours,
             a_salary_sheets_r_hist.fact_avpay_holidays_hours_overt,
             a_salary_sheets_r_hist.salary_avpay_free_days,
             a_salary_sheets_r_hist.salary_avpay_work_days,
             a_salary_sheets_r_hist.salary_avpay_work_days_overtime,
             a_salary_sheets_r_hist.salary_avpay_holidays,
             a_salary_sheets_r_hist.salary_avpay_holidays_overtime,

             a_salary_sheets_r_hist.business_trip_days,
             a_salary_sheets_r_hist.business_trip_pay,
             a_salary_sheets_r_hist.paid_holidays,
             a_salary_sheets_r_hist.paid_holidays_pay,
             a_salary_sheets_r_hist.vacation_days_current,
             a_salary_sheets_r_hist.vacation_days_next,
             a_salary_sheets_r_hist.vacation_hours_current,
             a_salary_sheets_r_hist.vacation_hours_next,
             a_salary_sheets_r_hist.vacation_pay_current,
             a_salary_sheets_r_hist.vacation_pay_next,
             a_salary_sheets_r_hist.vacation_dns_next,
             a_salary_sheets_r_hist.vacation_dds_next,
             a_salary_sheets_r_hist.vacation_iin_next,
             a_salary_sheets_r_hist.vacation_iin_reduce_next,
             a_salary_sheets_r_hist.vacation_cash_next,
             a_salary_sheets_r_hist.vacation_pay_prev,
             a_salary_sheets_r_hist.vacation_dns_prev,
             a_salary_sheets_r_hist.vacation_dds_prev,
             a_salary_sheets_r_hist.vacation_iin_prev,
             a_salary_sheets_r_hist.vacation_days_comp,
             a_salary_sheets_r_hist.vacation_pay_comp,

             a_salary_sheets_r_hist.plus_taxed,
             a_salary_sheets_r_hist.plus_nottaxed,
             a_salary_sheets_r_hist.plus_nosai,
             a_salary_sheets_r_hist.plus_authors_fees,
             a_salary_sheets_r_hist.minus_before_iin,
             a_salary_sheets_r_hist.minus_after_iin,
             a_salary_sheets_r_hist.plus_pf_nottaxed,
             a_salary_sheets_r_hist.plus_pf_taxed,
             a_salary_sheets_r_hist.plus_li_nottaxed,
             a_salary_sheets_r_hist.plus_li_taxed,
             a_salary_sheets_r_hist.plus_hi_nottaxed,
             a_salary_sheets_r_hist.plus_hi_taxed,
             a_salary_sheets_r_hist.plus_np_taxed,
             a_salary_sheets_r_hist.plus_np_nottaxed,
             a_salary_sheets_r_hist.plus_np_nosai,

             a_salary_sheets_r_hist.total_before_taxes,
             a_salary_sheets_r_hist.adjusted_amount,
             a_salary_sheets_r_hist.amount_before_sn,
             a_salary_sheets_r_hist.amount_before_sn_reverse,
             a_salary_sheets_r_hist.rate_dnsn,
             a_salary_sheets_r_hist.rate_ddsn,
             a_salary_sheets_r_hist.dnsn_amount,
             a_salary_sheets_r_hist.ddsn_amount,
             a_salary_sheets_r_hist.sn_amount,
             a_salary_sheets_r_hist.dnsn_amount_reverse,
             a_salary_sheets_r_hist.ddsn_amount_reverse,
             a_salary_sheets_r_hist.sn_max_amount,

             a_salary_sheets_r_hist.iin_exempt_untaxed_minimum0,
             a_salary_sheets_r_hist.iin_exempt_dependants0,
             a_salary_sheets_r_hist.iin_exempt_retaliation0,
             a_salary_sheets_r_hist.iin_exempt_invalidity0,
             a_salary_sheets_r_hist.iin_exempt_national_movement0,
             a_salary_sheets_r_hist.iin_exempt_untaxed_minimum,
             a_salary_sheets_r_hist.iin_exempt_dependants,
             a_salary_sheets_r_hist.iin_exempt_retaliation,
             a_salary_sheets_r_hist.iin_exempt_invalidity,
             a_salary_sheets_r_hist.iin_exempt_national_movement,
             a_salary_sheets_r_hist.iin_exempt_expenses,
             a_salary_sheets_r_hist.iin_exempt_2tp,
             a_salary_sheets_r_hist.iin_exempt_20,
             a_salary_sheets_r_hist.iin_exempt_2,
             a_salary_sheets_r_hist.amount_before_iin,
             a_salary_sheets_r_hist.amount_before_iin_reverse,
             a_salary_sheets_r_hist.rate_iin,
             a_salary_sheets_r_hist.rate_iin2,
             a_salary_sheets_r_hist.iin_amount,
             a_salary_sheets_r_hist.iin_amount_reverse,
             a_salary_sheets_r_hist.urvn_amaount,

             a_salary_sheets_r_hist.plus_not_paid,
             a_salary_sheets_r_hist.vacation_advance_current,
             a_salary_sheets_r_hist.vacation_advance_next,
             a_salary_sheets_r_hist.vacation_advance_prev,
             a_salary_sheets_r_hist.advance,
             a_salary_sheets_r_hist.pay0,
             a_salary_sheets_r_hist.pay,
             a_salary_sheets_r_hist.payt,
             a_salary_sheets_r_hist.pay_date,
             a_salary_sheets_r_hist.comments,
             a_salary_sheets_r_hist.withhold_from_pay,

             a_salary_sheets_r_hist.foravpaycalc_bruto,
             a_salary_sheets_r_hist.foravpaycalc_payout,
             a_salary_sheets_r_hist.foravpaycalc_days,
             a_salary_sheets_r_hist.foravpaycalc_hours,
             a_salary_sheets_r_hist.avpaycalc_calday,
             a_salary_sheets_r_hist.avpaycalc_day,
             a_salary_sheets_r_hist.avpaycalc_hour,

             a_salary_sheets_r_hist.dt_edited,
             a_salary_sheets_r_hist.calc_ver,
             a_salary_sheets_r_hist.ts

    from a_salary_sheets_r_hist
    where a_salary_sheets_r_hist.id = :PID
    order by a_salary_sheets_r_hist.dt_edited

    into
        :idH,
        :id,
        :ids,
        :idsx,
        :idst,
        :is_temp,
        :type_tag,
        :idp,
        :idam,
        :snr,
        :fname,
        :lname,
        :position_title,
        :territorial_code,
        :calendar_days,
        :calendar_days_use,
        :month_workdays,
        :month_workhours,
        :plan_days,
        :plan_hours,
        :plan_hours_night,
        :plan_hours_overtime,
        :fact_days,
        :fact_hours,
        :fact_hours_night,
        :fact_hours_overtime,
        :plan_work_days,
        :plan_work_hours,
        :plan_work_hours_night,
        :plan_work_hours_overtime,
        :fact_work_days,
        :fact_work_hours,
        :fact_work_hours_night,
        :fact_work_hours_overtime,
        :plan_holidays_days,
        :plan_holidays_hours,
        :plan_holidays_hours_night,
        :plan_holidays_hours_overtime,
        :fact_holidays_days,
        :fact_holidays_hours,
        :fact_holidays_hours_night,
        :fact_holidays_hours_overtime,
        :salary,
        :salary_day,
        :salary_night,
        :salary_overtime,
        :salary_holidays_day,
        :salary_holidays_night,
        :salary_holidays_overtime,
        :salary_paid_holidays_day,
        :salary_paid_holidays_night,
        :salary_piecework,
        :sickdays,
        :sickdays_pay,
        :accident_days,
        :accident_pay,
        :average_income_days,
        :average_income_pay,
        
        :fact_avpay_free_days,
        :fact_avpay_free_hours,
        :fact_avpay_work_days,
        :fact_avpay_workinholidays,
        :fact_avpay_hours,
        :fact_avpay_hours_overtime,
        :fact_avpay_holidays_hours,
        :fact_avpay_holidays_hours_overt,
        :salary_avpay_free_days,
        :salary_avpay_work_days,
        :salary_avpay_work_days_overtime,
        :salary_avpay_holidays,
        :salary_avpay_holidays_overtime,
        
        :business_trip_days,
        :business_trip_pay,
        :paid_holidays,
        :paid_holidays_pay,
        :vacation_days_current,
        :vacation_days_next,
        :vacation_hours_current,
        :vacation_hours_next,
        :vacation_pay_current,
        :vacation_pay_next,
        :vacation_dns_next,
        :vacation_dds_next,
        :vacation_iin_next,
        :vacation_iin_reduce_next,
        :vacation_cash_next,
        :vacation_pay_prev,
        :vacation_dns_prev,
        :vacation_dds_prev,
        :vacation_iin_prev,
        :vacation_days_comp,
        :vacation_pay_comp,

        :plus_taxed,
        :plus_nottaxed,
        :plus_nosai,
        :plus_authors_fees,
        :minus_before_iin,
        :minus_after_iin,
        :plus_pf_nottaxed,
        :plus_pf_taxed,
        :plus_li_nottaxed,
        :plus_li_taxed,
        :plus_hi_nottaxed,
        :plus_hi_taxed,
        :plus_np_taxed,
        :plus_np_nottaxed,
        :plus_np_nosai,

        :total_before_taxes,
        :adjusted_amount,
        :amount_before_sn,
        :amount_before_sn_reverse,
        :rate_dnsn,
        :rate_ddsn,
        :dnsn_amount,
        :ddsn_amount,
        :sn_amount,
        :dnsn_amount_reverse,
        :ddsn_amount_reverse,
        :sn_max_amount,

        :iin_exempt_untaxed_minimum0,
        :iin_exempt_dependants0,
        :iin_exempt_retaliation0,
        :iin_exempt_invalidity0,
        :iin_exempt_national_movement0,
        :iin_exempt_untaxed_minimum,
        :iin_exempt_dependants,
        :iin_exempt_retaliation,
        :iin_exempt_invalidity,
        :iin_exempt_national_movement,
        :iin_exempt_expenses,
        :iin_exempt_2tp,
        :iin_exempt_20,
        :iin_exempt_2,
        :amount_before_iin,
        :amount_before_iin_reverse,
        :rate_iin,
        :rate_iin2,
        :iin_amount,
        :iin_amount_reverse,
        :urvn_amaount,

        :plus_not_paid,
        :vacation_advance_current,
        :vacation_advance_next,
        :vacation_advance_prev,
        :advance,
        :pay0,
        :pay,
        :payt,
        :pay_date,
        :comments,
        :withhold_from_pay,

        :foravpaycalc_bruto,
        :foravpaycalc_payout,
        :foravpaycalc_days,
        :foravpaycalc_hours,
        :avpaycalc_calday,
        :avpaycalc_day,
        :avpaycalc_hour,

        :dt_edited,
        :calc_ver,
        :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_HIST_02(
  PIDSX INTEGER,
  PTIME1 TIMESTAMP,
  PTIME2 TIMESTAMP)
RETURNS (
  IDH TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID,
  ID TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ID,
  IDS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDS,
  IDSX TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDSX,
  IDST TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDST,
  IS_TEMP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IS_TEMP,
  TYPE_TAG TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TYPE_TAG,
  IDP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDP,
  IDAM TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IDAM,
  SNR TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SNR,
  FNAME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FNAME,
  LNAME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.LNAME,
  POSITION_TITLE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.POSITION_TITLE,
  TERRITORIAL_CODE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TERRITORIAL_CODE,
  CALENDAR_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS,
  CALENDAR_DAYS_USE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALENDAR_DAYS_USE,
  MONTH_WORKDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKDAYS,
  MONTH_WORKHOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MONTH_WORKHOURS,
  PLAN_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_DAYS,
  PLAN_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS,
  PLAN_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_NIGHT,
  PLAN_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOURS_OVERTIME,
  FACT_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_DAYS,
  FACT_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS,
  FACT_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_NIGHT,
  FACT_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOURS_OVERTIME,
  PLAN_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_DAYS,
  PLAN_WORK_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS,
  PLAN_WORK_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_NIGHT,
  PLAN_WORK_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_WORK_HOURS_OVERTIME,
  FACT_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_DAYS,
  FACT_WORK_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS,
  FACT_WORK_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_NIGHT,
  FACT_WORK_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_WORK_HOURS_OVERTIME,
  PLAN_HOLIDAYS_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_DAYS,
  PLAN_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS,
  PLAN_HOLIDAYS_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_NIGHT,
  PLAN_HOLIDAYS_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLAN_HOLIDAYS_HOURS_OVERTIME,
  FACT_HOLIDAYS_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_DAYS,
  FACT_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS,
  FACT_HOLIDAYS_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_NIGHT,
  FACT_HOLIDAYS_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_HOLIDAYS_HOURS_OVERTIME,
  SALARY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY,
  SALARY_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_DAY,
  SALARY_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_NIGHT,
  SALARY_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_OVERTIME,
  SALARY_HOLIDAYS_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_DAY,
  SALARY_HOLIDAYS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_NIGHT,
  SALARY_HOLIDAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_HOLIDAYS_OVERTIME,
  SALARY_PAID_HOLIDAYS_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_DAY,
  SALARY_PAID_HOLIDAYS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PAID_HOLIDAYS_NIGHT,
  SALARY_PIECEWORK TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_PIECEWORK,
  SICKDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS,
  SICKDAYS_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SICKDAYS_PAY,
  ACCIDENT_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_DAYS,
  ACCIDENT_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ACCIDENT_PAY,
  AVERAGE_INCOME_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_DAYS,
  AVERAGE_INCOME_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVERAGE_INCOME_PAY,
  FACT_AVPAY_FREE_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_DAYS,
  FACT_AVPAY_FREE_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_FREE_HOURS,
  FACT_AVPAY_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORK_DAYS,
  FACT_AVPAY_WORKINHOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_WORKINHOLIDAYS,
  FACT_AVPAY_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS,
  FACT_AVPAY_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOURS_OVERTIME,
  FACT_AVPAY_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FACT_AVPAY_HOLIDAYS_HOURS_OVERT,
  SALARY_AVPAY_FREE_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_FREE_DAYS,
  SALARY_AVPAY_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS,
  SALARY_AVPAY_WORK_DAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_WORK_DAYS_OVERTIME,
  SALARY_AVPAY_HOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS,
  SALARY_AVPAY_HOLIDAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SALARY_AVPAY_HOLIDAYS_OVERTIME,
  BUSINESS_TRIP_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_DAYS,
  BUSINESS_TRIP_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.BUSINESS_TRIP_PAY,
  PAID_HOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS,
  PAID_HOLIDAYS_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAID_HOLIDAYS_PAY,
  VACATION_DAYS_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_CURRENT,
  VACATION_DAYS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_NEXT,
  VACATION_HOURS_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_CURRENT,
  VACATION_HOURS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_HOURS_NEXT,
  VACATION_PAY_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_CURRENT,
  VACATION_PAY_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_NEXT,
  VACATION_DNS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_NEXT,
  VACATION_DDS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_NEXT,
  VACATION_IIN_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_NEXT,
  VACATION_IIN_REDUCE_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_REDUCE_NEXT,
  VACATION_CASH_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_CASH_NEXT,
  VACATION_PAY_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_PREV,
  VACATION_DNS_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DNS_PREV,
  VACATION_DDS_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DDS_PREV,
  VACATION_IIN_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_IIN_PREV,
  VACATION_DAYS_COMP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_DAYS_COMP,
  VACATION_PAY_COMP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_PAY_COMP,
  PLUS_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_TAXED,
  PLUS_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOTTAXED,
  PLUS_NOSAI TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOSAI,
  PLUS_AUTHORS_FEES TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_AUTHORS_FEES,
  MINUS_BEFORE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_BEFORE_IIN,
  MINUS_AFTER_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.MINUS_AFTER_IIN,
  PLUS_PF_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_NOTTAXED,
  PLUS_PF_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_PF_TAXED,
  PLUS_LI_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_NOTTAXED,
  PLUS_LI_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_LI_TAXED,
  PLUS_HI_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_NOTTAXED,
  PLUS_HI_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_HI_TAXED,
  PLUS_NP_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_TAXED,
  PLUS_NP_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOTTAXED,
  PLUS_NP_NOSAI TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NP_NOSAI,
  TOTAL_BEFORE_TAXES TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TOTAL_BEFORE_TAXES,
  ADJUSTED_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADJUSTED_AMOUNT,
  AMOUNT_BEFORE_SN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN,
  AMOUNT_BEFORE_SN_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_SN_REVERSE,
  RATE_DNSN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DNSN,
  RATE_DDSN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_DDSN,
  DNSN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT,
  DDSN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT,
  SN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_AMOUNT,
  DNSN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DNSN_AMOUNT_REVERSE,
  DDSN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DDSN_AMOUNT_REVERSE,
  SN_MAX_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.SN_MAX_AMOUNT,
  IIN_EXEMPT_UNTAXED_MINIMUM0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM0,
  IIN_EXEMPT_DEPENDANTS0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS0,
  IIN_EXEMPT_RETALIATION0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION0,
  IIN_EXEMPT_INVALIDITY0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY0,
  IIN_EXEMPT_NATIONAL_MOVEMENT0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT0,
  IIN_EXEMPT_UNTAXED_MINIMUM TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_UNTAXED_MINIMUM,
  IIN_EXEMPT_DEPENDANTS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_DEPENDANTS,
  IIN_EXEMPT_RETALIATION TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_RETALIATION,
  IIN_EXEMPT_INVALIDITY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_INVALIDITY,
  IIN_EXEMPT_NATIONAL_MOVEMENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_NATIONAL_MOVEMENT,
  IIN_EXEMPT_EXPENSES TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_EXPENSES,
  IIN_EXEMPT_2TP TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2TP,
  IIN_EXEMPT_20 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_20,
  IIN_EXEMPT_2 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_EXEMPT_2,
  AMOUNT_BEFORE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN,
  AMOUNT_BEFORE_IIN_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AMOUNT_BEFORE_IIN_REVERSE,
  RATE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN,
  RATE_IIN2 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.RATE_IIN2,
  IIN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT,
  IIN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.IIN_AMOUNT_REVERSE,
  URVN_AMAOUNT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.URVN_AMAOUNT,
  PLUS_NOT_PAID TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PLUS_NOT_PAID,
  VACATION_ADVANCE_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_CURRENT,
  VACATION_ADVANCE_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_NEXT,
  VACATION_ADVANCE_PREV TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.VACATION_ADVANCE_PREV,
  ADVANCE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.ADVANCE,
  PAY0 TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY0,
  PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY,
  PAYT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAYT,
  PAY_DATE TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.PAY_DATE,
  COMMENTS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.COMMENTS,
  WITHHOLD_FROM_PAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.WITHHOLD_FROM_PAY,
  FORAVPAYCALC_BRUTO TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_BRUTO,
  FORAVPAYCALC_PAYOUT TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_PAYOUT,
  FORAVPAYCALC_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_DAYS,
  FORAVPAYCALC_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.FORAVPAYCALC_HOURS,
  AVPAYCALC_CALDAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_CALDAY,
  AVPAYCALC_DAY TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_DAY,
  AVPAYCALC_HOUR TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.AVPAYCALC_HOUR,
  DT_EDITED TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.DT_EDITED,
  CALC_VER TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.CALC_VER,
  TS TYPE OF COLUMN A_SALARY_SHEETS_R_HIST.TS)
AS
begin

    for select
             a_salary_sheets_r_hist.idH,
             a_salary_sheets_r_hist.id,
             a_salary_sheets_r_hist.ids,
             a_salary_sheets_r_hist.idsx,
             a_salary_sheets_r_hist.idst,
             a_salary_sheets_r_hist.is_temp,
             a_salary_sheets_r_hist.type_tag,
             a_salary_sheets_r_hist.idp,
             a_salary_sheets_r_hist.idam,
             a_salary_sheets_r_hist.snr,
             a_salary_sheets_r_hist.fname,
             a_salary_sheets_r_hist.lname,
             a_salary_sheets_r_hist.position_title,
             a_salary_sheets_r_hist.territorial_code,
             a_salary_sheets_r_hist.calendar_days,
             a_salary_sheets_r_hist.calendar_days_use,
             a_salary_sheets_r_hist.month_workdays,
             a_salary_sheets_r_hist.month_workhours,
             a_salary_sheets_r_hist.plan_days,
             a_salary_sheets_r_hist.plan_hours,
             a_salary_sheets_r_hist.plan_hours_night,
             a_salary_sheets_r_hist.plan_hours_overtime,
             a_salary_sheets_r_hist.fact_days,
             a_salary_sheets_r_hist.fact_hours,
             a_salary_sheets_r_hist.fact_hours_night,
             a_salary_sheets_r_hist.fact_hours_overtime,
             a_salary_sheets_r_hist.plan_work_days,
             a_salary_sheets_r_hist.plan_work_hours,
             a_salary_sheets_r_hist.plan_work_hours_night,
             a_salary_sheets_r_hist.plan_work_hours_overtime,
             a_salary_sheets_r_hist.fact_work_days,
             a_salary_sheets_r_hist.fact_work_hours,
             a_salary_sheets_r_hist.fact_work_hours_night,
             a_salary_sheets_r_hist.fact_work_hours_overtime,
             a_salary_sheets_r_hist.plan_holidays_days,
             a_salary_sheets_r_hist.plan_holidays_hours,
             a_salary_sheets_r_hist.plan_holidays_hours_night,
             a_salary_sheets_r_hist.plan_holidays_hours_overtime,
             a_salary_sheets_r_hist.fact_holidays_days,
             a_salary_sheets_r_hist.fact_holidays_hours,
             a_salary_sheets_r_hist.fact_holidays_hours_night,
             a_salary_sheets_r_hist.fact_holidays_hours_overtime,
             a_salary_sheets_r_hist.salary,
             a_salary_sheets_r_hist.salary_day,
             a_salary_sheets_r_hist.salary_night,
             a_salary_sheets_r_hist.salary_overtime,
             a_salary_sheets_r_hist.salary_holidays_day,
             a_salary_sheets_r_hist.salary_holidays_night,
             a_salary_sheets_r_hist.salary_holidays_overtime,
             a_salary_sheets_r_hist.salary_paid_holidays_day,
             a_salary_sheets_r_hist.salary_paid_holidays_night,
             a_salary_sheets_r_hist.salary_piecework,
             a_salary_sheets_r_hist.sickdays,
             a_salary_sheets_r_hist.sickdays_pay,
             a_salary_sheets_r_hist.accident_days,
             a_salary_sheets_r_hist.accident_pay,
             a_salary_sheets_r_hist.average_income_days,
             a_salary_sheets_r_hist.average_income_pay,

             a_salary_sheets_r_hist.fact_avpay_free_days,
             a_salary_sheets_r_hist.fact_avpay_free_hours,
             a_salary_sheets_r_hist.fact_avpay_work_days,
             a_salary_sheets_r_hist.fact_avpay_workinholidays,
             a_salary_sheets_r_hist.fact_avpay_hours,
             a_salary_sheets_r_hist.fact_avpay_hours_overtime,
             a_salary_sheets_r_hist.fact_avpay_holidays_hours,
             a_salary_sheets_r_hist.fact_avpay_holidays_hours_overt,
             a_salary_sheets_r_hist.salary_avpay_free_days,
             a_salary_sheets_r_hist.salary_avpay_work_days,
             a_salary_sheets_r_hist.salary_avpay_work_days_overtime,
             a_salary_sheets_r_hist.salary_avpay_holidays,
             a_salary_sheets_r_hist.salary_avpay_holidays_overtime,

             a_salary_sheets_r_hist.business_trip_days,
             a_salary_sheets_r_hist.business_trip_pay,
             a_salary_sheets_r_hist.paid_holidays,
             a_salary_sheets_r_hist.paid_holidays_pay,
             a_salary_sheets_r_hist.vacation_days_current,
             a_salary_sheets_r_hist.vacation_days_next,
             a_salary_sheets_r_hist.vacation_hours_current,
             a_salary_sheets_r_hist.vacation_hours_next,
             a_salary_sheets_r_hist.vacation_pay_current,
             a_salary_sheets_r_hist.vacation_pay_next,
             a_salary_sheets_r_hist.vacation_dns_next,
             a_salary_sheets_r_hist.vacation_dds_next,
             a_salary_sheets_r_hist.vacation_iin_next,
             a_salary_sheets_r_hist.vacation_iin_reduce_next,
             a_salary_sheets_r_hist.vacation_cash_next,
             a_salary_sheets_r_hist.vacation_pay_prev,
             a_salary_sheets_r_hist.vacation_dns_prev,
             a_salary_sheets_r_hist.vacation_dds_prev,
             a_salary_sheets_r_hist.vacation_iin_prev,
             a_salary_sheets_r_hist.vacation_days_comp,
             a_salary_sheets_r_hist.vacation_pay_comp,

             a_salary_sheets_r_hist.plus_taxed,
             a_salary_sheets_r_hist.plus_nottaxed,
             a_salary_sheets_r_hist.plus_nosai,
             a_salary_sheets_r_hist.plus_authors_fees,
             a_salary_sheets_r_hist.minus_before_iin,
             a_salary_sheets_r_hist.minus_after_iin,
             a_salary_sheets_r_hist.plus_pf_nottaxed,
             a_salary_sheets_r_hist.plus_pf_taxed,
             a_salary_sheets_r_hist.plus_li_nottaxed,
             a_salary_sheets_r_hist.plus_li_taxed,
             a_salary_sheets_r_hist.plus_hi_nottaxed,
             a_salary_sheets_r_hist.plus_hi_taxed,
             a_salary_sheets_r_hist.plus_np_taxed,
             a_salary_sheets_r_hist.plus_np_nottaxed,
             a_salary_sheets_r_hist.plus_np_nosai,

             a_salary_sheets_r_hist.total_before_taxes,
             a_salary_sheets_r_hist.adjusted_amount,
             a_salary_sheets_r_hist.amount_before_sn,
             a_salary_sheets_r_hist.amount_before_sn_reverse,
             a_salary_sheets_r_hist.rate_dnsn,
             a_salary_sheets_r_hist.rate_ddsn,
             a_salary_sheets_r_hist.dnsn_amount,
             a_salary_sheets_r_hist.ddsn_amount,
             a_salary_sheets_r_hist.sn_amount,
             a_salary_sheets_r_hist.dnsn_amount_reverse,
             a_salary_sheets_r_hist.ddsn_amount_reverse,
             a_salary_sheets_r_hist.sn_max_amount,

             a_salary_sheets_r_hist.iin_exempt_untaxed_minimum0,
             a_salary_sheets_r_hist.iin_exempt_dependants0,
             a_salary_sheets_r_hist.iin_exempt_retaliation0,
             a_salary_sheets_r_hist.iin_exempt_invalidity0,
             a_salary_sheets_r_hist.iin_exempt_national_movement0,
             a_salary_sheets_r_hist.iin_exempt_untaxed_minimum,
             a_salary_sheets_r_hist.iin_exempt_dependants,
             a_salary_sheets_r_hist.iin_exempt_retaliation,
             a_salary_sheets_r_hist.iin_exempt_invalidity,
             a_salary_sheets_r_hist.iin_exempt_national_movement,
             a_salary_sheets_r_hist.iin_exempt_expenses,
             a_salary_sheets_r_hist.iin_exempt_2tp,
             a_salary_sheets_r_hist.iin_exempt_20,
             a_salary_sheets_r_hist.iin_exempt_2,
             a_salary_sheets_r_hist.amount_before_iin,
             a_salary_sheets_r_hist.amount_before_iin_reverse,
             a_salary_sheets_r_hist.rate_iin,
             a_salary_sheets_r_hist.rate_iin2,
             a_salary_sheets_r_hist.iin_amount,
             a_salary_sheets_r_hist.iin_amount_reverse,
             a_salary_sheets_r_hist.urvn_amaount,

             a_salary_sheets_r_hist.plus_not_paid,
             a_salary_sheets_r_hist.vacation_advance_current,
             a_salary_sheets_r_hist.vacation_advance_next,
             a_salary_sheets_r_hist.vacation_advance_prev,
             a_salary_sheets_r_hist.advance,
             a_salary_sheets_r_hist.pay0,
             a_salary_sheets_r_hist.pay,
             a_salary_sheets_r_hist.payt,
             a_salary_sheets_r_hist.pay_date,
             a_salary_sheets_r_hist.comments,
             a_salary_sheets_r_hist.withhold_from_pay,

             a_salary_sheets_r_hist.foravpaycalc_bruto,
             a_salary_sheets_r_hist.foravpaycalc_payout,
             a_salary_sheets_r_hist.foravpaycalc_days,
             a_salary_sheets_r_hist.foravpaycalc_hours,
             a_salary_sheets_r_hist.avpaycalc_calday,
             a_salary_sheets_r_hist.avpaycalc_day,
             a_salary_sheets_r_hist.avpaycalc_hour,

             a_salary_sheets_r_hist.dt_edited,
             a_salary_sheets_r_hist.calc_ver,
             a_salary_sheets_r_hist.ts

    from a_salary_sheets_r_hist
    where a_salary_sheets_r_hist.idsx = :pidsx and
        a_salary_sheets_r_hist.dt_edited between :ptime1 and :ptime2
    order by a_salary_sheets_r_hist.dt_edited

    into
        :idH,
        :id,
        :ids,
        :idsx,
        :idst,
        :is_temp,
        :type_tag,
        :idp,
        :idam,
        :snr,
        :fname,
        :lname,
        :position_title,
        :territorial_code,
        :calendar_days,
        :calendar_days_use,
        :month_workdays,
        :month_workhours,
        :plan_days,
        :plan_hours,
        :plan_hours_night,
        :plan_hours_overtime,
        :fact_days,
        :fact_hours,
        :fact_hours_night,
        :fact_hours_overtime,
        :plan_work_days,
        :plan_work_hours,
        :plan_work_hours_night,
        :plan_work_hours_overtime,
        :fact_work_days,
        :fact_work_hours,
        :fact_work_hours_night,
        :fact_work_hours_overtime,
        :plan_holidays_days,
        :plan_holidays_hours,
        :plan_holidays_hours_night,
        :plan_holidays_hours_overtime,
        :fact_holidays_days,
        :fact_holidays_hours,
        :fact_holidays_hours_night,
        :fact_holidays_hours_overtime,
        :salary,
        :salary_day,
        :salary_night,
        :salary_overtime,
        :salary_holidays_day,
        :salary_holidays_night,
        :salary_holidays_overtime,
        :salary_paid_holidays_day,
        :salary_paid_holidays_night,
        :salary_piecework,
        :sickdays,
        :sickdays_pay,
        :accident_days,
        :accident_pay,
        :average_income_days,
        :average_income_pay,
        
        :fact_avpay_free_days,
        :fact_avpay_free_hours,
        :fact_avpay_work_days,
        :fact_avpay_workinholidays,
        :fact_avpay_hours,
        :fact_avpay_hours_overtime,
        :fact_avpay_holidays_hours,
        :fact_avpay_holidays_hours_overt,
        :salary_avpay_free_days,
        :salary_avpay_work_days,
        :salary_avpay_work_days_overtime,
        :salary_avpay_holidays,
        :salary_avpay_holidays_overtime,
        
        :business_trip_days,
        :business_trip_pay,
        :paid_holidays,
        :paid_holidays_pay,
        :vacation_days_current,
        :vacation_days_next,
        :vacation_hours_current,
        :vacation_hours_next,
        :vacation_pay_current,
        :vacation_pay_next,
        :vacation_dns_next,
        :vacation_dds_next,
        :vacation_iin_next,
        :vacation_iin_reduce_next,
        :vacation_cash_next,
        :vacation_pay_prev,
        :vacation_dns_prev,
        :vacation_dds_prev,
        :vacation_iin_prev,
        :vacation_days_comp,
        :vacation_pay_comp,

        :plus_taxed,
        :plus_nottaxed,
        :plus_nosai,
        :plus_authors_fees,
        :minus_before_iin,
        :minus_after_iin,
        :plus_pf_nottaxed,
        :plus_pf_taxed,
        :plus_li_nottaxed,
        :plus_li_taxed,
        :plus_hi_nottaxed,
        :plus_hi_taxed,
        :plus_np_taxed,
        :plus_np_nottaxed,
        :plus_np_nosai,

        :total_before_taxes,
        :adjusted_amount,
        :amount_before_sn,
        :amount_before_sn_reverse,
        :rate_dnsn,
        :rate_ddsn,
        :dnsn_amount,
        :ddsn_amount,
        :sn_amount,
        :dnsn_amount_reverse,
        :ddsn_amount_reverse,
        :sn_max_amount,

        :iin_exempt_untaxed_minimum0,
        :iin_exempt_dependants0,
        :iin_exempt_retaliation0,
        :iin_exempt_invalidity0,
        :iin_exempt_national_movement0,
        :iin_exempt_untaxed_minimum,
        :iin_exempt_dependants,
        :iin_exempt_retaliation,
        :iin_exempt_invalidity,
        :iin_exempt_national_movement,
        :iin_exempt_expenses,
        :iin_exempt_2tp,
        :iin_exempt_20,
        :iin_exempt_2,
        :amount_before_iin,
        :amount_before_iin_reverse,
        :rate_iin,
        :rate_iin2,
        :iin_amount,
        :iin_amount_reverse,
        :urvn_amaount,

        :plus_not_paid,
        :vacation_advance_current,
        :vacation_advance_next,
        :vacation_advance_prev,
        :advance,
        :pay0,
        :pay,
        :payt,
        :pay_date,
        :comments,
        :withhold_from_pay,

        :foravpaycalc_bruto,
        :foravpaycalc_payout,
        :foravpaycalc_days,
        :foravpaycalc_hours,
        :avpaycalc_calday,
        :avpaycalc_day,
        :avpaycalc_hour,

        :dt_edited,
        :calc_ver,
        :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_A_SALARY_SHEETS_R_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_SALARY_SHEETS_R.ID,
  IDS TYPE OF COLUMN A_SALARY_SHEETS_R.IDS,
  IDSX TYPE OF COLUMN A_SALARY_SHEETS_R.IDSX,
  IDST TYPE OF COLUMN A_SALARY_SHEETS_R.IDST,
  IS_TEMP TYPE OF COLUMN A_SALARY_SHEETS_R.IS_TEMP,
  TYPE_TAG TYPE OF COLUMN A_SALARY_SHEETS_R.TYPE_TAG,
  IDP TYPE OF COLUMN A_SALARY_SHEETS_R.IDP,
  IDAM TYPE OF COLUMN A_SALARY_SHEETS_R.IDAM,
  SNR TYPE OF COLUMN A_SALARY_SHEETS_R.SNR,
  FNAME TYPE OF COLUMN A_SALARY_SHEETS_R.FNAME,
  LNAME TYPE OF COLUMN A_SALARY_SHEETS_R.LNAME,
  POSITION_TITLE TYPE OF COLUMN A_SALARY_SHEETS_R.POSITION_TITLE,
  TERRITORIAL_CODE TYPE OF COLUMN A_SALARY_SHEETS_R.TERRITORIAL_CODE,
  CALENDAR_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.CALENDAR_DAYS,
  CALENDAR_DAYS_USE TYPE OF COLUMN A_SALARY_SHEETS_R.CALENDAR_DAYS_USE,
  MONTH_WORKDAYS TYPE OF COLUMN A_SALARY_SHEETS_R.MONTH_WORKDAYS,
  MONTH_WORKHOURS TYPE OF COLUMN A_SALARY_SHEETS_R.MONTH_WORKHOURS,
  PLAN_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_DAYS,
  PLAN_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS,
  PLAN_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS_NIGHT,
  PLAN_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOURS_OVERTIME,
  FACT_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_DAYS,
  FACT_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS,
  FACT_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS_NIGHT,
  FACT_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOURS_OVERTIME,
  PLAN_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_DAYS,
  PLAN_WORK_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS,
  PLAN_WORK_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS_NIGHT,
  PLAN_WORK_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_WORK_HOURS_OVERTIME,
  FACT_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_DAYS,
  FACT_WORK_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS,
  FACT_WORK_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS_NIGHT,
  FACT_WORK_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_WORK_HOURS_OVERTIME,
  PLAN_HOLIDAYS_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_DAYS,
  PLAN_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS,
  PLAN_HOLIDAYS_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS_NIGHT,
  PLAN_HOLIDAYS_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.PLAN_HOLIDAYS_HOURS_OVERTIME,
  FACT_HOLIDAYS_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_DAYS,
  FACT_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS,
  FACT_HOLIDAYS_HOURS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS_NIGHT,
  FACT_HOLIDAYS_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_HOLIDAYS_HOURS_OVERTIME,
  SALARY TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY,
  SALARY_DAY TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_DAY,
  SALARY_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_NIGHT,
  SALARY_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_OVERTIME,
  SALARY_HOLIDAYS_DAY TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_DAY,
  SALARY_HOLIDAYS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_NIGHT,
  SALARY_HOLIDAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_HOLIDAYS_OVERTIME,
  SALARY_PAID_HOLIDAYS_DAY TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PAID_HOLIDAYS_DAY,
  SALARY_PAID_HOLIDAYS_NIGHT TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PAID_HOLIDAYS_NIGHT,
  SALARY_PIECEWORK TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_PIECEWORK,
  SICKDAYS TYPE OF COLUMN A_SALARY_SHEETS_R.SICKDAYS,
  SICKDAYS_PAY TYPE OF COLUMN A_SALARY_SHEETS_R.SICKDAYS_PAY,
  ACCIDENT_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.ACCIDENT_DAYS,
  ACCIDENT_PAY TYPE OF COLUMN A_SALARY_SHEETS_R.ACCIDENT_PAY,
  AVERAGE_INCOME_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.AVERAGE_INCOME_DAYS,
  AVERAGE_INCOME_PAY TYPE OF COLUMN A_SALARY_SHEETS_R.AVERAGE_INCOME_PAY,
  FACT_AVPAY_FREE_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_FREE_DAYS,
  FACT_AVPAY_FREE_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_FREE_HOURS,
  FACT_AVPAY_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_WORK_DAYS,
  FACT_AVPAY_WORKINHOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_WORKINHOLIDAYS,
  FACT_AVPAY_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOURS,
  FACT_AVPAY_HOURS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOURS_OVERTIME,
  FACT_AVPAY_HOLIDAYS_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOLIDAYS_HOURS,
  FACT_AVPAY_HOLIDAYS_HOURS_OVERT TYPE OF COLUMN A_SALARY_SHEETS_R.FACT_AVPAY_HOLIDAYS_HOURS_OVERT,
  SALARY_AVPAY_FREE_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_FREE_DAYS,
  SALARY_AVPAY_WORK_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_WORK_DAYS,
  SALARY_AVPAY_WORK_DAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_WORK_DAYS_OVERTIME,
  SALARY_AVPAY_HOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_HOLIDAYS,
  SALARY_AVPAY_HOLIDAYS_OVERTIME TYPE OF COLUMN A_SALARY_SHEETS_R.SALARY_AVPAY_HOLIDAYS_OVERTIME,
  BUSINESS_TRIP_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.BUSINESS_TRIP_DAYS,
  BUSINESS_TRIP_PAY TYPE OF COLUMN A_SALARY_SHEETS_R.BUSINESS_TRIP_PAY,
  PAID_HOLIDAYS TYPE OF COLUMN A_SALARY_SHEETS_R.PAID_HOLIDAYS,
  PAID_HOLIDAYS_PAY TYPE OF COLUMN A_SALARY_SHEETS_R.PAID_HOLIDAYS_PAY,
  VACATION_DAYS_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_CURRENT,
  VACATION_DAYS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_NEXT,
  VACATION_HOURS_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_HOURS_CURRENT,
  VACATION_HOURS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_HOURS_NEXT,
  VACATION_PAY_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_CURRENT,
  VACATION_PAY_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_NEXT,
  VACATION_DNS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DNS_NEXT,
  VACATION_DDS_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DDS_NEXT,
  VACATION_IIN_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_NEXT,
  VACATION_IIN_REDUCE_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_REDUCE_NEXT,
  VACATION_CASH_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_CASH_NEXT,
  VACATION_PAY_PREV TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_PREV,
  VACATION_DNS_PREV TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DNS_PREV,
  VACATION_DDS_PREV TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DDS_PREV,
  VACATION_IIN_PREV TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_IIN_PREV,
  VACATION_DAYS_COMP TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_DAYS_COMP,
  VACATION_PAY_COMP TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_PAY_COMP,
  PLUS_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_TAXED,
  PLUS_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOTTAXED,
  PLUS_NOSAI TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOSAI,
  PLUS_AUTHORS_FEES TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_AUTHORS_FEES,
  MINUS_BEFORE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R.MINUS_BEFORE_IIN,
  MINUS_AFTER_IIN TYPE OF COLUMN A_SALARY_SHEETS_R.MINUS_AFTER_IIN,
  PLUS_PF_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_PF_NOTTAXED,
  PLUS_PF_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_PF_TAXED,
  PLUS_LI_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_LI_NOTTAXED,
  PLUS_LI_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_LI_TAXED,
  PLUS_HI_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_HI_NOTTAXED,
  PLUS_HI_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_HI_TAXED,
  PLUS_NP_TAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_TAXED,
  PLUS_NP_NOTTAXED TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_NOTTAXED,
  PLUS_NP_NOSAI TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NP_NOSAI,
  TOTAL_BEFORE_TAXES TYPE OF COLUMN A_SALARY_SHEETS_R.TOTAL_BEFORE_TAXES,
  ADJUSTED_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R.ADJUSTED_AMOUNT,
  AMOUNT_BEFORE_SN TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_SN,
  AMOUNT_BEFORE_SN_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_SN_REVERSE,
  RATE_DNSN TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_DNSN,
  RATE_DDSN TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_DDSN,
  DNSN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R.DNSN_AMOUNT,
  DDSN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R.DDSN_AMOUNT,
  SN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R.SN_AMOUNT,
  DNSN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R.DNSN_AMOUNT_REVERSE,
  DDSN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R.DDSN_AMOUNT_REVERSE,
  SN_MAX_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R.SN_MAX_AMOUNT,
  IIN_EXEMPT_UNTAXED_MINIMUM0 TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_UNTAXED_MINIMUM0,
  IIN_EXEMPT_DEPENDANTS0 TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_DEPENDANTS0,
  IIN_EXEMPT_RETALIATION0 TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_RETALIATION0,
  IIN_EXEMPT_INVALIDITY0 TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_INVALIDITY0,
  IIN_EXEMPT_NATIONAL_MOVEMENT0 TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_NATIONAL_MOVEMENT0,
  IIN_EXEMPT_UNTAXED_MINIMUM TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_UNTAXED_MINIMUM,
  IIN_EXEMPT_DEPENDANTS TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_DEPENDANTS,
  IIN_EXEMPT_RETALIATION TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_RETALIATION,
  IIN_EXEMPT_INVALIDITY TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_INVALIDITY,
  IIN_EXEMPT_NATIONAL_MOVEMENT TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_NATIONAL_MOVEMENT,
  IIN_EXEMPT_EXPENSES TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_EXPENSES,
  IIN_EXEMPT_2TP TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_2TP,
  IIN_EXEMPT_20 TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_20,
  IIN_EXEMPT_2 TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_EXEMPT_2,
  AMOUNT_BEFORE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_IIN,
  AMOUNT_BEFORE_IIN_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R.AMOUNT_BEFORE_IIN_REVERSE,
  RATE_IIN TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_IIN,
  RATE_IIN2 TYPE OF COLUMN A_SALARY_SHEETS_R.RATE_IIN2,
  IIN_AMOUNT TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_AMOUNT,
  IIN_AMOUNT_REVERSE TYPE OF COLUMN A_SALARY_SHEETS_R.IIN_AMOUNT_REVERSE,
  URVN_AMAOUNT TYPE OF COLUMN A_SALARY_SHEETS_R.URVN_AMAOUNT,
  PLUS_NOT_PAID TYPE OF COLUMN A_SALARY_SHEETS_R.PLUS_NOT_PAID,
  VACATION_ADVANCE_CURRENT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_CURRENT,
  VACATION_ADVANCE_NEXT TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_NEXT,
  VACATION_ADVANCE_PREV TYPE OF COLUMN A_SALARY_SHEETS_R.VACATION_ADVANCE_PREV,
  ADVANCE TYPE OF COLUMN A_SALARY_SHEETS_R.ADVANCE,
  PAY0 TYPE OF COLUMN A_SALARY_SHEETS_R.PAY0,
  PAY TYPE OF COLUMN A_SALARY_SHEETS_R.PAY,
  PAYT TYPE OF COLUMN A_SALARY_SHEETS_R.PAYT,
  PAY_DATE TYPE OF COLUMN A_SALARY_SHEETS_R.PAY_DATE,
  COMMENTS TYPE OF COLUMN A_SALARY_SHEETS_R.COMMENTS,
  WITHHOLD_FROM_PAY TYPE OF COLUMN A_SALARY_SHEETS_R.WITHHOLD_FROM_PAY,
  FORAVPAYCALC_BRUTO TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_BRUTO,
  FORAVPAYCALC_PAYOUT TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_PAYOUT,
  FORAVPAYCALC_DAYS TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_DAYS,
  FORAVPAYCALC_HOURS TYPE OF COLUMN A_SALARY_SHEETS_R.FORAVPAYCALC_HOURS,
  AVPAYCALC_CALDAY TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_CALDAY,
  AVPAYCALC_DAY TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_DAY,
  AVPAYCALC_HOUR TYPE OF COLUMN A_SALARY_SHEETS_R.AVPAYCALC_HOUR,
  DT_EDITED TYPE OF COLUMN A_SALARY_SHEETS_R.DT_EDITED,
  CALC_VER TYPE OF COLUMN A_SALARY_SHEETS_R.CALC_VER,
  TS TYPE OF COLUMN A_SALARY_SHEETS_R.TS)
AS
declare km1 integer;
    declare km2 integer;
begin
    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    for select a_salary_sheets_r.id,
             a_salary_sheets_r.ids,
             a_salary_sheets_r.idsx,
             a_salary_sheets_r.idst,
             a_salary_sheets_r.is_temp,
             a_salary_sheets_r.type_tag,
             a_salary_sheets_r.idp,
             a_salary_sheets_r.idam,
             a_salary_sheets_r.snr,
             a_salary_sheets_r.fname,
             a_salary_sheets_r.lname,
             a_salary_sheets_r.position_title,
             a_salary_sheets_r.territorial_code,
             a_salary_sheets_r.calendar_days,
             a_salary_sheets_r.calendar_days_use,
             a_salary_sheets_r.month_workdays,
             a_salary_sheets_r.month_workhours,
             a_salary_sheets_r.plan_days,
             a_salary_sheets_r.plan_hours,
             a_salary_sheets_r.plan_hours_night,
             a_salary_sheets_r.plan_hours_overtime,
             a_salary_sheets_r.fact_days,
             a_salary_sheets_r.fact_hours,
             a_salary_sheets_r.fact_hours_night,
             a_salary_sheets_r.fact_hours_overtime,
             a_salary_sheets_r.plan_work_days,
             a_salary_sheets_r.plan_work_hours,
             a_salary_sheets_r.plan_work_hours_night,
             a_salary_sheets_r.plan_work_hours_overtime,
             a_salary_sheets_r.fact_work_days,
             a_salary_sheets_r.fact_work_hours,
             a_salary_sheets_r.fact_work_hours_night,
             a_salary_sheets_r.fact_work_hours_overtime,
             a_salary_sheets_r.plan_holidays_days,
             a_salary_sheets_r.plan_holidays_hours,
             a_salary_sheets_r.plan_holidays_hours_night,
             a_salary_sheets_r.plan_holidays_hours_overtime,
             a_salary_sheets_r.fact_holidays_days,
             a_salary_sheets_r.fact_holidays_hours,
             a_salary_sheets_r.fact_holidays_hours_night,
             a_salary_sheets_r.fact_holidays_hours_overtime,
             a_salary_sheets_r.salary,
             a_salary_sheets_r.salary_day,
             a_salary_sheets_r.salary_night,
             a_salary_sheets_r.salary_overtime,
             a_salary_sheets_r.salary_holidays_day,
             a_salary_sheets_r.salary_holidays_night,
             a_salary_sheets_r.salary_holidays_overtime,
             a_salary_sheets_r.salary_paid_holidays_day,
             a_salary_sheets_r.salary_paid_holidays_night,
             a_salary_sheets_r.salary_piecework,
             a_salary_sheets_r.sickdays,
             a_salary_sheets_r.sickdays_pay,
             a_salary_sheets_r.accident_days,
             a_salary_sheets_r.accident_pay,
             a_salary_sheets_r.average_income_days,
             a_salary_sheets_r.average_income_pay,

             a_salary_sheets_r.fact_avpay_free_days,
             a_salary_sheets_r.fact_avpay_free_hours,
             a_salary_sheets_r.fact_avpay_work_days,
             a_salary_sheets_r.fact_avpay_workinholidays,
             a_salary_sheets_r.fact_avpay_hours,
             a_salary_sheets_r.fact_avpay_hours_overtime,
             a_salary_sheets_r.fact_avpay_holidays_hours,
             a_salary_sheets_r.fact_avpay_holidays_hours_overt,
             a_salary_sheets_r.salary_avpay_free_days,
             a_salary_sheets_r.salary_avpay_work_days,
             a_salary_sheets_r.salary_avpay_work_days_overtime,
             a_salary_sheets_r.salary_avpay_holidays,
             a_salary_sheets_r.salary_avpay_holidays_overtime,

             a_salary_sheets_r.business_trip_days,
             a_salary_sheets_r.business_trip_pay,
             a_salary_sheets_r.paid_holidays,
             a_salary_sheets_r.paid_holidays_pay,
             a_salary_sheets_r.vacation_days_current,
             a_salary_sheets_r.vacation_days_next,
             a_salary_sheets_r.vacation_hours_current,
             a_salary_sheets_r.vacation_hours_next,
             a_salary_sheets_r.vacation_pay_current,
             a_salary_sheets_r.vacation_pay_next,
             a_salary_sheets_r.vacation_dns_next,
             a_salary_sheets_r.vacation_dds_next,
             a_salary_sheets_r.vacation_iin_next,
             a_salary_sheets_r.vacation_iin_reduce_next,
             a_salary_sheets_r.vacation_cash_next,
             a_salary_sheets_r.vacation_pay_prev,
             a_salary_sheets_r.vacation_dns_prev,
             a_salary_sheets_r.vacation_dds_prev,
             a_salary_sheets_r.vacation_iin_prev,
             a_salary_sheets_r.vacation_days_comp,
             a_salary_sheets_r.vacation_pay_comp,

             a_salary_sheets_r.plus_taxed,
             a_salary_sheets_r.plus_nottaxed,
             a_salary_sheets_r.plus_nosai,
             a_salary_sheets_r.plus_authors_fees,
             a_salary_sheets_r.minus_before_iin,
             a_salary_sheets_r.minus_after_iin,
             a_salary_sheets_r.plus_pf_nottaxed,
             a_salary_sheets_r.plus_pf_taxed,
             a_salary_sheets_r.plus_li_nottaxed,
             a_salary_sheets_r.plus_li_taxed,
             a_salary_sheets_r.plus_hi_nottaxed,
             a_salary_sheets_r.plus_hi_taxed,
             a_salary_sheets_r.plus_np_taxed,
             a_salary_sheets_r.plus_np_nottaxed,
             a_salary_sheets_r.plus_np_nosai,

             a_salary_sheets_r.total_before_taxes,
             a_salary_sheets_r.adjusted_amount,
             a_salary_sheets_r.amount_before_sn,
             a_salary_sheets_r.amount_before_sn_reverse,
             a_salary_sheets_r.rate_dnsn,
             a_salary_sheets_r.rate_ddsn,
             a_salary_sheets_r.dnsn_amount,
             a_salary_sheets_r.ddsn_amount,
             a_salary_sheets_r.sn_amount,
             a_salary_sheets_r.dnsn_amount_reverse,
             a_salary_sheets_r.ddsn_amount_reverse,
             a_salary_sheets_r.sn_max_amount,

             a_salary_sheets_r.iin_exempt_untaxed_minimum0,
             a_salary_sheets_r.iin_exempt_dependants0,
             a_salary_sheets_r.iin_exempt_retaliation0,
             a_salary_sheets_r.iin_exempt_invalidity0,
             a_salary_sheets_r.iin_exempt_national_movement0,
             a_salary_sheets_r.iin_exempt_untaxed_minimum,
             a_salary_sheets_r.iin_exempt_dependants,
             a_salary_sheets_r.iin_exempt_retaliation,
             a_salary_sheets_r.iin_exempt_invalidity,
             a_salary_sheets_r.iin_exempt_national_movement,
             a_salary_sheets_r.iin_exempt_expenses,
             a_salary_sheets_r.iin_exempt_2tp,
             a_salary_sheets_r.iin_exempt_20,
             a_salary_sheets_r.iin_exempt_2,
             a_salary_sheets_r.amount_before_iin,
             a_salary_sheets_r.amount_before_iin_reverse,
             a_salary_sheets_r.rate_iin,
             a_salary_sheets_r.rate_iin2,
             a_salary_sheets_r.iin_amount,
             a_salary_sheets_r.iin_amount_reverse,
             a_salary_sheets_r.urvn_amaount,

             a_salary_sheets_r.plus_not_paid,
             a_salary_sheets_r.vacation_advance_current,
             a_salary_sheets_r.vacation_advance_next,
             a_salary_sheets_r.vacation_advance_prev,
             a_salary_sheets_r.advance,
             a_salary_sheets_r.pay0,
             a_salary_sheets_r.pay,
             a_salary_sheets_r.payt,
             a_salary_sheets_r.pay_date,
             a_salary_sheets_r.comments,
             a_salary_sheets_r.withhold_from_pay,

             a_salary_sheets_r.foravpaycalc_bruto,
             a_salary_sheets_r.foravpaycalc_payout,
             a_salary_sheets_r.foravpaycalc_days,
             a_salary_sheets_r.foravpaycalc_hours,
             a_salary_sheets_r.avpaycalc_calday,
             a_salary_sheets_r.avpaycalc_day,
             a_salary_sheets_r.avpaycalc_hour,

             a_salary_sheets_r.dt_edited,
             a_salary_sheets_r.calc_ver,
             a_salary_sheets_r.ts


    from a_salary_sheets
    join a_salary_sheets_r on a_salary_sheets.id = a_salary_sheets_r.ids

    where ((a_salary_sheets.yr - 1900)*13 + a_salary_sheets.mt) between :km1 and :km2

    order by a_salary_sheets.yr, a_salary_sheets.mt, a_salary_sheets.snr, a_salary_sheets_r.snr

    into :id,
        :ids,
        :idsx,
        :idst,
        :is_temp,
        :type_tag,
        :idp,
        :idam,
        :snr,
        :fname,
        :lname,
        :position_title,
        :territorial_code,
        :calendar_days,
        :calendar_days_use,
        :month_workdays,
        :month_workhours,
        :plan_days,
        :plan_hours,
        :plan_hours_night,
        :plan_hours_overtime,
        :fact_days,
        :fact_hours,
        :fact_hours_night,
        :fact_hours_overtime,
        :plan_work_days,
        :plan_work_hours,
        :plan_work_hours_night,
        :plan_work_hours_overtime,
        :fact_work_days,
        :fact_work_hours,
        :fact_work_hours_night,
        :fact_work_hours_overtime,
        :plan_holidays_days,
        :plan_holidays_hours,
        :plan_holidays_hours_night,
        :plan_holidays_hours_overtime,
        :fact_holidays_days,
        :fact_holidays_hours,
        :fact_holidays_hours_night,
        :fact_holidays_hours_overtime,
        :salary,
        :salary_day,
        :salary_night,
        :salary_overtime,
        :salary_holidays_day,
        :salary_holidays_night,
        :salary_holidays_overtime,
        :salary_paid_holidays_day,
        :salary_paid_holidays_night,
        :salary_piecework,
        :sickdays,
        :sickdays_pay,
        :accident_days,
        :accident_pay,
        :average_income_days,
        :average_income_pay,
        
        :fact_avpay_free_days,
        :fact_avpay_free_hours,
        :fact_avpay_work_days,
        :fact_avpay_workinholidays,
        :fact_avpay_hours,
        :fact_avpay_hours_overtime,
        :fact_avpay_holidays_hours,
        :fact_avpay_holidays_hours_overt,
        :salary_avpay_free_days,
        :salary_avpay_work_days,
        :salary_avpay_work_days_overtime,
        :salary_avpay_holidays,
        :salary_avpay_holidays_overtime,
        
        :business_trip_days,
        :business_trip_pay,
        :paid_holidays,
        :paid_holidays_pay,
        :vacation_days_current,
        :vacation_days_next,
        :vacation_hours_current,
        :vacation_hours_next,
        :vacation_pay_current,
        :vacation_pay_next,
        :vacation_dns_next,
        :vacation_dds_next,
        :vacation_iin_next,
        :vacation_iin_reduce_next,
        :vacation_cash_next,
        :vacation_pay_prev,
        :vacation_dns_prev,
        :vacation_dds_prev,
        :vacation_iin_prev,
        :vacation_days_comp,
        :vacation_pay_comp,

        :plus_taxed,
        :plus_nottaxed,
        :plus_nosai,
        :plus_authors_fees,
        :minus_before_iin,
        :minus_after_iin,
        :plus_pf_nottaxed,
        :plus_pf_taxed,
        :plus_li_nottaxed,
        :plus_li_taxed,
        :plus_hi_nottaxed,
        :plus_hi_taxed,
        :plus_np_taxed,
        :plus_np_nottaxed,
        :plus_np_nosai,

        :total_before_taxes,
        :adjusted_amount,
        :amount_before_sn,
        :amount_before_sn_reverse,
        :rate_dnsn,
        :rate_ddsn,
        :dnsn_amount,
        :ddsn_amount,
        :sn_amount,
        :dnsn_amount_reverse,
        :ddsn_amount_reverse,
        :sn_max_amount,

        :iin_exempt_untaxed_minimum0,
        :iin_exempt_dependants0,
        :iin_exempt_retaliation0,
        :iin_exempt_invalidity0,
        :iin_exempt_national_movement0,
        :iin_exempt_untaxed_minimum,
        :iin_exempt_dependants,
        :iin_exempt_retaliation,
        :iin_exempt_invalidity,
        :iin_exempt_national_movement,
        :iin_exempt_expenses,
        :iin_exempt_2tp,
        :iin_exempt_20,
        :iin_exempt_2,
        :amount_before_iin,
        :amount_before_iin_reverse,
        :rate_iin,
        :rate_iin2,
        :iin_amount,
        :iin_amount_reverse,
        :urvn_amaount,

        :plus_not_paid,
        :vacation_advance_current,
        :vacation_advance_next,
        :vacation_advance_prev,
        :advance,
        :pay0,
        :pay,
        :payt,
        :pay_date,
        :comments,
        :withhold_from_pay,

        :foravpaycalc_bruto,
        :foravpaycalc_payout,
        :foravpaycalc_days,
        :foravpaycalc_hours,
        :avpaycalc_calday,
        :avpaycalc_day,
        :avpaycalc_hour,

        :dt_edited,
        :calc_ver,
        :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_A_TIMESHEET_LISTS_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_TIMESHEET_LISTS.ID,
  YR TYPE OF COLUMN A_TIMESHEET_LISTS.YR,
  MT TYPE OF COLUMN A_TIMESHEET_LISTS.MT,
  SNR TYPE OF COLUMN A_TIMESHEET_LISTS.SNR,
  DESCR TYPE OF COLUMN A_TIMESHEET_LISTS.DESCR,
  IDSH TYPE OF COLUMN A_TIMESHEET_LISTS.IDSH,
  DEP TYPE OF COLUMN A_TIMESHEET_LISTS.DEP,
  TS TYPE OF COLUMN A_TIMESHEET_LISTS.TS)
AS
declare km1 integer;
    declare km2 integer;
begin

    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    for select
        id, yr, mt, snr, descr, idsh, dep, ts
    from
        A_TIMESHEET_LISTS
    where ((yr - 1900)*13 + mt) between :km1 and :km2
    order by yr, mt, snr
    into
        :id, :yr, :mt, :snr, :descr, :idsh, :dep, :ts
    do
        suspend;
end
^

ALTER PROCEDURE SP_A_TIMESHEET_LISTS_R_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_TIMESHEET_LISTS_R.ID,
  IDS TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDS,
  IDP TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDP,
  IDAM TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDAM,
  IDPL TYPE OF COLUMN A_TIMESHEET_LISTS_R.IDPL,
  SNR TYPE OF COLUMN A_TIMESHEET_LISTS_R.SNR,
  PLAN_TYPE TYPE OF COLUMN A_TIMESHEET_LISTS_R.PLAN_TYPE,
  NIGHT TYPE OF COLUMN A_TIMESHEET_LISTS_R.NIGHT,
  OVERTIME TYPE OF COLUMN A_TIMESHEET_LISTS_R.OVERTIME,
  TS TYPE OF COLUMN A_TIMESHEET_LISTS_R.TS)
AS
declare km1 integer;
    declare km2 integer;
begin

    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    for select
        a_timesheet_lists_r.id,
        a_timesheet_lists_r.ids,
        a_timesheet_lists_r.idp,
        a_timesheet_lists_r.idam,
        a_timesheet_lists_r.idpl,
        a_timesheet_lists_r.snr,
        a_timesheet_lists_r.plan_type,
        a_timesheet_lists_r.night,
        a_timesheet_lists_r.overtime,
        a_timesheet_lists_r.ts

    from
        a_timesheet_lists_r
        join a_timesheet_lists
        on a_timesheet_lists_r.ids = a_timesheet_lists.id
    where ((a_timesheet_lists.yr - 1900)*13 + a_timesheet_lists.mt) between :km1 and :km2
    order by yr, mt
    into
        :id, :ids, :idp, :idam, :idpl, :snr, :plan_type, :night, :overtime, :ts
    do
        suspend;
end
^

ALTER PROCEDURE SP_A_TIMESHEET_PER_01(
  PYR1 INTEGER,
  PMT1 INTEGER,
  PYR2 INTEGER,
  PMT2 INTEGER)
RETURNS (
  ID TYPE OF COLUMN A_TIMESHEET.ID,
  IDP TYPE OF COLUMN A_TIMESHEET.IDP,
  IDL TYPE OF COLUMN A_TIMESHEET.IDL,
  SNR TYPE OF COLUMN A_TIMESHEET.SNR,
  PERID TYPE OF COLUMN A_TIMESHEET.PERID,
  AMID TYPE OF COLUMN A_TIMESHEET.AMID,
  YR TYPE OF COLUMN A_TIMESHEET.YR,
  MT TYPE OF COLUMN A_TIMESHEET.MT,
  KIND1 TYPE OF COLUMN A_TIMESHEET.KIND1,
  KIND2 TYPE OF COLUMN A_TIMESHEET.KIND2,
  V1 TYPE OF COLUMN A_TIMESHEET.V1,
  V2 TYPE OF COLUMN A_TIMESHEET.V2,
  V3 TYPE OF COLUMN A_TIMESHEET.V3,
  V4 TYPE OF COLUMN A_TIMESHEET.V4,
  V5 TYPE OF COLUMN A_TIMESHEET.V5,
  V6 TYPE OF COLUMN A_TIMESHEET.V6,
  V7 TYPE OF COLUMN A_TIMESHEET.V7,
  V8 TYPE OF COLUMN A_TIMESHEET.V8,
  V9 TYPE OF COLUMN A_TIMESHEET.V9,
  V10 TYPE OF COLUMN A_TIMESHEET.V10,
  V11 TYPE OF COLUMN A_TIMESHEET.V11,
  V12 TYPE OF COLUMN A_TIMESHEET.V12,
  V13 TYPE OF COLUMN A_TIMESHEET.V13,
  V14 TYPE OF COLUMN A_TIMESHEET.V14,
  V15 TYPE OF COLUMN A_TIMESHEET.V15,
  V16 TYPE OF COLUMN A_TIMESHEET.V16,
  V17 TYPE OF COLUMN A_TIMESHEET.V17,
  V18 TYPE OF COLUMN A_TIMESHEET.V18,
  V19 TYPE OF COLUMN A_TIMESHEET.V19,
  V20 TYPE OF COLUMN A_TIMESHEET.V20,
  V21 TYPE OF COLUMN A_TIMESHEET.V21,
  V22 TYPE OF COLUMN A_TIMESHEET.V22,
  V23 TYPE OF COLUMN A_TIMESHEET.V23,
  V24 TYPE OF COLUMN A_TIMESHEET.V24,
  V25 TYPE OF COLUMN A_TIMESHEET.V25,
  V26 TYPE OF COLUMN A_TIMESHEET.V26,
  V27 TYPE OF COLUMN A_TIMESHEET.V27,
  V28 TYPE OF COLUMN A_TIMESHEET.V28,
  V29 TYPE OF COLUMN A_TIMESHEET.V29,
  V30 TYPE OF COLUMN A_TIMESHEET.V30,
  V31 TYPE OF COLUMN A_TIMESHEET.V31,
  K1 TYPE OF COLUMN A_TIMESHEET.K1,
  D1 TYPE OF COLUMN A_TIMESHEET.D1,
  D2 TYPE OF COLUMN A_TIMESHEET.D2,
  D3 TYPE OF COLUMN A_TIMESHEET.D3,
  D4 TYPE OF COLUMN A_TIMESHEET.D4,
  D5 TYPE OF COLUMN A_TIMESHEET.D5,
  D6 TYPE OF COLUMN A_TIMESHEET.D6,
  D7 TYPE OF COLUMN A_TIMESHEET.D7,
  D8 TYPE OF COLUMN A_TIMESHEET.D8,
  D9 TYPE OF COLUMN A_TIMESHEET.D9,
  D10 TYPE OF COLUMN A_TIMESHEET.D10,
  D11 TYPE OF COLUMN A_TIMESHEET.D11,
  D12 TYPE OF COLUMN A_TIMESHEET.D12,
  D13 TYPE OF COLUMN A_TIMESHEET.D13,
  D14 TYPE OF COLUMN A_TIMESHEET.D14,
  D15 TYPE OF COLUMN A_TIMESHEET.D15,
  D16 TYPE OF COLUMN A_TIMESHEET.D16,
  D17 TYPE OF COLUMN A_TIMESHEET.D17,
  D18 TYPE OF COLUMN A_TIMESHEET.D18,
  D19 TYPE OF COLUMN A_TIMESHEET.D19,
  D20 TYPE OF COLUMN A_TIMESHEET.D20,
  D21 TYPE OF COLUMN A_TIMESHEET.D21,
  D22 TYPE OF COLUMN A_TIMESHEET.D22,
  D23 TYPE OF COLUMN A_TIMESHEET.D23,
  D24 TYPE OF COLUMN A_TIMESHEET.D24,
  D25 TYPE OF COLUMN A_TIMESHEET.D25,
  D26 TYPE OF COLUMN A_TIMESHEET.D26,
  D27 TYPE OF COLUMN A_TIMESHEET.D27,
  D28 TYPE OF COLUMN A_TIMESHEET.D28,
  D29 TYPE OF COLUMN A_TIMESHEET.D29,
  D30 TYPE OF COLUMN A_TIMESHEET.D30,
  D31 TYPE OF COLUMN A_TIMESHEET.D31,
  TS TYPE OF COLUMN A_TIMESHEET.TS)
AS
declare km1 integer;
    declare km2 integer;
begin
    km1 = (:pyr1 - 1900) * 13 + :pmt1;
    km2 = (:pyr2 - 1900) * 13 + :pmt2;

    for select
        a_timesheet.ID,
        a_timesheet.IDP,
        a_timesheet.IDL,
        a_timesheet.SNR,
        a_timesheet.PERID,
        a_timesheet.AMID,
        a_timesheet.YR,
        a_timesheet.MT,
        a_timesheet.KIND1,
        a_timesheet.KIND2,
        a_timesheet.V1,
        a_timesheet.V2,
        a_timesheet.V3,
        a_timesheet.V4,
        a_timesheet.V5,
        a_timesheet.V6,
        a_timesheet.V7,
        a_timesheet.V8,
        a_timesheet.V9,
        a_timesheet.V10,
        a_timesheet.V11,
        a_timesheet.V12,
        a_timesheet.V13,
        a_timesheet.V14,
        a_timesheet.V15,
        a_timesheet.V16,
        a_timesheet.V17,
        a_timesheet.V18,
        a_timesheet.V19,
        a_timesheet.V20,
        a_timesheet.V21,
        a_timesheet.V22,
        a_timesheet.V23,
        a_timesheet.V24,
        a_timesheet.V25,
        a_timesheet.V26,
        a_timesheet.V27,
        a_timesheet.V28,
        a_timesheet.V29,
        a_timesheet.V30,
        a_timesheet.V31,
        a_timesheet.K1,
        a_timesheet.D1,
        a_timesheet.D2,
        a_timesheet.D3,
        a_timesheet.D4,
        a_timesheet.D5,
        a_timesheet.D6,
        a_timesheet.D7,
        a_timesheet.D8,
        a_timesheet.D9,
        a_timesheet.D10,
        a_timesheet.D11,
        a_timesheet.D12,
        a_timesheet.D13,
        a_timesheet.D14,
        a_timesheet.D15,
        a_timesheet.D16,
        a_timesheet.D17,
        a_timesheet.D18,
        a_timesheet.D19,
        a_timesheet.D20,
        a_timesheet.D21,
        a_timesheet.D22,
        a_timesheet.D23,
        a_timesheet.D24,
        a_timesheet.D25,
        a_timesheet.D26,
        a_timesheet.D27,
        a_timesheet.D28,
        a_timesheet.D29,
        a_timesheet.D30,
        a_timesheet.D31,
        a_timesheet.TS

    from
        a_timesheet
    where
        ((a_timesheet.yr - 1900)*13 + a_timesheet.mt) between :km1 and :km2
    order by
        snr

    into
        :ID, :IDP, :IDL, :SNR, :PERID, :AMID,
        :YR, :MT, :KIND1, :KIND2,
        :V1, :V2, :V3, :V4, :V5, :V6, :V7, :V8, :V9, :V10,
        :V11, :V12, :V13, :V14, :V15, :V16, :V17, :V18, :V19, :V20,
        :V21, :V22, :V23, :V24, :V25, :V26, :V27, :V28, :V29, :V30,
        :V31, :K1,
        :D1, :D2, :D3, :D4, :D5, :D6, :D7, :D8, :D9, :D10,
        :D11, :D12, :D13, :D14, :D15, :D16, :D17, :D18, :D19, :D20,
        :D21, :D22, :D23, :D24, :D25, :D26, :D27, :D28, :D29, :D30,
        :D31,
        :TS

    do
        suspend;

end
^

ALTER PROCEDURE SP_F_OPS_DELETE_2(
  PID INTEGER,
  PTS TIMESTAMP)
RETURNS (
  ROWCOUNT INTEGER)
AS
declare variable VUSER varchar(50);

    declare variable ORIGINAL_ID integer;
    declare variable ORIGINAL_DOCID integer;
    declare variable ORIGINAL_DESCR varchar(50);
    declare variable ORIGINAL_AC11 varchar(8);
    declare variable ORIGINAL_AC12 varchar(8);
    declare variable ORIGINAL_AC13 varchar(5);
    declare variable ORIGINAL_AC14 varchar(8);
    declare variable ORIGINAL_AC15 varchar(5);
    declare variable ORIGINAL_AC21 varchar(8);
    declare variable ORIGINAL_AC22 varchar(8);
    declare variable ORIGINAL_AC23 varchar(5);
    declare variable ORIGINAL_AC24 varchar(8);
    declare variable ORIGINAL_AC25 varchar(5);
    declare variable ORIGINAL_SUMMC numeric(15,2);
    declare variable ORIGINAL_CUR varchar(3);
    declare variable ORIGINAL_SUMM numeric(15,2);
    declare variable ORIGINAL_QV float;
    declare variable ORIGINAL_ZDT timestamp;
begin

    DELETE FROM F_OPS
    WHERE id = :pid and ts = :pts
    RETURNING id, docid, descr,
        ac11, ac12, ac13, ac14, ac15,
        ac21, ac22, ac23, ac24, ac25,
        summc, cur, summ, qv, zdt
    INTO :original_id, :original_docid, :original_descr,
        :original_ac11, :original_ac12, :original_ac13, :original_ac14, :original_ac15,
        :original_ac21, :original_ac22, :original_ac23, :original_ac24, :original_ac25,
        :original_summc, :original_cur, :original_summ, :original_qv, :original_zdt;

    ROWCOUNT = row_count;
    if (ROWCOUNT = 0) then
    begin
        suspend;
        exit;
    end

    VUSER = rdb$get_context('USER_SESSION', 'UserName');
    if(VUSER is null) then VUSER = User;

     execute procedure sp_f_ops_delete_log(
        :Original_id,
        :vuser,
        :Original_DocId, 
        :Original_AC11, 
        :Original_AC12, 
        :Original_AC13, 
        :Original_AC14, 
        :Original_AC15, 
        :Original_AC21, 
        :Original_AC22, 
        :Original_AC23, 
        :Original_AC24, 
        :Original_AC25, 
        :Original_SummC, 
        :Original_Cur, 
        :Original_Summ, 
        :Original_QV,
        :original_zdt);

    suspend;
end
^

ALTER PROCEDURE SP_F_OPS_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID TYPE OF COLUMN F_OPS.ID,
  DOCID TYPE OF COLUMN F_OPS.DOCID,
  DESCR TYPE OF COLUMN F_OPS.DESCR,
  AC11 TYPE OF COLUMN F_OPS.AC11,
  AC12 TYPE OF COLUMN F_OPS.AC12,
  AC13 TYPE OF COLUMN F_OPS.AC13,
  AC14 TYPE OF COLUMN F_OPS.AC14,
  AC15 TYPE OF COLUMN F_OPS.AC15,
  AC21 TYPE OF COLUMN F_OPS.AC21,
  AC22 TYPE OF COLUMN F_OPS.AC22,
  AC23 TYPE OF COLUMN F_OPS.AC23,
  AC24 TYPE OF COLUMN F_OPS.AC24,
  AC25 TYPE OF COLUMN F_OPS.AC25,
  SUMMC TYPE OF COLUMN F_OPS.SUMMC,
  CUR TYPE OF COLUMN F_OPS.CUR,
  SUMM TYPE OF COLUMN F_OPS.SUMM,
  QV TYPE OF COLUMN F_OPS.QV,
  NL TYPE OF COLUMN F_OPS.NL,
  ZDT TYPE OF COLUMN F_OPS.ZDT,
  TS TYPE OF COLUMN F_OPS.TS)
AS
begin
    if
    (
        pac11 is null and
        pac12 is null and
        pac13 is null and
        pac14 is null and
        pac15 is null and
        pac21 is null and
        pac22 is null and
        pac23 is null and
        pac24 is null and
        pac25 is null

    )
    then begin
        for select f_ops.id,
                 f_ops.docid,
                 f_ops.descr,
                 f_ops.ac11,
                 f_ops.ac12,
                 f_ops.ac13,
                 f_ops.ac14,
                 f_ops.ac15,
                 f_ops.ac21,
                 f_ops.ac22,
                 f_ops.ac23,
                 f_ops.ac24,
                 f_ops.ac25,
                 f_ops.summc,
                 f_ops.cur,
                 f_ops.summ,
                 f_ops.qv,
                 f_ops.nl,
                 f_ops.zdt,
                 f_ops.ts
        
          FROM F_OPSd JOIN F_OPS ON F_OPSd.id = F_OPS.DocId

          WHERE
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext)  AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            )

          ORDER BY F_OPSd.DETE, F_OPSd.id, F_OPS.id
          into :id,
               :docid,
               :descr,
               :ac11,
               :ac12,
               :ac13,
               :ac14,
               :ac15,
               :ac21,
               :ac22,
               :ac23,
               :ac24,
               :ac25,
               :summc,
               :cur,
               :summ,
               :qv,
               :nl,
               :zdt,
               :ts
        do
        begin
            suspend;
        end
    end

    else begin

        for select f_ops.id,
                 f_ops.docid,
                 f_ops.descr,
                 f_ops.ac11,
                 f_ops.ac12,
                 f_ops.ac13,
                 f_ops.ac14,
                 f_ops.ac15,
                 f_ops.ac21,
                 f_ops.ac22,
                 f_ops.ac23,
                 f_ops.ac24,
                 f_ops.ac25,
                 f_ops.summc,
                 f_ops.cur,
                 f_ops.summ,
                 f_ops.qv,
                 f_ops.nl,
                 f_ops.zdt,
                 f_ops.ts
        
          FROM F_OPSd JOIN F_OPS ON F_OPSd.id = F_OPS.DocId

          WHERE
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            ) AND
            EXISTS
            (
                
                SELECT NULL
                FROM F_OPS o1
                WHERE
                (
                    (o1.DocId = F_OPSd.id) AND
                    (
                        (
                            (:pac11 IS NULL OR o1.AC11 LIKE :pac11) AND
                            (:pac12 IS NULL OR o1.AC12 LIKE :pac12) AND
                            (:pac13 IS NULL OR o1.AC13 LIKE :pac13) AND
                            (:pac14 IS NULL OR o1.AC14 LIKE :pac14) AND
                            (:pac15 IS NULL OR o1.AC15 LIKE :pac15)
                        )
                        AND
                        (
                            (:pac21 IS NULL OR o1.AC21 LIKE :pac21) AND
                            (:pac22 IS NULL OR o1.AC22 LIKE :pac22) AND
                            (:pac23 IS NULL OR o1.AC23 LIKE :pac23) AND
                            (:pac24 IS NULL OR o1.AC24 LIKE :pac24) AND
                            (:pac25 IS NULL OR o1.AC25 LIKE :pac25)
                        )
                    )
                )
            )

          ORDER BY F_OPSd.DETE, F_OPSd.id, F_OPS.id
          into :id,
               :docid,
               :descr,
               :ac11,
               :ac12,
               :ac13,
               :ac14,
               :ac15,
               :ac21,
               :ac22,
               :ac23,
               :ac24,
               :ac25,
               :summc,
               :cur,
               :summ,
               :qv,
               :nl,
               :zdt,
               :ts
        do
        begin
            suspend;
        end

    end
end
^

ALTER PROCEDURE SP_F_OPS_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID TYPE OF COLUMN F_OPS.ID,
  DOCID TYPE OF COLUMN F_OPS.DOCID,
  DESCR TYPE OF COLUMN F_OPS.DESCR,
  AC11 TYPE OF COLUMN F_OPS.AC11,
  AC12 TYPE OF COLUMN F_OPS.AC12,
  AC13 TYPE OF COLUMN F_OPS.AC13,
  AC14 TYPE OF COLUMN F_OPS.AC14,
  AC15 TYPE OF COLUMN F_OPS.AC15,
  AC21 TYPE OF COLUMN F_OPS.AC21,
  AC22 TYPE OF COLUMN F_OPS.AC22,
  AC23 TYPE OF COLUMN F_OPS.AC23,
  AC24 TYPE OF COLUMN F_OPS.AC24,
  AC25 TYPE OF COLUMN F_OPS.AC25,
  SUMMC TYPE OF COLUMN F_OPS.SUMMC,
  CUR TYPE OF COLUMN F_OPS.CUR,
  SUMM TYPE OF COLUMN F_OPS.SUMM,
  QV TYPE OF COLUMN F_OPS.QV,
  NL TYPE OF COLUMN F_OPS.NL,
  ZDT TYPE OF COLUMN F_OPS.ZDT,
  TS TYPE OF COLUMN F_OPS.TS)
AS
begin
    if
    (
        pac11 is null and
        pac12 is null and
        pac13 is null and
        pac14 is null and
        pac15 is null and
        pac21 is null and
        pac22 is null and
        pac23 is null and
        pac24 is null and
        pac25 is null

    )
    then begin
        for select f_ops.id,
                 f_ops.docid,
                 f_ops.descr,
                 f_ops.ac11,
                 f_ops.ac12,
                 f_ops.ac13,
                 f_ops.ac14,
                 f_ops.ac15,
                 f_ops.ac21,
                 f_ops.ac22,
                 f_ops.ac23,
                 f_ops.ac24,
                 f_ops.ac25,
                 f_ops.summc,
                 f_ops.cur,
                 f_ops.summ,
                 f_ops.qv,
                 f_ops.nl,
                 f_ops.zdt,
                 f_ops.ts
        
          FROM F_OPSd JOIN F_OPS ON F_OPSd.id = F_OPS.DocId

          WHERE
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            )

          ORDER BY F_OPSd.DETE, F_OPSd.id, F_OPS.id
          into :id,
               :docid,
               :descr,
               :ac11,
               :ac12,
               :ac13,
               :ac14,
               :ac15,
               :ac21,
               :ac22,
               :ac23,
               :ac24,
               :ac25,
               :summc,
               :cur,
               :summ,
               :qv,
               :nl,
               :zdt,
               :ts
        do
        begin
            suspend;
        end
    end

    else begin

        for select f_ops.id,
                 f_ops.docid,
                 f_ops.descr,
                 f_ops.ac11,
                 f_ops.ac12,
                 f_ops.ac13,
                 f_ops.ac14,
                 f_ops.ac15,
                 f_ops.ac21,
                 f_ops.ac22,
                 f_ops.ac23,
                 f_ops.ac24,
                 f_ops.ac25,
                 f_ops.summc,
                 f_ops.cur,
                 f_ops.summ,
                 f_ops.qv,
                 f_ops.nl,
                 f_ops.zdt,
                 f_ops.ts
        
          FROM F_OPSd JOIN F_OPS ON F_OPSd.id = F_OPS.DocId

          WHERE
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            ) AND
            EXISTS
            (
                
                SELECT NULL
                FROM F_OPS o1
                WHERE
                (
                    (o1.DocId = F_OPSd.id) AND
                    (
                        (
                            (:pac11 IS NULL OR o1.AC11 LIKE :pac11) AND
                            (:pac12 IS NULL OR o1.AC12 LIKE :pac12) AND
                            (:pac13 IS NULL OR o1.AC13 LIKE :pac13) AND
                            (:pac14 IS NULL OR o1.AC14 LIKE :pac14) AND
                            (:pac15 IS NULL OR o1.AC15 LIKE :pac15)
                        )
                        OR
                        (
                            (:pac21 IS NULL OR o1.AC21 LIKE :pac21) AND
                            (:pac22 IS NULL OR o1.AC22 LIKE :pac22) AND
                            (:pac23 IS NULL OR o1.AC23 LIKE :pac23) AND
                            (:pac24 IS NULL OR o1.AC24 LIKE :pac24) AND
                            (:pac25 IS NULL OR o1.AC25 LIKE :pac25)
                        )
                    )
                )
            )

          ORDER BY F_OPSd.DETE, F_OPSd.id, F_OPS.id
          into :id,
               :docid,
               :descr,
               :ac11,
               :ac12,
               :ac13,
               :ac14,
               :ac15,
               :ac21,
               :ac22,
               :ac23,
               :ac24,
               :ac25,
               :summc,
               :cur,
               :summ,
               :qv,
               :nl,
               :zdt,
               :ts
        do
        begin
            suspend;
        end

    end
end
^

ALTER PROCEDURE SP_F_OPS_UPDATE_2(
  PID INTEGER,
  PTS TIMESTAMP,
  PDOCID INTEGER,
  PDESCR TYPE OF COLUMN F_OPS.DESCR,
  PAC11 TYPE OF COLUMN F_OPS.AC11,
  PAC12 TYPE OF COLUMN F_OPS.AC12,
  PAC13 TYPE OF COLUMN F_OPS.AC13,
  PAC14 TYPE OF COLUMN F_OPS.AC14,
  PAC15 TYPE OF COLUMN F_OPS.AC15,
  PAC21 TYPE OF COLUMN F_OPS.AC21,
  PAC22 TYPE OF COLUMN F_OPS.AC22,
  PAC23 TYPE OF COLUMN F_OPS.AC23,
  PAC24 TYPE OF COLUMN F_OPS.AC24,
  PAC25 TYPE OF COLUMN F_OPS.AC25,
  PSUMMC TYPE OF COLUMN F_OPS.SUMMC,
  PCUR TYPE OF COLUMN F_OPS.CUR,
  PSUMM TYPE OF COLUMN F_OPS.SUMM,
  PQV TYPE OF COLUMN F_OPS.QV,
  PZDT TYPE OF COLUMN F_OPS.ZDT,
  PNL TYPE OF COLUMN F_OPS.NL)
RETURNS (
  TS TIMESTAMP)
AS
declare VUSER varchar(15);

    declare Original_Docid type of column f_ops.docid;
    declare Original_DESCR type of column f_ops.descr;
    declare Original_AC11 type of column f_ops.ac11;
    declare Original_AC12 type of column f_ops.ac12;
    declare Original_AC13 type of column f_ops.ac13;
    declare Original_AC14 type of column f_ops.ac14;
    declare Original_AC15 type of column f_ops.ac15;
    declare Original_AC21 type of column f_ops.ac21;
    declare Original_AC22 type of column f_ops.ac22;
    declare Original_AC23 type of column f_ops.ac23;
    declare Original_AC24 type of column f_ops.ac24;
    declare Original_AC25 type of column f_ops.ac25;
    declare Original_SUMMC type of column f_ops.summc;
    declare Original_CUR type of column f_ops.cur;
    declare Original_SUMM type of column f_ops.summ;
    declare Original_QV type of column f_ops.qv;
    declare Original_NL type of column f_ops.nl;
    declare Original_ZDT type of column f_ops.zdt;
begin

    UPDATE F_OPS
    SET 
        DocId = :pDocId,
        Descr = :pDescr,
        AC11 = :pAC11,
        AC12 = :pAC12,
        AC13 = :pAC13,
        AC14 = :pAC14,
        AC15 = :pAC15,
        AC21 = :pAC21,
        AC22 = :pAC22,
        AC23 = :pAC23,
        AC24 = :pAC24,
        AC25 = :pAC25,
        SummC = :pSummC,
        Cur = :pCur,
        Summ = :pSumm,
        QV = :pQV,
        NL = :pnl, 
        ZDt = localtimestamp(0)
    WHERE
        id = :PID AND ts = :PTS
    RETURNING
        old.docid, old.descr,
        old.ac11, old.ac11, old.ac13, old.ac14, old.ac15,
        old.ac21, old.ac21, old.ac23, old.ac24, old.ac25,
        old.summc, old.cur, old.summ, old.qv, old.zdt,
        new.ts
    INTO
        :original_docid, :original_descr,
        :original_ac11, :original_ac11, :original_ac13, :original_ac14, :original_ac15,
        :original_ac21, :original_ac21, :original_ac23, :original_ac24, :original_ac25,
        :original_summc, :original_cur, :original_summ, :original_qv, :original_zdt,
        :ts;
    
    if (row_count = 0) then
        exit;

    VUSER = rdb$get_context('USER_SESSION', 'UserName');
    if(VUSER is null) then VUSER = User;

     execute procedure sp_f_ops_update_log(
        :pid,
        :vuser,
        :Original_DocId, 
        :Original_AC11, 
        :Original_AC12, 
        :Original_AC13, 
        :Original_AC14, 
        :Original_AC15, 
        :Original_AC21, 
        :Original_AC22, 
        :Original_AC23, 
        :Original_AC24, 
        :Original_AC25, 
        :Original_SummC, 
        :Original_Cur, 
        :Original_Summ, 
        :Original_QV,
        :Original_ZDt);

    suspend;
end
^

ALTER PROCEDURE SP_F_OPSD_DELETE_2(
  PID INTEGER,
  PTS TIMESTAMP)
RETURNS (
  ROWCOUNT INTEGER)
AS
declare VUSER varchar(15);
    declare ORIGINAL_DATE type of column f_opsd.dete;
    declare ORIGINAL_NRX type of column f_opsd.nrx;
    declare ORIGINAL_DOCTYP type of column f_opsd.doctyp;
    declare ORIGINAL_DOCST type of column f_opsd.docst;
    declare ORIGINAL_DOCNR type of column f_opsd.docnr;
    declare ORIGINAL_CLID type of column f_opsd.clid;
    declare ORIGINAL_CLID2 type of column f_opsd.clid2;
    declare ORIGINAL_DESCR type of column f_opsd.descr;
    declare ORIGINAL_SUMM type of column f_opsd.summ;
    declare ORIGINAL_PVN type of column f_opsd.pvn;
    declare ORIGINAL_ZNR type of column f_opsd.znr;
    declare ORIGINAL_ZU type of column f_opsd.zu;
    declare ORIGINAL_ZDT type of column f_opsd.zdt;
    declare ORIGINAL_DT2 date;
begin
    DELETE FROM F_OPSd
    WHERE 
        id = :pid AND ts = :pts
    RETURNING
        Dete, NrX, DocTyp, DocSt, DocNr,
        ClId, ClId2, Descr,
        Summ, PVN,
        ZNR, ZDt
    INTO
        :Original_Date, 
        :Original_NrX,
        :Original_DocTyp,
        :Original_DocSt,
        :Original_DocNr, 
        :Original_ClId, 
        :Original_ClId2, 
        :Original_Descr, 
        :Original_Summ, 
        :Original_PVN, 
        :Original_ZNR,
        :Original_ZDt;
    
    ROWCOUNT = row_count;
    if (ROWCOUNT = 0) then exit;

    VUSER = rdb$get_context('USER_SESSION', 'UserName');
    if(VUSER is null) then VUSER = User;

    EXECUTE PROCEDURE sp_f_opsd_delete_log(
            :pid,
            :VUSER,
            :Original_Date, 
            :Original_NrX, 
            :Original_DocTyp, 
            :Original_DocSt, 
            :Original_DocNr, 
            :Original_ClId, 
            :Original_ClId2, 
            :Original_Descr, 
            :Original_Summ, 
            :Original_PVN, 
            :Original_ZNR,
            :Original_ZDt);

    suspend;
end
^

ALTER PROCEDURE SP_F_OPSD_FILTER_AND(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID TYPE OF COLUMN F_OPSD.ID,
  DETE TYPE OF COLUMN F_OPSD.DETE,
  NRX TYPE OF COLUMN F_OPSD.NRX,
  DOCTYP TYPE OF COLUMN F_OPSD.DOCTYP,
  DOCST TYPE OF COLUMN F_OPSD.DOCST,
  DOCNR TYPE OF COLUMN F_OPSD.DOCNR,
  CLID TYPE OF COLUMN F_OPSD.CLID,
  CLID2 TYPE OF COLUMN F_OPSD.CLID2,
  DESCR TYPE OF COLUMN F_OPSD.DESCR,
  SUMM TYPE OF COLUMN F_OPSD.SUMM,
  PVN TYPE OF COLUMN F_OPSD.PVN,
  OPT TYPE OF COLUMN F_OPSD.OPT,
  ZNR TYPE OF COLUMN F_OPSD.ZNR,
  ZU TYPE OF COLUMN F_OPSD.ZU,
  ZDT TYPE OF COLUMN F_OPSD.ZDT,
  DT2 TYPE OF COLUMN F_OPSD.DT2,
  YR TYPE OF COLUMN F_OPSD.YR,
  NL TYPE OF COLUMN F_OPSD.NL,
  IDDOCM TYPE OF COLUMN F_OPSD.IDDOCM,
  TS TYPE OF COLUMN F_OPSD.TS)
AS
begin
    if
    (
        pac11 is null and
        pac12 is null and
        pac13 is null and
        pac14 is null and
        pac15 is null and
        pac21 is null and
        pac22 is null and
        pac23 is null and
        pac24 is null and
        pac25 is null

    )
    then begin
        for select
            id, DETE,  nrx, doctyp, docst, docnr,
            clid, clid2, descr, summ, pvn,
            opt, znr, zu, zdt, dt2, nl, yr, iddocm,
            ts
        from f_opsd
        where
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            )

        ORDER BY DETE, id
        into
            :id, :DETE, :nrx, :doctyp, :docst, :docnr,
            :clid, :clid2, :descr, :summ, :pvn,
            :opt, :znr, :zu, :zdt, :dt2, :nl, :yr, :iddocm,
            :ts
        do
        begin
            suspend;
        end
    end
    else begin
        for select
            id, DETE,  nrx, doctyp, docst, docnr,
            clid, clid2, descr, summ, pvn,
            opt, znr, zu, zdt, dt2, nl, yr, iddocm,
            ts
        from f_opsd
        where
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            ) AND
            EXISTS
            (
                SELECT NULL
                FROM F_OPS o1
                WHERE
                (
                    (o1.DocId = F_OPSd.id) AND
                    (
                        (
                            (:pac11 IS NULL OR o1.AC11 LIKE :pac11) AND
                            (:pac12 IS NULL OR o1.AC12 LIKE :pac12) AND
                            (:pac13 IS NULL OR o1.AC13 LIKE :pac13) AND
                            (:pac14 IS NULL OR o1.AC14 LIKE :pac14) AND
                            (:pac15 IS NULL OR o1.AC15 LIKE :pac15)
                        )
                        AND
                        (
                            (:pac21 IS NULL OR o1.AC21 LIKE :pac21) AND
                            (:pac22 IS NULL OR o1.AC22 LIKE :pac22) AND
                            (:pac23 IS NULL OR o1.AC23 LIKE :pac23) AND
                            (:pac24 IS NULL OR o1.AC24 LIKE :pac24) AND
                            (:pac25 IS NULL OR o1.AC25 LIKE :pac25)
                        )
                    )
                )
            )
        ORDER BY DETE, f_opsd.id
        into
            :id, :DETE, :nrx, :doctyp, :docst, :docnr,
            :clid, :clid2, :descr, :summ, :pvn,
            :opt, :znr, :zu, :zdt, :dt2, :nl, :yr, :iddocm,
            :ts
        do
        begin
            suspend;
        end
    end
end
^

ALTER PROCEDURE SP_F_OPSD_FILTER_OR(
  PDATE1 DATE,
  PDATE2 DATE,
  PTEXT VARCHAR(50),
  PCLID VARCHAR(15),
  PAC11 VARCHAR(8),
  PAC12 VARCHAR(8),
  PAC13 VARCHAR(5),
  PAC14 VARCHAR(8),
  PAC15 VARCHAR(5),
  PAC21 VARCHAR(8),
  PAC22 VARCHAR(8),
  PAC23 VARCHAR(5),
  PAC24 VARCHAR(8),
  PAC25 VARCHAR(5),
  PDOCGR VARCHAR(10))
RETURNS (
  ID TYPE OF COLUMN F_OPSD.ID,
  DETE TYPE OF COLUMN F_OPSD.DETE,
  NRX TYPE OF COLUMN F_OPSD.NRX,
  DOCTYP TYPE OF COLUMN F_OPSD.DOCTYP,
  DOCST TYPE OF COLUMN F_OPSD.DOCST,
  DOCNR TYPE OF COLUMN F_OPSD.DOCNR,
  CLID TYPE OF COLUMN F_OPSD.CLID,
  CLID2 TYPE OF COLUMN F_OPSD.CLID2,
  DESCR TYPE OF COLUMN F_OPSD.DESCR,
  SUMM TYPE OF COLUMN F_OPSD.SUMM,
  PVN TYPE OF COLUMN F_OPSD.PVN,
  OPT TYPE OF COLUMN F_OPSD.OPT,
  ZNR TYPE OF COLUMN F_OPSD.ZNR,
  ZU TYPE OF COLUMN F_OPSD.ZU,
  ZDT TYPE OF COLUMN F_OPSD.ZDT,
  DT2 TYPE OF COLUMN F_OPSD.DT2,
  YR TYPE OF COLUMN F_OPSD.YR,
  NL TYPE OF COLUMN F_OPSD.NL,
  IDDOCM TYPE OF COLUMN F_OPSD.IDDOCM,
  TS TYPE OF COLUMN F_OPSD.TS)
AS
begin
    if
    (
        pac11 is null and
        pac12 is null and
        pac13 is null and
        pac14 is null and
        pac15 is null and
        pac21 is null and
        pac22 is null and
        pac23 is null and
        pac24 is null and
        pac25 is null

    )
    then begin
        for select
            id, DETE,  nrx, doctyp, docst, docnr,
            clid, clid2, descr, summ, pvn,
            opt, znr, zu, zdt, dt2, nl, yr, iddocm,
            ts
        from f_opsd
        where
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            )
        ORDER BY DETE, id
        into
            :id, :DETE, :nrx, :doctyp, :docst, :docnr,
            :clid, :clid2, :descr, :summ, :pvn,
            :opt, :znr, :zu, :zdt, :dt2, :nl, :yr, :iddocm,
            :ts
        do
        begin
            suspend;
        end
    end
    else begin
        for select
            id, DETE,  nrx, doctyp, docst, docnr,
            clid, clid2, descr, summ, pvn,
            opt, znr, zu, zdt, dt2, nl, yr, iddocm,
            ts
        from f_opsd
        where
            (:pdate1 IS NULL OR f_opsd.DETE >= :pdate1) AND
            (:pdate2 IS NULL OR f_opsd.DETE <= :pdate2) AND
            (:pclid IS NULL OR ClId = :pclid OR ClId2 = :pclid) AND
            (:ptext IS NULL OR F_OPSd.Descr LIKE :ptext) AND
            (
                :PDOCGR IS NULL OR EXISTS(
                    SELECT DTA.ID
                    FROM f_doctypb AS DTB inner join f_doctypa AS DTA on DTB.ida = DTA.id
                    WHERE DTB.ID = F_OPSD.doctyp AND DTA.ID = :PDOCGR
                )
            ) AND
            EXISTS
            (
                SELECT NULL
                FROM F_OPS o1
                WHERE
                (
                    (o1.DocId = F_OPSd.id) AND
                    (
                        (
                            (:pac11 IS NULL OR o1.AC11 LIKE :pac11) AND
                            (:pac12 IS NULL OR o1.AC12 LIKE :pac12) AND
                            (:pac13 IS NULL OR o1.AC13 LIKE :pac13) AND
                            (:pac14 IS NULL OR o1.AC14 LIKE :pac14) AND
                            (:pac15 IS NULL OR o1.AC15 LIKE :pac15)
                        )
                        OR
                        (
                            (:pac21 IS NULL OR o1.AC21 LIKE :pac21) AND
                            (:pac22 IS NULL OR o1.AC22 LIKE :pac22) AND
                            (:pac23 IS NULL OR o1.AC23 LIKE :pac23) AND
                            (:pac24 IS NULL OR o1.AC24 LIKE :pac24) AND
                            (:pac25 IS NULL OR o1.AC25 LIKE :pac25)
                        )
                    )
                )
            )
        ORDER BY DETE, f_opsd.id
        into
            :id, :DETE, :nrx, :doctyp, :docst, :docnr,
            :clid, :clid2, :descr, :summ, :pvn,
            :opt, :znr, :zu, :zdt, :dt2, :nl, :yr, :iddocm,
            :ts
        do
        begin
            suspend;
        end
    end
end
^

ALTER PROCEDURE SP_F_OPSD_UPDATE_2(
  PID INTEGER,
  PTS TIMESTAMP,
  PDETE TYPE OF COLUMN F_OPSD.DETE,
  PNRX TYPE OF COLUMN F_OPSD.NRX,
  PDOCTYP TYPE OF COLUMN F_OPSD.DOCTYP,
  PDOCST TYPE OF COLUMN F_OPSD.DOCST,
  PDOCNR TYPE OF COLUMN F_OPSD.DOCNR,
  PCLID TYPE OF COLUMN F_OPSD.CLID,
  PCLID2 TYPE OF COLUMN F_OPSD.CLID2,
  PDESCR TYPE OF COLUMN F_OPSD.DESCR,
  PSUMM TYPE OF COLUMN F_OPSD.SUMM,
  PPVN TYPE OF COLUMN F_OPSD.PVN,
  POPT TYPE OF COLUMN F_OPSD.OPT,
  PZU TYPE OF COLUMN F_OPSD.ZU,
  PZDT TYPE OF COLUMN F_OPSD.ZDT,
  PDT2 TYPE OF COLUMN F_OPSD.DT2,
  PIDDCOM TYPE OF COLUMN F_OPSD.IDDOCM,
  PNL TYPE OF COLUMN F_OPSD.NL)
RETURNS (
  ZNR TYPE OF COLUMN F_OPSD.ZNR,
  TS TIMESTAMP)
AS
declare VUSER varchar(15);
    declare ORIGINAL_DATE type of column f_opsd.dete;
    declare ORIGINAL_NRX type of column f_opsd.nrx;
    declare ORIGINAL_DOCTYP type of column f_opsd.doctyp;
    declare ORIGINAL_DOCST type of column f_opsd.docst;
    declare ORIGINAL_DOCNR type of column f_opsd.docnr;
    declare ORIGINAL_CLID type of column f_opsd.clid;
    declare ORIGINAL_CLID2 type of column f_opsd.clid2;
    declare ORIGINAL_DESCR type of column f_opsd.descr;
    declare ORIGINAL_SUMM type of column f_opsd.summ;
    declare ORIGINAL_PVN type of column f_opsd.pvn;
    declare ORIGINAL_ZNR type of column f_opsd.znr;
    declare ORIGINAL_ZU type of column f_opsd.zu;
    declare ORIGINAL_ZDT type of column f_opsd.zdt;
    declare ORIGINAL_DT2 date;
begin
    VUSER = PZU;

    UPDATE F_OPSd
    SET 
        DETE = :pDete,
        NrX = :pNrX,
        DocTyp = :pDocTyp,
        DocSt = :pDocSt,
        DocNr = :pDocNr,
        ClId = :pClId,
        ClId2 = :pClId2,
        Descr = :pDescr,
        Summ = :pSumm,
        PVN = :pPVN,
        Opt = :pOpt,
        ZU = :vuser,
        ZDt = localtimestamp(0),
        DT2 = :pDT2,
        NL = :pNL
    WHERE 
        id = :pid and ts = :pts
    RETURNING
        old.dete, old.NrX, old.DocTyp, old.DocSt, old.DocNr,
        old.ClId, old.ClId2, old.Descr,
        old.Summ, old.PVN, old.ZNR, old.ZDt,
        new.ZNR, new.TS
    INTO
        :Original_Date,
        :Original_NrX, 
        :Original_DocTyp, 
        :Original_DocSt, 
        :Original_DocNr, 
        :Original_ClId, 
        :Original_ClId2, 
        :Original_Descr, 
        :Original_Summ, 
        :Original_PVN, 
        :Original_ZNR,
        :Original_ZDt,
        :ZNR,
        :TS;

    if (row_count = 0) then exit;

    EXECUTE PROCEDURE sp_f_opsd_update_log(
        :pid,
        :vuser,
        :Original_Date, 
        :Original_NrX, 
        :Original_DocTyp, 
        :Original_DocSt, 
        :Original_DocNr, 
        :Original_ClId, 
        :Original_ClId2, 
        :Original_Descr, 
        :Original_Summ, 
        :Original_PVN, 
        :Original_ZNR,
        :Original_ZDt);

    suspend;
end
^

ALTER PROCEDURE SP_F_REP_BAL_12(
  SDT DATE,
  EDT DATE,
  PBALID VARCHAR(10))
RETURNS (
  ID TYPE OF COLUMN F_BALA21.ID,
  SPID TYPE OF COLUMN F_BALA21.SPID,
  BID TYPE OF COLUMN F_BALA21.BID,
  S1 TYPE OF COLUMN F_BALA21.S1,
  S2 TYPE OF COLUMN F_BALA21.S2,
  TS TYPE OF COLUMN F_BALA21.TS)
AS
begin
    INSERT INTO f_ttemp_balaC (AC, S1, S2)
        SELECT T1.AC, T1.S1, T1.S2
        FROM sp_f_rep_bal_11(:SDT, :EDT) AS T1;

    INSERT INTO f_ttemp_BalA21 (bid, S1, S2)
    SELECT 
        F_BalA2.id AS bid,
        SUM(iif(F_BalA3.tp = 'Db', T1a.S1, - T1a.S1)) AS s1,
        SUM(iif(F_BalA3.tp = 'Db', T1a.S2, - T1a.S2)) AS s2
    FROM F_BalA1
        INNER JOIN F_BalA2 ON F_BalA1.balid = F_BalA2.balid
        INNER JOIN F_BalA3 ON F_BalA2.id = F_BalA3.id2
        INNER JOIN f_ttemp_balaC AS T1a ON T1a.AC LIKE REPLACE(F_BalA3.ac,'*','%')
    WHERE
        F_BalA1.balid = :pbalid AND
        F_BalA2.tp = 'S'
    GROUP BY F_BalA2.id;


    INSERT INTO f_ttemp_BalA21 (bid, S1, S2)
    SELECT 
        F_BalA2.id AS bid,
        SUM(T2.s1) AS s1,
        SUM(T2.s2) AS s2
    FROM 
        F_BalA1 
        INNER JOIN F_BalA2 ON F_BalA1.balid = F_BalA2.balid
        INNER JOIN
            (
                SELECT F_BalA2.nr, f_ttemp_BalA21.s1, f_ttemp_BalA21.s2
                FROM F_BalA2 INNER JOIN f_ttemp_BalA21 
                    ON f_ttemp_BalA21.bid = F_BalA2.id
            ) AS T2
            ON T2.nr BETWEEN F_BalA2.nr1 AND F_BalA2.nr2
    WHERE
        F_BalA1.balid = :pbalid AND
        F_BalA2.tp = 'K'
    GROUP BY F_BalA2.id;


    INSERT INTO f_ttemp_BalA21 (bid, S1, S2)
    SELECT 
        F_BalA2.id AS bid,
        SUM(T2.s1) AS s1,
        SUM(T2.s2) AS s2
    FROM 
        F_BalA1 
        INNER JOIN F_BalA2 ON F_BalA1.balid = F_BalA2.balid
        INNER JOIN
            (
                SELECT F_BalA2.nr, f_ttemp_BalA21.s1, f_ttemp_BalA21.s2
                FROM F_BalA2 INNER JOIN f_ttemp_BalA21 
                    ON f_ttemp_BalA21.bid = F_BalA2.id
            ) AS T2
            ON T2.nr = F_BalA2.nr1
    WHERE
        F_BalA1.balid = :pbalid AND
        F_BalA2.tp = 'V'
    GROUP BY F_BalA2.id;


    FOR SELECT
        f_ttemp_BalA21.bid AS id, -- hack
        0 AS spid,
        f_ttemp_BalA21.bid AS bid,
        f_ttemp_BalA21.s1 AS s1,
        f_ttemp_BalA21.s2 AS s2
    FROM f_ttemp_BalA21
        INNER JOIN F_BalA2 ON f_ttemp_BalA21.bid = F_BalA2.id
    ORDER BY F_BalA2.nr

    into
        :id, :spid, :bid, :s1, :s2
    do
    begin
        ts = localtimestamp(0);
        suspend;
    end
end
^

ALTER PROCEDURE SP_F_REP_BAL_13(
  PBALID VARCHAR(10))
RETURNS (
  AC TYPE OF COLUMN F_ACP21.AC,
  NAME TYPE OF COLUMN F_ACP21.NAME,
  ID1 TYPE OF COLUMN F_ACP21.ID1,
  ID2 TYPE OF COLUMN F_ACP21.ID2,
  TS TYPE OF COLUMN F_ACP21.TS)
AS
begin
-- rezultāti F_AcP21.AC, kas netika iesummēti bilances formulās
    FOR SELECT
        F_AcP21.AC, null, null, null, F_AcP21.TS
    FROM F_AcP21 LEFT JOIN
    (    
        SELECT DISTINCT F_AcP21.AC
        FROM F_BalA1
            INNER JOIN F_BalA2 ON F_BalA1.balid = F_BalA2.balid
            INNER JOIN F_BalA3 ON F_BalA2.id = F_BalA3.id2
            INNER JOIN F_AcP21 ON F_AcP21.AC LIKE REPLACE(F_BalA3.ac,'*','%')
        WHERE
            F_BalA1.balid = :pbalid AND
            F_BalA2.tp = 'S'
    ) AS T1 ON F_AcP21.AC = T1.AC
    WHERE T1.AC IS NULL
    ORDER BY AC
      into :ac, :name, :id1, :id2, :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_F_REP_BAL_22(
  SDT DATE,
  EDT DATE,
  PBALID VARCHAR(10))
RETURNS (
  ID INTEGER,
  SPID INTEGER,
  BID INTEGER,
  M0 MONEY,
  M1 MONEY,
  M2 MONEY,
  M3 MONEY,
  M4 MONEY,
  M5 MONEY,
  M6 MONEY,
  M7 MONEY,
  M8 MONEY,
  M9 MONEY,
  M10 MONEY,
  M11 MONEY,
  M12 MONEY)
AS
declare variable vid integer;
begin
    INSERT INTO f_ttemp_balmt1 (AC, M0, M1, M2, M3, M4, M5,
            M6, M7, M8, M9, M10, M11, M12)
        SELECT T1.AC, T1.M0, T1.M1, T1.M2, T1.M3, T1.M4, T1.M5,
                T1.M6, T1.M7, T1.M8, T1.M9, T1.M10, T1.M11, T1.M12
        FROM sp_f_rep_bal_21(:SDT, :EDT) AS T1;

    INSERT INTO f_ttemp_BalMT2 (bid, M0, M1, M2, M3, M4, M5,
            M6, M7, M8, M9, M10, M11, M12)
    SELECT 
        F_BalA2.id AS bid,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M0, - T1a.M0)) AS M0,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M1, - T1a.M1)) AS M1,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M2, - T1a.M2)) AS M2,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M3, - T1a.M3)) AS M3,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M4, - T1a.M4)) AS M4,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M5, - T1a.M5)) AS M5,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M6, - T1a.M6)) AS M6,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M7, - T1a.M7)) AS M7,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M8, - T1a.M8)) AS M8,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M9, - T1a.M9)) AS M9,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M10, - T1a.M10)) AS M10,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M11, - T1a.M11)) AS M11,
        SUM(iif(F_BalA3.tp = 'Db', T1a.M12, - T1a.M12)) AS M12
    FROM F_BalA1
        INNER JOIN F_BalA2 ON F_BalA1.balid = F_BalA2.balid
        INNER JOIN F_BalA3 ON F_BalA2.id = F_BalA3.id2
        INNER JOIN f_ttemp_balMT1 AS T1a ON T1a.AC LIKE REPLACE(F_BalA3.ac,'*','%')
    WHERE
        F_BalA1.balid = :pbalid AND
        F_BalA2.tp = 'S'
    GROUP BY F_BalA2.id;


    INSERT INTO f_ttemp_BalMT2 (bid, M0, M1, M2, M3, M4, M5,
            M6, M7, M8, M9, M10, M11, M12)
    SELECT 
        F_BalA2.id AS bid,
        SUM(T2.M0) AS M0,
        SUM(T2.M1) AS M1,
        SUM(T2.M2) AS M2,
        SUM(T2.M3) AS M3,
        SUM(T2.M4) AS M4,
        SUM(T2.M5) AS M5,
        SUM(T2.M6) AS M6,
        SUM(T2.M7) AS M7,
        SUM(T2.M8) AS M8,
        SUM(T2.M9) AS M9,
        SUM(T2.M10) AS M10,
        SUM(T2.M11) AS M11,
        SUM(T2.M12) AS M12
    FROM 
        F_BalA1 
        INNER JOIN F_BalA2 ON F_BalA1.balid = F_BalA2.balid
        INNER JOIN
            (
                SELECT
                    F_BalA2.nr,
                    f_ttemp_BalMT2.M0,
                    f_ttemp_BalMT2.M1,
                    f_ttemp_BalMT2.M2,
                    f_ttemp_BalMT2.M3,
                    f_ttemp_BalMT2.M4,
                    f_ttemp_BalMT2.M5,
                    f_ttemp_BalMT2.M6,
                    f_ttemp_BalMT2.M7,
                    f_ttemp_BalMT2.M8,
                    f_ttemp_BalMT2.M9,
                    f_ttemp_BalMT2.M10,
                    f_ttemp_BalMT2.M11,
                    f_ttemp_BalMT2.M12
                FROM F_BalA2 INNER JOIN f_ttemp_BalMT2
                    ON f_ttemp_BalMT2.bid = F_BalA2.id
            ) AS T2
            ON T2.nr BETWEEN F_BalA2.nr1 AND F_BalA2.nr2
    WHERE
        F_BalA1.balid = :pbalid AND
        F_BalA2.tp = 'K'
    GROUP BY F_BalA2.id;


    INSERT INTO f_ttemp_BalMT2 (bid, M0, M1, M2, M3, M4, M5,
            M6, M7, M8, M9, M10, M11, M12)
    SELECT 
        F_BalA2.id AS bid,
        SUM(T2.M0) AS M0,
        SUM(T2.M1) AS M1,
        SUM(T2.M2) AS M2,
        SUM(T2.M3) AS M3,
        SUM(T2.M4) AS M4,
        SUM(T2.M5) AS M5,
        SUM(T2.M6) AS M6,
        SUM(T2.M7) AS M7,
        SUM(T2.M8) AS M8,
        SUM(T2.M9) AS M9,
        SUM(T2.M10) AS M10,
        SUM(T2.M11) AS M11,
        SUM(T2.M12) AS M12
    FROM 
        F_BalA1 
        INNER JOIN F_BalA2 ON F_BalA1.balid = F_BalA2.balid
        INNER JOIN
            (
                SELECT
                    F_BalA2.nr,
                    f_ttemp_BalMT2.M0,
                    f_ttemp_BalMT2.M1,
                    f_ttemp_BalMT2.M2,
                    f_ttemp_BalMT2.M3,
                    f_ttemp_BalMT2.M4,
                    f_ttemp_BalMT2.M5,
                    f_ttemp_BalMT2.M6,
                    f_ttemp_BalMT2.M7,
                    f_ttemp_BalMT2.M8,
                    f_ttemp_BalMT2.M9,
                    f_ttemp_BalMT2.M10,
                    f_ttemp_BalMT2.M11,
                    f_ttemp_BalMT2.M12
                FROM F_BalA2 INNER JOIN f_ttemp_BalMT2
                    ON f_ttemp_BalMT2.bid = F_BalA2.id
            ) AS T2
            ON T2.nr = F_BalA2.nr1
    WHERE
        F_BalA1.balid = :pbalid AND
        F_BalA2.tp = 'V'
    GROUP BY F_BalA2.id;

    vid = 1;

    FOR SELECT
        f_ttemp_BalMT2.bid AS id, -- hack
        0 AS spid,
        f_ttemp_BalMT2.bid AS bid,
        f_ttemp_BalMT2.M0 AS M0,
        f_ttemp_BalMT2.M1 AS M1,
        f_ttemp_BalMT2.M2 AS M2,
        f_ttemp_BalMT2.M3 AS M3,
        f_ttemp_BalMT2.M4 AS M4,
        f_ttemp_BalMT2.M5 AS M5,
        f_ttemp_BalMT2.M6 AS M6,
        f_ttemp_BalMT2.M7 AS M7,
        f_ttemp_BalMT2.M8 AS M8,
        f_ttemp_BalMT2.M9 AS M9,
        f_ttemp_BalMT2.M10 AS M10,
        f_ttemp_BalMT2.M11 AS M11,
        f_ttemp_BalMT2.M12 AS M12
    FROM f_ttemp_BalMT2
        INNER JOIN F_BalA2 ON f_ttemp_BalMT2.bid = F_BalA2.id
    ORDER BY F_BalA2.nr

    into
        :id, :spid, :bid, :M0, :M1, :M2, :M3, :M4, :M5, :M6, :M7, :M8, :M9, :M10, :M11, :M12
    do
    begin
        id = vid;
        vid = vid + 1;
        suspend;
    end
end
^

ALTER PROCEDURE SP_F_REP_DARZ_3(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN F_TREPDARZ1.ID,
  SPID TYPE OF COLUMN F_TREPDARZ1.SPID,
  DID TYPE OF COLUMN F_TREPDARZ1.DID,
  RID TYPE OF COLUMN F_TREPDARZ1.RID,
  DETE TYPE OF COLUMN F_TREPDARZ1.DETE,
  NRX TYPE OF COLUMN F_TREPDARZ1.NRX,
  DOCTYP TYPE OF COLUMN F_TREPDARZ1.DOCTYP,
  DOCST TYPE OF COLUMN F_TREPDARZ1.DOCST,
  DOCNR TYPE OF COLUMN F_TREPDARZ1.DOCNR,
  CLID TYPE OF COLUMN F_TREPDARZ1.CLID,
  NAME TYPE OF COLUMN F_TREPDARZ1.NAME,
  REGNR TYPE OF COLUMN F_TREPDARZ1.REGNR,
  DESCR TYPE OF COLUMN F_TREPDARZ1.DESCR,
  AC1 TYPE OF COLUMN F_TREPDARZ1.AC1,
  AC2 TYPE OF COLUMN F_TREPDARZ1.AC2,
  AA TYPE OF COLUMN F_TREPDARZ1.AA,
  A1 TYPE OF COLUMN F_TREPDARZ1.A1,
  A2 TYPE OF COLUMN F_TREPDARZ1.A2,
  A3 TYPE OF COLUMN F_TREPDARZ1.A3,
  A4 TYPE OF COLUMN F_TREPDARZ1.A4,
  A5 TYPE OF COLUMN F_TREPDARZ1.A5,
  A6 TYPE OF COLUMN F_TREPDARZ1.A6,
  A7 TYPE OF COLUMN F_TREPDARZ1.A7,
  A8 TYPE OF COLUMN F_TREPDARZ1.A8,
  A9 TYPE OF COLUMN F_TREPDARZ1.A9,
  A10 TYPE OF COLUMN F_TREPDARZ1.A10,
  A11 TYPE OF COLUMN F_TREPDARZ1.A11,
  A12 TYPE OF COLUMN F_TREPDARZ1.A12,
  A13 TYPE OF COLUMN F_TREPDARZ1.A13,
  A14 TYPE OF COLUMN F_TREPDARZ1.A14,
  A15 TYPE OF COLUMN F_TREPDARZ1.A15,
  A16 TYPE OF COLUMN F_TREPDARZ1.A16,
  A17 TYPE OF COLUMN F_TREPDARZ1.A17,
  A18 TYPE OF COLUMN F_TREPDARZ1.A18)
AS
begin
    FOR SELECT
        gen_id(GEN_F_TREPDARZ1_ID, 1) AS id,
        current_connection AS spid,
        DocId AS did,
        0 AS rid,
        MAX(Dete) AS Dete,
        MAX(NrX) AS NrX,
        MAX(F_DocTyp.id1) AS DocTyp,
        MAX(DocSt) AS DocSt,
        MAX(DocNr) AS DocNr,
        MAX(F_OPSd.clid) AS clid,
        MAX(F_Persons.name) AS Name,
        MAX(F_Persons.regnr) AS RegNr,
        MAX(F_OPSd.descr) AS Descr,

        null AS AC1,
        null AS AC2,
        null AS AA,

        SUM(CASE WHEN AC13 = 'KA' THEN F_OPS.Summ ELSE 0.00 END) AS A1,
        SUM(CASE WHEN AC23 = 'KA' THEN F_OPS.Summ ELSE 0.00 END) AS A2,
        
        SUM(CASE WHEN AC13 = 'BA' THEN F_OPS.Summ ELSE 0.00 END) AS A3,
        SUM(CASE WHEN AC23 = 'BA' THEN F_OPS.Summ ELSE 0.00 END) AS A4,
        
        SUM(CASE WHEN AC13 = 'CN' THEN F_OPS.Summ ELSE 0.00 END) AS A5,
        SUM(CASE WHEN AC23 = 'CN' THEN F_OPS.Summ ELSE 0.00 END) AS A6,

        SUM(CASE WHEN AC23 = 'LIE' OR AC23 = 'SUB' THEN F_OPS.Summ ELSE 0.00 END) AS A7,
        SUM(CASE WHEN AC23 = 'NIE' THEN F_OPS.Summ ELSE 0.00 END) AS A8,
        SUM(CASE WHEN AC23 = 'ZIE' OR AC23 = 'CIE' THEN F_OPS.Summ ELSE 0.00 END) AS A9,

        SUM(CASE WHEN AC13 = 'DIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A10,
        SUM(CASE WHEN AC13 = 'MIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A11,
        SUM(CASE WHEN AC13 = 'LIZ' OR AC13 = 'NIZ' OR AC13 = 'PIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A12,
        SUM(CASE WHEN AC13 = 'ZIZ' OR AC13 = 'CIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A13,
        
        0 AS A14,
        0 AS A15,
        0 AS A16,
        0 AS A17,
        0 AS A18

    FROM
        F_OPSd JOIN F_OPS ON F_OPSd.id = F_OPS.DocId
        LEFT JOIN f_persons ON F_OPSd.clid = F_Persons.clid
        LEFT JOIN f_doctyp ON F_OPSd.doctyp = f_doctyp.id
    WHERE
        F_OPSd.Dete BETWEEN :sdt AND :edt AND
        F_OPS.AC13 IS NOT NULL AND
        F_OPS.AC23 IS NOT NULL
    GROUP BY DocId
    ORDER BY Dete, did

    into
        :id, :spid, :did, :rid, :DETE, :nrx,
        :doctyp, :docst, :docnr, :clid, :name, :regnr,
        :descr, :ac1, :ac2, :aa,
        :a1, :a2, :a3, :a4, :a5, :a6, :a7, :a8,
        :a9, :a10, :a11, :a12, :a13, :a14, :a15,
        :a16, :a17, :a18
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_F_REP_DARZ_4(
  SDT DATE,
  EDT DATE)
RETURNS (
  ID TYPE OF COLUMN F_TREPDARZ2.ID,
  SPID TYPE OF COLUMN F_TREPDARZ2.SPID,
  RID0 TYPE OF COLUMN F_TREPDARZ2.RID0,
  A1 TYPE OF COLUMN F_TREPDARZ2.A1,
  A2 TYPE OF COLUMN F_TREPDARZ2.A2,
  A3 TYPE OF COLUMN F_TREPDARZ2.A3,
  A4 TYPE OF COLUMN F_TREPDARZ2.A4,
  A5 TYPE OF COLUMN F_TREPDARZ2.A5,
  A6 TYPE OF COLUMN F_TREPDARZ2.A6,
  A7 TYPE OF COLUMN F_TREPDARZ2.A7,
  A8 TYPE OF COLUMN F_TREPDARZ2.A8,
  A9 TYPE OF COLUMN F_TREPDARZ2.A9,
  A10 TYPE OF COLUMN F_TREPDARZ2.A10,
  A11 TYPE OF COLUMN F_TREPDARZ2.A11,
  A12 TYPE OF COLUMN F_TREPDARZ2.A12,
  A13 TYPE OF COLUMN F_TREPDARZ2.A13,
  A14 TYPE OF COLUMN F_TREPDARZ2.A14,
  A15 TYPE OF COLUMN F_TREPDARZ2.A15,
  A16 TYPE OF COLUMN F_TREPDARZ2.A16,
  A17 TYPE OF COLUMN F_TREPDARZ2.A17,
  A18 TYPE OF COLUMN F_TREPDARZ2.A18,
  A19 TYPE OF COLUMN F_TREPDARZ2.A19,
  A20 TYPE OF COLUMN F_TREPDARZ2.A20,
  A21 TYPE OF COLUMN F_TREPDARZ2.A21)
AS
begin
    FOR SELECT
        gen_id(GEN_F_TREPDARZ2_ID, 1) AS id,
        current_connection AS spid,
        coalesce(T2.rid0, 0) AS rid0,
        coalesce(T1.A1, 0.00) AS A1,
        coalesce(T1.A2, 0.00) AS A2,
        coalesce(T1.A3, 0.00) AS A3,
        coalesce(T1.A4, 0.00) AS A4,
        coalesce(T1.A5, 0.00) AS A5,
        coalesce(T1.A6, 0.00) AS A6,
        coalesce(T2.A7, 0.00) AS A7,
        coalesce(T2.A8, 0.00) AS A8,
        coalesce(T2.A9, 0.00) AS A9,
        coalesce(T2.A10, 0.00) AS A10,
        coalesce(T2.A11, 0.00) AS A11,
        coalesce(T2.A12, 0.00) AS A12,
        coalesce(T2.A13, 0.00) AS A13,
        0.00 AS A14,
        0.00 AS A15,
        0.00 AS A16,
        coalesce(T3.A17, 0.00) AS A17,
        coalesce(T3.A18, 0.00) AS A18,
        coalesce(T3.A19, 0.00) AS A19,
        0.00 AS A20,
        0.00 AS A21

    FROM
        (SELECT
            SUM(CASE WHEN AC13 = 'KA' THEN F_OPS.Summ ELSE 0.00 END) AS A1,
            SUM(CASE WHEN AC23 = 'KA' THEN F_OPS.Summ ELSE 0.00 END) AS A2,
        
            SUM(CASE WHEN AC13 = 'BA' THEN F_OPS.Summ ELSE 0.00 END) AS A3,
            SUM(CASE WHEN AC23 = 'BA' THEN F_OPS.Summ ELSE 0.00 END) AS A4,
        
            SUM(CASE WHEN AC13 = 'CN' THEN F_OPS.Summ ELSE 0.00 END) AS A5,
            SUM(CASE WHEN AC23 = 'CN' THEN F_OPS.Summ ELSE 0.00 END) AS A6

        FROM
            F_OPSd JOIN F_OPS ON F_OPSd.id = F_OPS.DocId

        WHERE
            F_OPSd.Dete <= :edt AND
            F_OPS.AC13 IS NOT NULL AND
            F_OPS.AC23 IS NOT NULL

        ) AS T1,

        (SELECT
            COUNT(DISTINCT DocId) rid0,

            SUM(CASE WHEN AC23 = 'LIE' OR AC23 = 'SUB' THEN F_OPS.Summ ELSE 0.00 END) AS A7,
            SUM(CASE WHEN AC23 = 'NIE' THEN F_OPS.Summ ELSE 0.00 END) AS A8,
            SUM(CASE WHEN AC23 = 'ZIE' OR AC23 = 'CIE' THEN F_OPS.Summ ELSE 0.00 END) AS A9,

            SUM(CASE WHEN AC13 = 'DIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A10,
            SUM(CASE WHEN AC13 = 'MIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A11,
            SUM(CASE WHEN AC13 = 'LIZ' OR AC13 = 'NIZ' OR AC13 = 'PIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A12,
            SUM(CASE WHEN AC13 = 'ZIZ' OR AC13 = 'CIZ' THEN F_OPS.Summ ELSE 0.00 END) AS A13

        FROM
            F_OPSd JOIN F_OPS ON F_OPSd.id = F_OPS.DocId

        WHERE
            F_OPSd.Dete BETWEEN :sdt AND :edt AND
            F_OPS.AC13 IS NOT NULL AND
            F_OPS.AC23 IS NOT NULL

        ) AS T2,

        (SELECT 
            SUM(CASE WHEN F_AcP21.id1 = 'KA'
                THEN F_Bal0.SummD - F_Bal0.SummC ELSE 0.00 END) AS A17,
            SUM(CASE WHEN F_AcP21.id1 = 'BA'
                THEN F_Bal0.SummD - F_Bal0.SummC ELSE 0.00 END) AS A18,
            SUM(CASE WHEN F_AcP21.id1 = 'CN'
                THEN F_Bal0.SummD - F_Bal0.SummC ELSE 0.00 END) AS A19

        FROM F_Bal0
            INNER JOIN F_AcP21 ON F_Bal0.AC11 = F_AcP21.AC
        WHERE F_AcP21.id1 IN ('KA','BA','CN')
        ) AS T3


    into
        :id, :spid, :rid0,
        :a1, :a2, :a3, :a4, :a5, :a6, :a7, :a8, :a9, :a10,
        :a11, :a12, :a13, :a14, :a15, :a16, :a17, :a18, :a19,
        :a20, :a21
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_M_FILTER_DOCS_01(
  PDT1 DATE,
  PDT2 DATE,
  PTP INTEGER,
  PSTATE INTEGER,
  PIDSTOREOUT INTEGER,
  PIDSTOREIN INTEGER,
  PIDSTOREOUTORIN INTEGER)
RETURNS (
  ID TYPE OF COLUMN M_DOCS.ID,
  DT TYPE OF COLUMN M_DOCS.DT,
  SR TYPE OF COLUMN M_DOCS.SR,
  NR TYPE OF COLUMN M_DOCS.NR,
  TP TYPE OF COLUMN M_DOCS.TP,
  PVNTYPE TYPE OF COLUMN M_DOCS.PVNTYPE,
  STATE TYPE OF COLUMN M_DOCS.STATE,
  IDSTOREIN TYPE OF COLUMN M_DOCS.IDSTOREIN,
  IDSTOREOUT TYPE OF COLUMN M_DOCS.IDSTOREOUT,
  IDCREDDOC TYPE OF COLUMN M_DOCS.IDCREDDOC,
  CREDDOCDT TYPE OF COLUMN M_DOCS.CREDDOCDT,
  SUMM TYPE OF COLUMN M_DOCS.SUMM,
  IDSEQ TYPE OF COLUMN M_DOCS.IDSEQ,
  ACCIN TYPE OF COLUMN M_DOCS.ACCIN,
  ACCOUT TYPE OF COLUMN M_DOCS.ACCOUT,
  CREDDOCSR TYPE OF COLUMN M_DOCS.CREDDOCSR,
  CREDDOCNR TYPE OF COLUMN M_DOCS.CREDDOCNR,
  IDCARRIER TYPE OF COLUMN M_DOCS.IDCARRIER,
  IDADDRESSOUT TYPE OF COLUMN M_DOCS.IDADDRESSOUT,
  IDADDRESSIN TYPE OF COLUMN M_DOCS.IDADDRESSIN,
  IDVEHICLE TYPE OF COLUMN M_DOCS.IDVEHICLE,
  IDTRANSACTIONTYPE TYPE OF COLUMN M_DOCS.IDTRANSACTIONTYPE,
  IDPAYMENTTYPE TYPE OF COLUMN M_DOCS.IDPAYMENTTYPE,
  IDDRIVER TYPE OF COLUMN M_DOCS.IDDRIVER,
  ACCOUNTINGTP TYPE OF COLUMN M_DOCS.ACCOUNTINGTP,
  ACCTP1 TYPE OF COLUMN M_DOCS.ACCTP1,
  ACCTP2 TYPE OF COLUMN M_DOCS.ACCTP2,
  WEVATPAYER TYPE OF COLUMN M_DOCS.WEVATPAYER,
  DUEDATE TYPE OF COLUMN M_DOCS.DUEDATE,
  TS TYPE OF COLUMN M_DOCS.TS)
AS
begin
    for select
         id,
         dt,
         sr,
         nr,
         tp,
         pvntype,
         state,
         idstorein,
         idstoreout,
         idcreddoc,
         creddocdt,
         summ,
         idseq,
         accin,
         accout,
         creddocsr,
         creddocnr,
         idcarrier,
         idaddressout,
         idaddressin,
         idvehicle,
         idtransactiontype,
         idpaymenttype,
         iddriver,
         accountingtp,
         acctp1,
         acctp2,
         wevatpayer,
         duedate,
         ts
      from m_docs
      where (:pdt1 is null or dt >= :pdt1) and
          (:pdt2 is null or dt <= :pdt2) and
          (:ptp is null or tp = :ptp) and
          (:pstate is null or state = :pstate) and
          (
            (:pidstoreoutorin is null and
                (:pidstoreout is null or idstoreout = :pidstoreout) and
                (:pidstorein is null or idstorein = :pidstorein)
            ) or
            (:pidstoreoutorin is not null and
                (idstoreout = :pidstoreoutorin or
                idstorein = :pidstoreoutorin)
            )
          )
      order by dt, idseq, id
      into :id,
           :dt,
           :sr,
           :nr,
           :tp,
           :pvntype,
           :state,
           :idstorein,
           :idstoreout,
           :idcreddoc,
           :creddocdt,
           :summ,
           :idseq,
           :accin,
           :accout,
           :creddocsr,
           :creddocnr,
           :idcarrier,
           :idaddressout,
           :idaddressin,
           :idvehicle,
           :idtransactiontype,
           :idpaymenttype,
           :iddriver,
           :accountingtp,
           :acctp1,
           :acctp2,
           :wevatpayer,
           :duedate,
           :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_M_FILTER_DOCS_02(
  PIDDOC INTEGER)
RETURNS (
  ID TYPE OF COLUMN M_DOCS.ID,
  DT TYPE OF COLUMN M_DOCS.DT,
  SR TYPE OF COLUMN M_DOCS.SR,
  NR TYPE OF COLUMN M_DOCS.NR,
  TP TYPE OF COLUMN M_DOCS.TP,
  PVNTYPE TYPE OF COLUMN M_DOCS.PVNTYPE,
  STATE TYPE OF COLUMN M_DOCS.STATE,
  IDSTOREIN TYPE OF COLUMN M_DOCS.IDSTOREIN,
  IDSTOREOUT TYPE OF COLUMN M_DOCS.IDSTOREOUT,
  IDCREDDOC TYPE OF COLUMN M_DOCS.IDCREDDOC,
  CREDDOCDT TYPE OF COLUMN M_DOCS.CREDDOCDT,
  SUMM TYPE OF COLUMN M_DOCS.SUMM,
  IDSEQ TYPE OF COLUMN M_DOCS.IDSEQ,
  ACCIN TYPE OF COLUMN M_DOCS.ACCIN,
  ACCOUT TYPE OF COLUMN M_DOCS.ACCOUT,
  CREDDOCSR TYPE OF COLUMN M_DOCS.CREDDOCSR,
  CREDDOCNR TYPE OF COLUMN M_DOCS.CREDDOCNR,
  IDCARRIER TYPE OF COLUMN M_DOCS.IDCARRIER,
  IDADDRESSOUT TYPE OF COLUMN M_DOCS.IDADDRESSOUT,
  IDADDRESSIN TYPE OF COLUMN M_DOCS.IDADDRESSIN,
  IDVEHICLE TYPE OF COLUMN M_DOCS.IDVEHICLE,
  IDTRANSACTIONTYPE TYPE OF COLUMN M_DOCS.IDTRANSACTIONTYPE,
  IDPAYMENTTYPE TYPE OF COLUMN M_DOCS.IDPAYMENTTYPE,
  IDDRIVER TYPE OF COLUMN M_DOCS.IDDRIVER,
  ACCOUNTINGTP TYPE OF COLUMN M_DOCS.ACCOUNTINGTP,
  ACCTP1 TYPE OF COLUMN M_DOCS.ACCTP1,
  ACCTP2 TYPE OF COLUMN M_DOCS.ACCTP2,
  WEVATPAYER TYPE OF COLUMN M_DOCS.WEVATPAYER,
  DUEDATE TYPE OF COLUMN M_DOCS.DUEDATE,
  TS TYPE OF COLUMN M_DOCS.TS)
AS
begin
    for select
         id,
         dt,
         sr,
         nr,
         tp,
         pvntype,
         state,
         idstorein,
         idstoreout,
         idcreddoc,
         creddocdt,
         summ,
         idseq,
         accin,
         accout,
         creddocsr,
         creddocnr,
         idcarrier,
         idaddressout,
         idaddressin,
         idvehicle,
         idtransactiontype,
         idpaymenttype,
         iddriver,
         accountingtp,
         acctp1,
         acctp2,
         wevatpayer,
         duedate,
         ts
      from m_docs
      where id = :piddoc
      order by dt, idseq, id
      into :id,
           :dt,
           :sr,
           :nr,
           :tp,
           :pvntype,
           :state,
           :idstorein,
           :idstoreout,
           :idcreddoc,
           :creddocdt,
           :summ,
           :idseq,
           :accin,
           :accout,
           :creddocsr,
           :creddocnr,
           :idcarrier,
           :idaddressout,
           :idaddressin,
           :idvehicle,
           :idtransactiontype,
           :idpaymenttype,
           :iddriver,
           :accountingtp,
           :acctp1,
           :acctp2,
           :wevatpayer,
           :duedate,
           :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_M_FILTER_INVDOCS_1(
  PDT1 DATE,
  PDT2 DATE,
  PSTATE INTEGER,
  PIDSTORE INTEGER)
RETURNS (
  ID TYPE OF COLUMN M_INV_DOCS.ID,
  DT TYPE OF COLUMN M_INV_DOCS.DT,
  NR TYPE OF COLUMN M_INV_DOCS.NR,
  STATE TYPE OF COLUMN M_INV_DOCS.STATE,
  IDSTORE TYPE OF COLUMN M_INV_DOCS.IDSTORE,
  PERSONS TYPE OF COLUMN M_INV_DOCS.PERSONS,
  TS TYPE OF COLUMN M_INV_DOCS.TS)
AS
begin
    for select
         id,
         dt,
         nr,
         state,
         idstore,
         persons,
         ts
      from m_inv_docs
      where (:pdt1 is null or dt >= :pdt1) and
          (:pdt2 is null or dt <= :pdt2) and
          (:pstate is null or state = :pstate) and
          (:pidstore is null or idstore = :pidstore)
      order by dt, nr, id
      into :id,
           :dt,
           :nr,
           :state,
           :idstore,
           :persons,
           :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_M_FILTER_INVROWS_1(
  PIDDOC INTEGER)
RETURNS (
  ID TYPE OF COLUMN M_INV_ROWS.ID,
  IDDOC TYPE OF COLUMN M_INV_ROWS.IDDOC,
  IDITEM TYPE OF COLUMN M_INV_ROWS.IDITEM,
  IDUNITS TYPE OF COLUMN M_INV_ROWS.IDUNITS,
  AM_COUNTED_1 TYPE OF COLUMN M_INV_ROWS.AM_COUNTED_1,
  AM_COUNTED_2 TYPE OF COLUMN M_INV_ROWS.AM_COUNTED_2,
  AM_CALC TYPE OF COLUMN M_INV_ROWS.AM_CALC,
  AM_DIFF TYPE OF COLUMN M_INV_ROWS.AM_DIFF,
  TS TYPE OF COLUMN M_INV_ROWS.TS)
AS
begin
    for select
        id,
        iddoc,
        iditem,
        idunits,
        am_counted_1,
        am_counted_2,
        am_calc,
        am_diff,
        ts
      from m_inv_rows
      where iddoc = :piddoc
      order by id
      into
        :id,
        :iddoc,
        :iditem,
        :idunits,
        :am_counted_1,
        :am_counted_2,
        :am_calc,
        :am_diff,
        :ts
  do
  begin
    suspend;
  end
end
^

ALTER PROCEDURE SP_M_FILTER_ITEMS_01(
  PIDDOC INTEGER)
RETURNS (
  ID TYPE OF COLUMN M_ITEMS.ID,
  BARCODE TYPE OF COLUMN M_ITEMS.BARCODE,
  NAME TYPE OF COLUMN M_ITEMS.NAME,
  CAT TYPE OF COLUMN M_ITEMS.CAT,
  UNITS TYPE OF COLUMN M_ITEMS.UNITS,
  STORE1 TYPE OF COLUMN M_ITEMS.STORE1,
  PVNRATE TYPE OF COLUMN M_ITEMS.PVNRATE,
  ISSERVICE TYPE OF COLUMN M_ITEMS.ISSERVICE,
  ISPRODUCED TYPE OF COLUMN M_ITEMS.ISPRODUCED,
  SELLPRICE TYPE OF COLUMN M_ITEMS.SELLPRICE,
  BUYPRICE TYPE OF COLUMN M_ITEMS.BUYPRICE,
  PRODCOST TYPE OF COLUMN M_ITEMS.PRODCOST,
  LASTBUYPRICE TYPE OF COLUMN M_ITEMS.LASTBUYPRICE,
  AMOUNTINSTORE TYPE OF COLUMN M_ITEMS.AMOUNTINSTORE,
  LASTSALEDATE TYPE OF COLUMN M_ITEMS.LASTSALEDATE,
  LASTBUYDATE TYPE OF COLUMN M_ITEMS.LASTBUYDATE,
  TS TYPE OF COLUMN M_ITEMS.TS)
AS
begin
    for select
        m_items.id,
        m_items.barcode,
        m_items.name,
        m_items.cat,
        m_items.units,
        m_items.store1,
        m_items.pvnrate,
        m_items.isservice,
        m_items.isproduced,
        m_items.sellprice,
        m_items.buyprice,
        m_items.prodcost,
        m_items.lastbuyprice,
        m_items.amountinstore,
        m_items.lastsaledate,
        m_items.lastbuydate,
        m_items.ts
    from m_items
    join m_rows on m_rows.iddoc = :piddoc
    into
        :id,
        :barcode,
        :name,
        :cat,
        :units,
        :store1,
        :pvnrate,
        :isservice,
        :isproduced,
        :sellprice,
        :buyprice,
        :prodcost,
        :lastbuyprice,
        :amountinstore,
        :lastsaledate,
        :lastbuydate,
        :ts
    do
        begin
    suspend;
end
end
^

ALTER PROCEDURE SP_M_FILTER_ITEMS_PER_STORE_01(
  PIDDOC INTEGER)
RETURNS (
  IDITEM TYPE OF COLUMN M_ITEMS_PER_STORE.IDITEM,
  IDSTORE TYPE OF COLUMN M_ITEMS_PER_STORE.IDSTORE,
  AMOUNT TYPE OF COLUMN M_ITEMS_PER_STORE.AMOUNT,
  TS TYPE OF COLUMN M_ITEMS_PER_STORE.TS)
AS
begin
    for select
        m_items_per_store.iditem,
        m_items_per_store.idstore,
        m_items_per_store.amount,
        m_items_per_store.ts
    from m_items_per_store
    join m_rows on m_rows.iddoc = :piddoc and
        m_rows.iditem = m_items_per_store.iditem
    into
        :iditem,
        :idstore,
        :amount,
        :ts
    do
    begin
        suspend;
    end
end
^

ALTER PROCEDURE SP_M_FILTER_ROWS_01(
  PIDDOC INTEGER)
RETURNS (
  ID TYPE OF COLUMN M_ROWS.ID,
  IDDOC TYPE OF COLUMN M_ROWS.IDDOC,
  IDITEM TYPE OF COLUMN M_ROWS.IDITEM,
  IDPVNRATE TYPE OF COLUMN M_ROWS.IDPVNRATE,
  UNITS TYPE OF COLUMN M_ROWS.UNITS,
  IDCREDROW TYPE OF COLUMN M_ROWS.IDCREDROW,
  AMOUNT TYPE OF COLUMN M_ROWS.AMOUNT,
  DISCOUNT TYPE OF COLUMN M_ROWS.DISCOUNT,
  PRICE0 TYPE OF COLUMN M_ROWS.PRICE0,
  PRICE TYPE OF COLUMN M_ROWS.PRICE,
  BUYPRICE TYPE OF COLUMN M_ROWS.BUYPRICE,
  OLDPRICE TYPE OF COLUMN M_ROWS.OLDPRICE,
  TOLDPRICE TYPE OF COLUMN M_ROWS.TOLDPRICE,
  TPRICE TYPE OF COLUMN M_ROWS.TPRICE,
  TBUYPRICE TYPE OF COLUMN M_ROWS.TBUYPRICE,
  IDSEQ TYPE OF COLUMN M_ROWS.IDSEQ,
  ACC6 TYPE OF COLUMN M_ROWS.ACC6,
  ACC7 TYPE OF COLUMN M_ROWS.ACC7,
  TS TYPE OF COLUMN M_ROWS.TS)
AS
begin
    for select
        id,
        iddoc,
        iditem,
        idpvnrate,
        units,
        idcredrow,
        amount,
        discount,
        price0,
        price,
        buyprice,
        oldprice,
        toldprice,
        tprice,
        tbuyprice,
        idseq,
        acc6,
        acc7,
        ts
    from m_rows
    where iddoc = :piddoc
    order by idseq, id
    into
        :id,
        :iddoc,
        :iditem,
        :idpvnrate,
        :units,
        :idcredrow,
        :amount,
        :discount,
        :price0,
        :price,
        :buyprice,
        :oldprice,
        :toldprice,
        :tprice,
        :tbuyprice,
        :idseq,
        :acc6,
        :acc7,
        :ts
  do
  begin
    suspend;
  end
end
^


/******************************************************************************/
/****                     Granting missing privileges                      ****/
/******************************************************************************/
SET TERM ; ^

GRANT EXECUTE ON PROCEDURE SP_F_OPS_DELETE_2 TO KLONS WITH GRANT OPTION;

GRANT EXECUTE ON PROCEDURE SP_F_OPS_UPDATE_2 TO KLONS WITH GRANT OPTION;

GRANT EXECUTE ON PROCEDURE SP_F_OPSD_UPDATE_2 TO KLONS WITH GRANT OPTION;

GRANT EXECUTE ON PROCEDURE SP_F_OPSD_DELETE_2 TO KLONS WITH GRANT OPTION;

GRANT EXECUTE ON PROCEDURE SP_F_OPS_DELETE_2 TO ROLE USERS;

GRANT EXECUTE ON PROCEDURE SP_F_OPS_UPDATE_2 TO ROLE USERS;

GRANT EXECUTE ON PROCEDURE SP_F_OPSD_UPDATE_2 TO ROLE USERS;

GRANT EXECUTE ON PROCEDURE SP_F_OPSD_DELETE_2 TO ROLE USERS;

GRANT EXECUTE ON PROCEDURE SP_F_ZDT_OPS_SET TO ROLE USERS;

GRANT EXECUTE ON PROCEDURE SP_F_ZDT_OPSD_SET TO ROLE USERS;

  
UPDATE Params
SET PVALUE = '301'
WHERE PNAME = 'version';
